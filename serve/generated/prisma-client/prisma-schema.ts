// Code generated by Prisma (prisma@1.32.2). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

export const typeDefs = /* GraphQL */ `type AggregateChongduAccount {
  count: Int!
}

type AggregateChongduAddress {
  count: Int!
}

type AggregateChongduAddressRelation {
  count: Int!
}

type AggregateChongduAdmin {
  count: Int!
}

type AggregateChongduAdminRole {
  count: Int!
}

type AggregateChongduAdvertisement {
  count: Int!
}

type AggregateChongduAdvice {
  count: Int!
}

type AggregateChongduAgent {
  count: Int!
}

type AggregateChongduAppointment {
  count: Int!
}

type AggregateChongduAppVersion {
  count: Int!
}

type AggregateChongduCart {
  count: Int!
}

type AggregateChongduCity {
  count: Int!
}

type AggregateChongduComment {
  count: Int!
}

type AggregateChongduCommentPraise {
  count: Int!
}

type AggregateChongduCommentReply {
  count: Int!
}

type AggregateChongduCommentReview {
  count: Int!
}

type AggregateChongduCompanyauthent {
  count: Int!
}

type AggregateChongduCompanyauthentLog {
  count: Int!
}

type AggregateChongduCompanyrecommend {
  count: Int!
}

type AggregateChongduCorrelation {
  count: Int!
}

type AggregateChongduDataVersion {
  count: Int!
}

type AggregateChongduDiscuss {
  count: Int!
}

type AggregateChongduFilemanage {
  count: Int!
}

type AggregateChongduFocusing {
  count: Int!
}

type AggregateChongduInform {
  count: Int!
}

type AggregateChongduLock {
  count: Int!
}

type AggregateChongduLog {
  count: Int!
}

type AggregateChongduLoginLog {
  count: Int!
}

type AggregateChongduMenu {
  count: Int!
}

type AggregateChongduMerchant {
  count: Int!
}

type AggregateChongduMerchantImg {
  count: Int!
}

type AggregateChongduMerchantstatistic {
  count: Int!
}

type AggregateChongduMessage {
  count: Int!
}

type AggregateChongduModel {
  count: Int!
}

type AggregateChongduModeldetail {
  count: Int!
}

type AggregateChongduOrder {
  count: Int!
}

type AggregateChongduOrderinvoice {
  count: Int!
}

type AggregateChongduOrderinvoicedetail {
  count: Int!
}

type AggregateChongduOrderItem {
  count: Int!
}

type AggregateChongduOrderserial {
  count: Int!
}

type AggregateChongduOrderstatistic {
  count: Int!
}

type AggregateChongduPayInfo {
  count: Int!
}

type AggregateChongduPermission {
  count: Int!
}

type AggregateChongduPet {
  count: Int!
}

type AggregateChongduPetauthentdetail {
  count: Int!
}

type AggregateChongduPetauthentLog {
  count: Int!
}

type AggregateChongduPetCard {
  count: Int!
}

type AggregateChongduPetImg {
  count: Int!
}

type AggregateChongduPetRecommend {
  count: Int!
}

type AggregateChongduPetType {
  count: Int!
}

type AggregateChongduPlatformBusiness {
  count: Int!
}

type AggregateChongduPlatformExecute {
  count: Int!
}

type AggregateChongduProduct {
  count: Int!
}

type AggregateChongduProductAuthentdetail {
  count: Int!
}

type AggregateChongduProductauthentLog {
  count: Int!
}

type AggregateChongduProductBrand {
  count: Int!
}

type AggregateChongduProductImg {
  count: Int!
}

type AggregateChongduProductPettype {
  count: Int!
}

type AggregateChongduProductRecommend {
  count: Int!
}

type AggregateChongduProductSku {
  count: Int!
}

type AggregateChongduProductType {
  count: Int!
}

type AggregateChongduRecommend {
  count: Int!
}

type AggregateChongduRefresh {
  count: Int!
}

type AggregateChongduRepellent {
  count: Int!
}

type AggregateChongduRole {
  count: Int!
}

type AggregateChongduRoleAuth {
  count: Int!
}

type AggregateChongduRoleDetail {
  count: Int!
}

type AggregateChongduRoleGroup {
  count: Int!
}

type AggregateChongduRoleMenu {
  count: Int!
}

type AggregateChongduRoleMenuChildren {
  count: Int!
}

type AggregateChongduSearchthink {
  count: Int!
}

type AggregateChongduService {
  count: Int!
}

type AggregateChongduServiceAuthentdetail {
  count: Int!
}

type AggregateChongduServiceauthentLog {
  count: Int!
}

type AggregateChongduServiceImg {
  count: Int!
}

type AggregateChongduServicePettype {
  count: Int!
}

type AggregateChongduServiceRecommend {
  count: Int!
}

type AggregateChongduServiceType {
  count: Int!
}

type AggregateChongduStat {
  count: Int!
}

type AggregateChongduTag {
  count: Int!
}

type AggregateChongduTagDetail {
  count: Int!
}

type AggregateChongduTradingArea {
  count: Int!
}

type AggregateChongduUser {
  count: Int!
}

type AggregateChongduUserauthent {
  count: Int!
}

type AggregateChongduUserauthentLog {
  count: Int!
}

type AggregateChongduUserbind {
  count: Int!
}

type AggregateChongduUserdetail {
  count: Int!
}

type AggregateChongduUserFavourite {
  count: Int!
}

type AggregateChongduUserstatistic {
  count: Int!
}

type AggregateChongduVaccine {
  count: Int!
}

type AggregateChongduVaccineBrand {
  count: Int!
}

type AggregateChongduValidate {
  count: Int!
}

type AggregateChongduVersion {
  count: Int!
}

type AggregateChongduViewcount {
  count: Int!
}

type AggregateChongduWorld {
  count: Int!
}

type AggregateChongduWorldComment {
  count: Int!
}

type AggregateChongduWorldJoin {
  count: Int!
}

type AggregateChongduWorldLike {
  count: Int!
}

type AggregateChongduWorldReply {
  count: Int!
}

type AggregateChongduWorldShield {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type ChongduAccount {
  id: Int!
  d: Int
  favorNum: Int
  isVip: Int
  level: Int
  merchantId: String
  money: Float
  refreshNum: Int
  stickNum: Int
  type: Int
  userId: String
}

type ChongduAccountConnection {
  pageInfo: PageInfo!
  edges: [ChongduAccountEdge]!
  aggregate: AggregateChongduAccount!
}

input ChongduAccountCreateInput {
  id: Int
  d: Int
  favorNum: Int
  isVip: Int
  level: Int
  merchantId: String
  money: Float
  refreshNum: Int
  stickNum: Int
  type: Int
  userId: String
}

type ChongduAccountEdge {
  node: ChongduAccount!
  cursor: String!
}

enum ChongduAccountOrderByInput {
  id_ASC
  id_DESC
  d_ASC
  d_DESC
  favorNum_ASC
  favorNum_DESC
  isVip_ASC
  isVip_DESC
  level_ASC
  level_DESC
  merchantId_ASC
  merchantId_DESC
  money_ASC
  money_DESC
  refreshNum_ASC
  refreshNum_DESC
  stickNum_ASC
  stickNum_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduAccountPreviousValues {
  id: Int!
  d: Int
  favorNum: Int
  isVip: Int
  level: Int
  merchantId: String
  money: Float
  refreshNum: Int
  stickNum: Int
  type: Int
  userId: String
}

type ChongduAccountSubscriptionPayload {
  mutation: MutationType!
  node: ChongduAccount
  updatedFields: [String!]
  previousValues: ChongduAccountPreviousValues
}

input ChongduAccountSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduAccountWhereInput
  AND: [ChongduAccountSubscriptionWhereInput!]
  OR: [ChongduAccountSubscriptionWhereInput!]
  NOT: [ChongduAccountSubscriptionWhereInput!]
}

input ChongduAccountUpdateInput {
  d: Int
  favorNum: Int
  isVip: Int
  level: Int
  merchantId: String
  money: Float
  refreshNum: Int
  stickNum: Int
  type: Int
  userId: String
}

input ChongduAccountUpdateManyMutationInput {
  d: Int
  favorNum: Int
  isVip: Int
  level: Int
  merchantId: String
  money: Float
  refreshNum: Int
  stickNum: Int
  type: Int
  userId: String
}

input ChongduAccountWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  favorNum: Int
  favorNum_not: Int
  favorNum_in: [Int!]
  favorNum_not_in: [Int!]
  favorNum_lt: Int
  favorNum_lte: Int
  favorNum_gt: Int
  favorNum_gte: Int
  isVip: Int
  isVip_not: Int
  isVip_in: [Int!]
  isVip_not_in: [Int!]
  isVip_lt: Int
  isVip_lte: Int
  isVip_gt: Int
  isVip_gte: Int
  level: Int
  level_not: Int
  level_in: [Int!]
  level_not_in: [Int!]
  level_lt: Int
  level_lte: Int
  level_gt: Int
  level_gte: Int
  merchantId: String
  merchantId_not: String
  merchantId_in: [String!]
  merchantId_not_in: [String!]
  merchantId_lt: String
  merchantId_lte: String
  merchantId_gt: String
  merchantId_gte: String
  merchantId_contains: String
  merchantId_not_contains: String
  merchantId_starts_with: String
  merchantId_not_starts_with: String
  merchantId_ends_with: String
  merchantId_not_ends_with: String
  money: Float
  money_not: Float
  money_in: [Float!]
  money_not_in: [Float!]
  money_lt: Float
  money_lte: Float
  money_gt: Float
  money_gte: Float
  refreshNum: Int
  refreshNum_not: Int
  refreshNum_in: [Int!]
  refreshNum_not_in: [Int!]
  refreshNum_lt: Int
  refreshNum_lte: Int
  refreshNum_gt: Int
  refreshNum_gte: Int
  stickNum: Int
  stickNum_not: Int
  stickNum_in: [Int!]
  stickNum_not_in: [Int!]
  stickNum_lt: Int
  stickNum_lte: Int
  stickNum_gt: Int
  stickNum_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduAccountWhereInput!]
  OR: [ChongduAccountWhereInput!]
  NOT: [ChongduAccountWhereInput!]
}

input ChongduAccountWhereUniqueInput {
  id: Int
}

type ChongduAddress {
  id: Int!
  city: String
  code: String
  country: String
  ct: String
  d: Int
  detailAdd: String
  mt: String
  name: String
  province: String
  region: String
  sort: Int
  status: Int
  tel: String
  userId: String
}

type ChongduAddressConnection {
  pageInfo: PageInfo!
  edges: [ChongduAddressEdge]!
  aggregate: AggregateChongduAddress!
}

input ChongduAddressCreateInput {
  id: Int
  city: String
  code: String
  country: String
  ct: String
  d: Int
  detailAdd: String
  mt: String
  name: String
  province: String
  region: String
  sort: Int
  status: Int
  tel: String
  userId: String
}

type ChongduAddressEdge {
  node: ChongduAddress!
  cursor: String!
}

enum ChongduAddressOrderByInput {
  id_ASC
  id_DESC
  city_ASC
  city_DESC
  code_ASC
  code_DESC
  country_ASC
  country_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  detailAdd_ASC
  detailAdd_DESC
  mt_ASC
  mt_DESC
  name_ASC
  name_DESC
  province_ASC
  province_DESC
  region_ASC
  region_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  tel_ASC
  tel_DESC
  userId_ASC
  userId_DESC
}

type ChongduAddressPreviousValues {
  id: Int!
  city: String
  code: String
  country: String
  ct: String
  d: Int
  detailAdd: String
  mt: String
  name: String
  province: String
  region: String
  sort: Int
  status: Int
  tel: String
  userId: String
}

type ChongduAddressRelation {
  id: Int!
  city: String
  code: String
  country: String
  ct: String
  d: Int
  detailAdd: String
  mt: String
  name: String
  province: String
  region: String
  sort: Int
  status: Int
  tel: String
  userId: String
}

type ChongduAddressRelationConnection {
  pageInfo: PageInfo!
  edges: [ChongduAddressRelationEdge]!
  aggregate: AggregateChongduAddressRelation!
}

input ChongduAddressRelationCreateInput {
  id: Int
  city: String
  code: String
  country: String
  ct: String
  d: Int
  detailAdd: String
  mt: String
  name: String
  province: String
  region: String
  sort: Int
  status: Int
  tel: String
  userId: String
}

type ChongduAddressRelationEdge {
  node: ChongduAddressRelation!
  cursor: String!
}

enum ChongduAddressRelationOrderByInput {
  id_ASC
  id_DESC
  city_ASC
  city_DESC
  code_ASC
  code_DESC
  country_ASC
  country_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  detailAdd_ASC
  detailAdd_DESC
  mt_ASC
  mt_DESC
  name_ASC
  name_DESC
  province_ASC
  province_DESC
  region_ASC
  region_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  tel_ASC
  tel_DESC
  userId_ASC
  userId_DESC
}

type ChongduAddressRelationPreviousValues {
  id: Int!
  city: String
  code: String
  country: String
  ct: String
  d: Int
  detailAdd: String
  mt: String
  name: String
  province: String
  region: String
  sort: Int
  status: Int
  tel: String
  userId: String
}

type ChongduAddressRelationSubscriptionPayload {
  mutation: MutationType!
  node: ChongduAddressRelation
  updatedFields: [String!]
  previousValues: ChongduAddressRelationPreviousValues
}

input ChongduAddressRelationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduAddressRelationWhereInput
  AND: [ChongduAddressRelationSubscriptionWhereInput!]
  OR: [ChongduAddressRelationSubscriptionWhereInput!]
  NOT: [ChongduAddressRelationSubscriptionWhereInput!]
}

input ChongduAddressRelationUpdateInput {
  city: String
  code: String
  country: String
  ct: String
  d: Int
  detailAdd: String
  mt: String
  name: String
  province: String
  region: String
  sort: Int
  status: Int
  tel: String
  userId: String
}

input ChongduAddressRelationUpdateManyMutationInput {
  city: String
  code: String
  country: String
  ct: String
  d: Int
  detailAdd: String
  mt: String
  name: String
  province: String
  region: String
  sort: Int
  status: Int
  tel: String
  userId: String
}

input ChongduAddressRelationWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  city: String
  city_not: String
  city_in: [String!]
  city_not_in: [String!]
  city_lt: String
  city_lte: String
  city_gt: String
  city_gte: String
  city_contains: String
  city_not_contains: String
  city_starts_with: String
  city_not_starts_with: String
  city_ends_with: String
  city_not_ends_with: String
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  country: String
  country_not: String
  country_in: [String!]
  country_not_in: [String!]
  country_lt: String
  country_lte: String
  country_gt: String
  country_gte: String
  country_contains: String
  country_not_contains: String
  country_starts_with: String
  country_not_starts_with: String
  country_ends_with: String
  country_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  detailAdd: String
  detailAdd_not: String
  detailAdd_in: [String!]
  detailAdd_not_in: [String!]
  detailAdd_lt: String
  detailAdd_lte: String
  detailAdd_gt: String
  detailAdd_gte: String
  detailAdd_contains: String
  detailAdd_not_contains: String
  detailAdd_starts_with: String
  detailAdd_not_starts_with: String
  detailAdd_ends_with: String
  detailAdd_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  province: String
  province_not: String
  province_in: [String!]
  province_not_in: [String!]
  province_lt: String
  province_lte: String
  province_gt: String
  province_gte: String
  province_contains: String
  province_not_contains: String
  province_starts_with: String
  province_not_starts_with: String
  province_ends_with: String
  province_not_ends_with: String
  region: String
  region_not: String
  region_in: [String!]
  region_not_in: [String!]
  region_lt: String
  region_lte: String
  region_gt: String
  region_gte: String
  region_contains: String
  region_not_contains: String
  region_starts_with: String
  region_not_starts_with: String
  region_ends_with: String
  region_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  tel: String
  tel_not: String
  tel_in: [String!]
  tel_not_in: [String!]
  tel_lt: String
  tel_lte: String
  tel_gt: String
  tel_gte: String
  tel_contains: String
  tel_not_contains: String
  tel_starts_with: String
  tel_not_starts_with: String
  tel_ends_with: String
  tel_not_ends_with: String
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduAddressRelationWhereInput!]
  OR: [ChongduAddressRelationWhereInput!]
  NOT: [ChongduAddressRelationWhereInput!]
}

input ChongduAddressRelationWhereUniqueInput {
  id: Int
}

type ChongduAddressSubscriptionPayload {
  mutation: MutationType!
  node: ChongduAddress
  updatedFields: [String!]
  previousValues: ChongduAddressPreviousValues
}

input ChongduAddressSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduAddressWhereInput
  AND: [ChongduAddressSubscriptionWhereInput!]
  OR: [ChongduAddressSubscriptionWhereInput!]
  NOT: [ChongduAddressSubscriptionWhereInput!]
}

input ChongduAddressUpdateInput {
  city: String
  code: String
  country: String
  ct: String
  d: Int
  detailAdd: String
  mt: String
  name: String
  province: String
  region: String
  sort: Int
  status: Int
  tel: String
  userId: String
}

input ChongduAddressUpdateManyMutationInput {
  city: String
  code: String
  country: String
  ct: String
  d: Int
  detailAdd: String
  mt: String
  name: String
  province: String
  region: String
  sort: Int
  status: Int
  tel: String
  userId: String
}

input ChongduAddressWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  city: String
  city_not: String
  city_in: [String!]
  city_not_in: [String!]
  city_lt: String
  city_lte: String
  city_gt: String
  city_gte: String
  city_contains: String
  city_not_contains: String
  city_starts_with: String
  city_not_starts_with: String
  city_ends_with: String
  city_not_ends_with: String
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  country: String
  country_not: String
  country_in: [String!]
  country_not_in: [String!]
  country_lt: String
  country_lte: String
  country_gt: String
  country_gte: String
  country_contains: String
  country_not_contains: String
  country_starts_with: String
  country_not_starts_with: String
  country_ends_with: String
  country_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  detailAdd: String
  detailAdd_not: String
  detailAdd_in: [String!]
  detailAdd_not_in: [String!]
  detailAdd_lt: String
  detailAdd_lte: String
  detailAdd_gt: String
  detailAdd_gte: String
  detailAdd_contains: String
  detailAdd_not_contains: String
  detailAdd_starts_with: String
  detailAdd_not_starts_with: String
  detailAdd_ends_with: String
  detailAdd_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  province: String
  province_not: String
  province_in: [String!]
  province_not_in: [String!]
  province_lt: String
  province_lte: String
  province_gt: String
  province_gte: String
  province_contains: String
  province_not_contains: String
  province_starts_with: String
  province_not_starts_with: String
  province_ends_with: String
  province_not_ends_with: String
  region: String
  region_not: String
  region_in: [String!]
  region_not_in: [String!]
  region_lt: String
  region_lte: String
  region_gt: String
  region_gte: String
  region_contains: String
  region_not_contains: String
  region_starts_with: String
  region_not_starts_with: String
  region_ends_with: String
  region_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  tel: String
  tel_not: String
  tel_in: [String!]
  tel_not_in: [String!]
  tel_lt: String
  tel_lte: String
  tel_gt: String
  tel_gte: String
  tel_contains: String
  tel_not_contains: String
  tel_starts_with: String
  tel_not_starts_with: String
  tel_ends_with: String
  tel_not_ends_with: String
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduAddressWhereInput!]
  OR: [ChongduAddressWhereInput!]
  NOT: [ChongduAddressWhereInput!]
}

input ChongduAddressWhereUniqueInput {
  id: Int
}

type ChongduAdmin {
  id: ID!
  agentAdminId: String
  agentId: String
  cityCode: String
  ct: String
  d: Int
  icon: String
  ip: String
  isAuth: Int
  lastLoginTime: String
  level: Int
  mac: String
  mail: String
  mt: String
  name: String
  nickname: String
  pwd: String
  realName: String
  rt: Int
  sort: Int
  status: Int
  tel: String
  type: Int
  groupId: ChongduRoleGroup
}

type ChongduAdminConnection {
  pageInfo: PageInfo!
  edges: [ChongduAdminEdge]!
  aggregate: AggregateChongduAdmin!
}

input ChongduAdminCreateInput {
  id: ID
  agentAdminId: String
  agentId: String
  cityCode: String
  ct: String
  d: Int
  icon: String
  ip: String
  isAuth: Int
  lastLoginTime: String
  level: Int
  mac: String
  mail: String
  mt: String
  name: String
  nickname: String
  pwd: String
  realName: String
  rt: Int
  sort: Int
  status: Int
  tel: String
  type: Int
  groupId: ChongduRoleGroupCreateOneInput
}

input ChongduAdminCreateOneInput {
  create: ChongduAdminCreateInput
  connect: ChongduAdminWhereUniqueInput
}

type ChongduAdminEdge {
  node: ChongduAdmin!
  cursor: String!
}

enum ChongduAdminOrderByInput {
  id_ASC
  id_DESC
  agentAdminId_ASC
  agentAdminId_DESC
  agentId_ASC
  agentId_DESC
  cityCode_ASC
  cityCode_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  icon_ASC
  icon_DESC
  ip_ASC
  ip_DESC
  isAuth_ASC
  isAuth_DESC
  lastLoginTime_ASC
  lastLoginTime_DESC
  level_ASC
  level_DESC
  mac_ASC
  mac_DESC
  mail_ASC
  mail_DESC
  mt_ASC
  mt_DESC
  name_ASC
  name_DESC
  nickname_ASC
  nickname_DESC
  pwd_ASC
  pwd_DESC
  realName_ASC
  realName_DESC
  rt_ASC
  rt_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  tel_ASC
  tel_DESC
  type_ASC
  type_DESC
}

type ChongduAdminPreviousValues {
  id: ID!
  agentAdminId: String
  agentId: String
  cityCode: String
  ct: String
  d: Int
  icon: String
  ip: String
  isAuth: Int
  lastLoginTime: String
  level: Int
  mac: String
  mail: String
  mt: String
  name: String
  nickname: String
  pwd: String
  realName: String
  rt: Int
  sort: Int
  status: Int
  tel: String
  type: Int
}

type ChongduAdminRole {
  id: Int!
  adminId: String
  cadminId: String
  ct: String
  d: Int
  mt: String
  roleId: Int
  sort: Int
  status: Int
}

type ChongduAdminRoleConnection {
  pageInfo: PageInfo!
  edges: [ChongduAdminRoleEdge]!
  aggregate: AggregateChongduAdminRole!
}

input ChongduAdminRoleCreateInput {
  id: Int
  adminId: String
  cadminId: String
  ct: String
  d: Int
  mt: String
  roleId: Int
  sort: Int
  status: Int
}

type ChongduAdminRoleEdge {
  node: ChongduAdminRole!
  cursor: String!
}

enum ChongduAdminRoleOrderByInput {
  id_ASC
  id_DESC
  adminId_ASC
  adminId_DESC
  cadminId_ASC
  cadminId_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  mt_ASC
  mt_DESC
  roleId_ASC
  roleId_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
}

type ChongduAdminRolePreviousValues {
  id: Int!
  adminId: String
  cadminId: String
  ct: String
  d: Int
  mt: String
  roleId: Int
  sort: Int
  status: Int
}

type ChongduAdminRoleSubscriptionPayload {
  mutation: MutationType!
  node: ChongduAdminRole
  updatedFields: [String!]
  previousValues: ChongduAdminRolePreviousValues
}

input ChongduAdminRoleSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduAdminRoleWhereInput
  AND: [ChongduAdminRoleSubscriptionWhereInput!]
  OR: [ChongduAdminRoleSubscriptionWhereInput!]
  NOT: [ChongduAdminRoleSubscriptionWhereInput!]
}

input ChongduAdminRoleUpdateInput {
  adminId: String
  cadminId: String
  ct: String
  d: Int
  mt: String
  roleId: Int
  sort: Int
  status: Int
}

input ChongduAdminRoleUpdateManyMutationInput {
  adminId: String
  cadminId: String
  ct: String
  d: Int
  mt: String
  roleId: Int
  sort: Int
  status: Int
}

input ChongduAdminRoleWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  adminId: String
  adminId_not: String
  adminId_in: [String!]
  adminId_not_in: [String!]
  adminId_lt: String
  adminId_lte: String
  adminId_gt: String
  adminId_gte: String
  adminId_contains: String
  adminId_not_contains: String
  adminId_starts_with: String
  adminId_not_starts_with: String
  adminId_ends_with: String
  adminId_not_ends_with: String
  cadminId: String
  cadminId_not: String
  cadminId_in: [String!]
  cadminId_not_in: [String!]
  cadminId_lt: String
  cadminId_lte: String
  cadminId_gt: String
  cadminId_gte: String
  cadminId_contains: String
  cadminId_not_contains: String
  cadminId_starts_with: String
  cadminId_not_starts_with: String
  cadminId_ends_with: String
  cadminId_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  roleId: Int
  roleId_not: Int
  roleId_in: [Int!]
  roleId_not_in: [Int!]
  roleId_lt: Int
  roleId_lte: Int
  roleId_gt: Int
  roleId_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  AND: [ChongduAdminRoleWhereInput!]
  OR: [ChongduAdminRoleWhereInput!]
  NOT: [ChongduAdminRoleWhereInput!]
}

input ChongduAdminRoleWhereUniqueInput {
  id: Int
}

type ChongduAdminSubscriptionPayload {
  mutation: MutationType!
  node: ChongduAdmin
  updatedFields: [String!]
  previousValues: ChongduAdminPreviousValues
}

input ChongduAdminSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduAdminWhereInput
  AND: [ChongduAdminSubscriptionWhereInput!]
  OR: [ChongduAdminSubscriptionWhereInput!]
  NOT: [ChongduAdminSubscriptionWhereInput!]
}

input ChongduAdminUpdateDataInput {
  agentAdminId: String
  agentId: String
  cityCode: String
  ct: String
  d: Int
  icon: String
  ip: String
  isAuth: Int
  lastLoginTime: String
  level: Int
  mac: String
  mail: String
  mt: String
  name: String
  nickname: String
  pwd: String
  realName: String
  rt: Int
  sort: Int
  status: Int
  tel: String
  type: Int
  groupId: ChongduRoleGroupUpdateOneInput
}

input ChongduAdminUpdateInput {
  agentAdminId: String
  agentId: String
  cityCode: String
  ct: String
  d: Int
  icon: String
  ip: String
  isAuth: Int
  lastLoginTime: String
  level: Int
  mac: String
  mail: String
  mt: String
  name: String
  nickname: String
  pwd: String
  realName: String
  rt: Int
  sort: Int
  status: Int
  tel: String
  type: Int
  groupId: ChongduRoleGroupUpdateOneInput
}

input ChongduAdminUpdateManyMutationInput {
  agentAdminId: String
  agentId: String
  cityCode: String
  ct: String
  d: Int
  icon: String
  ip: String
  isAuth: Int
  lastLoginTime: String
  level: Int
  mac: String
  mail: String
  mt: String
  name: String
  nickname: String
  pwd: String
  realName: String
  rt: Int
  sort: Int
  status: Int
  tel: String
  type: Int
}

input ChongduAdminUpdateOneInput {
  create: ChongduAdminCreateInput
  update: ChongduAdminUpdateDataInput
  upsert: ChongduAdminUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduAdminWhereUniqueInput
}

input ChongduAdminUpsertNestedInput {
  update: ChongduAdminUpdateDataInput!
  create: ChongduAdminCreateInput!
}

input ChongduAdminWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  agentAdminId: String
  agentAdminId_not: String
  agentAdminId_in: [String!]
  agentAdminId_not_in: [String!]
  agentAdminId_lt: String
  agentAdminId_lte: String
  agentAdminId_gt: String
  agentAdminId_gte: String
  agentAdminId_contains: String
  agentAdminId_not_contains: String
  agentAdminId_starts_with: String
  agentAdminId_not_starts_with: String
  agentAdminId_ends_with: String
  agentAdminId_not_ends_with: String
  agentId: String
  agentId_not: String
  agentId_in: [String!]
  agentId_not_in: [String!]
  agentId_lt: String
  agentId_lte: String
  agentId_gt: String
  agentId_gte: String
  agentId_contains: String
  agentId_not_contains: String
  agentId_starts_with: String
  agentId_not_starts_with: String
  agentId_ends_with: String
  agentId_not_ends_with: String
  cityCode: String
  cityCode_not: String
  cityCode_in: [String!]
  cityCode_not_in: [String!]
  cityCode_lt: String
  cityCode_lte: String
  cityCode_gt: String
  cityCode_gte: String
  cityCode_contains: String
  cityCode_not_contains: String
  cityCode_starts_with: String
  cityCode_not_starts_with: String
  cityCode_ends_with: String
  cityCode_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  ip: String
  ip_not: String
  ip_in: [String!]
  ip_not_in: [String!]
  ip_lt: String
  ip_lte: String
  ip_gt: String
  ip_gte: String
  ip_contains: String
  ip_not_contains: String
  ip_starts_with: String
  ip_not_starts_with: String
  ip_ends_with: String
  ip_not_ends_with: String
  isAuth: Int
  isAuth_not: Int
  isAuth_in: [Int!]
  isAuth_not_in: [Int!]
  isAuth_lt: Int
  isAuth_lte: Int
  isAuth_gt: Int
  isAuth_gte: Int
  lastLoginTime: String
  lastLoginTime_not: String
  lastLoginTime_in: [String!]
  lastLoginTime_not_in: [String!]
  lastLoginTime_lt: String
  lastLoginTime_lte: String
  lastLoginTime_gt: String
  lastLoginTime_gte: String
  lastLoginTime_contains: String
  lastLoginTime_not_contains: String
  lastLoginTime_starts_with: String
  lastLoginTime_not_starts_with: String
  lastLoginTime_ends_with: String
  lastLoginTime_not_ends_with: String
  level: Int
  level_not: Int
  level_in: [Int!]
  level_not_in: [Int!]
  level_lt: Int
  level_lte: Int
  level_gt: Int
  level_gte: Int
  mac: String
  mac_not: String
  mac_in: [String!]
  mac_not_in: [String!]
  mac_lt: String
  mac_lte: String
  mac_gt: String
  mac_gte: String
  mac_contains: String
  mac_not_contains: String
  mac_starts_with: String
  mac_not_starts_with: String
  mac_ends_with: String
  mac_not_ends_with: String
  mail: String
  mail_not: String
  mail_in: [String!]
  mail_not_in: [String!]
  mail_lt: String
  mail_lte: String
  mail_gt: String
  mail_gte: String
  mail_contains: String
  mail_not_contains: String
  mail_starts_with: String
  mail_not_starts_with: String
  mail_ends_with: String
  mail_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  nickname: String
  nickname_not: String
  nickname_in: [String!]
  nickname_not_in: [String!]
  nickname_lt: String
  nickname_lte: String
  nickname_gt: String
  nickname_gte: String
  nickname_contains: String
  nickname_not_contains: String
  nickname_starts_with: String
  nickname_not_starts_with: String
  nickname_ends_with: String
  nickname_not_ends_with: String
  pwd: String
  pwd_not: String
  pwd_in: [String!]
  pwd_not_in: [String!]
  pwd_lt: String
  pwd_lte: String
  pwd_gt: String
  pwd_gte: String
  pwd_contains: String
  pwd_not_contains: String
  pwd_starts_with: String
  pwd_not_starts_with: String
  pwd_ends_with: String
  pwd_not_ends_with: String
  realName: String
  realName_not: String
  realName_in: [String!]
  realName_not_in: [String!]
  realName_lt: String
  realName_lte: String
  realName_gt: String
  realName_gte: String
  realName_contains: String
  realName_not_contains: String
  realName_starts_with: String
  realName_not_starts_with: String
  realName_ends_with: String
  realName_not_ends_with: String
  rt: Int
  rt_not: Int
  rt_in: [Int!]
  rt_not_in: [Int!]
  rt_lt: Int
  rt_lte: Int
  rt_gt: Int
  rt_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  tel: String
  tel_not: String
  tel_in: [String!]
  tel_not_in: [String!]
  tel_lt: String
  tel_lte: String
  tel_gt: String
  tel_gte: String
  tel_contains: String
  tel_not_contains: String
  tel_starts_with: String
  tel_not_starts_with: String
  tel_ends_with: String
  tel_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  groupId: ChongduRoleGroupWhereInput
  AND: [ChongduAdminWhereInput!]
  OR: [ChongduAdminWhereInput!]
  NOT: [ChongduAdminWhereInput!]
}

input ChongduAdminWhereUniqueInput {
  id: ID
}

type ChongduAdvertisement {
  id: Int!
  adminId: String
  agentId: String
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  mt: String
  relateId: String
  relateType: Int
  sort: Int
  status: Int
  title: String
  type: Int
  url: String
}

type ChongduAdvertisementConnection {
  pageInfo: PageInfo!
  edges: [ChongduAdvertisementEdge]!
  aggregate: AggregateChongduAdvertisement!
}

input ChongduAdvertisementCreateInput {
  id: Int
  adminId: String
  agentId: String
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  mt: String
  relateId: String
  relateType: Int
  sort: Int
  status: Int
  title: String
  type: Int
  url: String
}

type ChongduAdvertisementEdge {
  node: ChongduAdvertisement!
  cursor: String!
}

enum ChongduAdvertisementOrderByInput {
  id_ASC
  id_DESC
  adminId_ASC
  adminId_DESC
  agentId_ASC
  agentId_DESC
  cityCode_ASC
  cityCode_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  image_ASC
  image_DESC
  mt_ASC
  mt_DESC
  relateId_ASC
  relateId_DESC
  relateType_ASC
  relateType_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
  type_ASC
  type_DESC
  url_ASC
  url_DESC
}

type ChongduAdvertisementPreviousValues {
  id: Int!
  adminId: String
  agentId: String
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  mt: String
  relateId: String
  relateType: Int
  sort: Int
  status: Int
  title: String
  type: Int
  url: String
}

type ChongduAdvertisementSubscriptionPayload {
  mutation: MutationType!
  node: ChongduAdvertisement
  updatedFields: [String!]
  previousValues: ChongduAdvertisementPreviousValues
}

input ChongduAdvertisementSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduAdvertisementWhereInput
  AND: [ChongduAdvertisementSubscriptionWhereInput!]
  OR: [ChongduAdvertisementSubscriptionWhereInput!]
  NOT: [ChongduAdvertisementSubscriptionWhereInput!]
}

input ChongduAdvertisementUpdateInput {
  adminId: String
  agentId: String
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  mt: String
  relateId: String
  relateType: Int
  sort: Int
  status: Int
  title: String
  type: Int
  url: String
}

input ChongduAdvertisementUpdateManyMutationInput {
  adminId: String
  agentId: String
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  mt: String
  relateId: String
  relateType: Int
  sort: Int
  status: Int
  title: String
  type: Int
  url: String
}

input ChongduAdvertisementWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  adminId: String
  adminId_not: String
  adminId_in: [String!]
  adminId_not_in: [String!]
  adminId_lt: String
  adminId_lte: String
  adminId_gt: String
  adminId_gte: String
  adminId_contains: String
  adminId_not_contains: String
  adminId_starts_with: String
  adminId_not_starts_with: String
  adminId_ends_with: String
  adminId_not_ends_with: String
  agentId: String
  agentId_not: String
  agentId_in: [String!]
  agentId_not_in: [String!]
  agentId_lt: String
  agentId_lte: String
  agentId_gt: String
  agentId_gte: String
  agentId_contains: String
  agentId_not_contains: String
  agentId_starts_with: String
  agentId_not_starts_with: String
  agentId_ends_with: String
  agentId_not_ends_with: String
  cityCode: String
  cityCode_not: String
  cityCode_in: [String!]
  cityCode_not_in: [String!]
  cityCode_lt: String
  cityCode_lte: String
  cityCode_gt: String
  cityCode_gte: String
  cityCode_contains: String
  cityCode_not_contains: String
  cityCode_starts_with: String
  cityCode_not_starts_with: String
  cityCode_ends_with: String
  cityCode_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  relateId: String
  relateId_not: String
  relateId_in: [String!]
  relateId_not_in: [String!]
  relateId_lt: String
  relateId_lte: String
  relateId_gt: String
  relateId_gte: String
  relateId_contains: String
  relateId_not_contains: String
  relateId_starts_with: String
  relateId_not_starts_with: String
  relateId_ends_with: String
  relateId_not_ends_with: String
  relateType: Int
  relateType_not: Int
  relateType_in: [Int!]
  relateType_not_in: [Int!]
  relateType_lt: Int
  relateType_lte: Int
  relateType_gt: Int
  relateType_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  AND: [ChongduAdvertisementWhereInput!]
  OR: [ChongduAdvertisementWhereInput!]
  NOT: [ChongduAdvertisementWhereInput!]
}

input ChongduAdvertisementWhereUniqueInput {
  id: Int
}

type ChongduAdvice {
  id: Int!
  comment: String
  ct: String
  d: Int
  type: Int
  useid: String
}

type ChongduAdviceConnection {
  pageInfo: PageInfo!
  edges: [ChongduAdviceEdge]!
  aggregate: AggregateChongduAdvice!
}

input ChongduAdviceCreateInput {
  id: Int
  comment: String
  ct: String
  d: Int
  type: Int
  useid: String
}

type ChongduAdviceEdge {
  node: ChongduAdvice!
  cursor: String!
}

enum ChongduAdviceOrderByInput {
  id_ASC
  id_DESC
  comment_ASC
  comment_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  type_ASC
  type_DESC
  useid_ASC
  useid_DESC
}

type ChongduAdvicePreviousValues {
  id: Int!
  comment: String
  ct: String
  d: Int
  type: Int
  useid: String
}

type ChongduAdviceSubscriptionPayload {
  mutation: MutationType!
  node: ChongduAdvice
  updatedFields: [String!]
  previousValues: ChongduAdvicePreviousValues
}

input ChongduAdviceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduAdviceWhereInput
  AND: [ChongduAdviceSubscriptionWhereInput!]
  OR: [ChongduAdviceSubscriptionWhereInput!]
  NOT: [ChongduAdviceSubscriptionWhereInput!]
}

input ChongduAdviceUpdateInput {
  comment: String
  ct: String
  d: Int
  type: Int
  useid: String
}

input ChongduAdviceUpdateManyMutationInput {
  comment: String
  ct: String
  d: Int
  type: Int
  useid: String
}

input ChongduAdviceWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  comment: String
  comment_not: String
  comment_in: [String!]
  comment_not_in: [String!]
  comment_lt: String
  comment_lte: String
  comment_gt: String
  comment_gte: String
  comment_contains: String
  comment_not_contains: String
  comment_starts_with: String
  comment_not_starts_with: String
  comment_ends_with: String
  comment_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  useid: String
  useid_not: String
  useid_in: [String!]
  useid_not_in: [String!]
  useid_lt: String
  useid_lte: String
  useid_gt: String
  useid_gte: String
  useid_contains: String
  useid_not_contains: String
  useid_starts_with: String
  useid_not_starts_with: String
  useid_ends_with: String
  useid_not_ends_with: String
  AND: [ChongduAdviceWhereInput!]
  OR: [ChongduAdviceWhereInput!]
  NOT: [ChongduAdviceWhereInput!]
}

input ChongduAdviceWhereUniqueInput {
  id: Int
}

type ChongduAgent {
  id: ID!
  type: Int
}

type ChongduAgentConnection {
  pageInfo: PageInfo!
  edges: [ChongduAgentEdge]!
  aggregate: AggregateChongduAgent!
}

input ChongduAgentCreateInput {
  id: ID
  type: Int
}

type ChongduAgentEdge {
  node: ChongduAgent!
  cursor: String!
}

enum ChongduAgentOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
}

type ChongduAgentPreviousValues {
  id: ID!
  type: Int
}

type ChongduAgentSubscriptionPayload {
  mutation: MutationType!
  node: ChongduAgent
  updatedFields: [String!]
  previousValues: ChongduAgentPreviousValues
}

input ChongduAgentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduAgentWhereInput
  AND: [ChongduAgentSubscriptionWhereInput!]
  OR: [ChongduAgentSubscriptionWhereInput!]
  NOT: [ChongduAgentSubscriptionWhereInput!]
}

input ChongduAgentUpdateInput {
  type: Int
}

input ChongduAgentUpdateManyMutationInput {
  type: Int
}

input ChongduAgentWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  AND: [ChongduAgentWhereInput!]
  OR: [ChongduAgentWhereInput!]
  NOT: [ChongduAgentWhereInput!]
}

input ChongduAgentWhereUniqueInput {
  id: ID
}

type ChongduAppointment {
  id: Int!
  ct: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  isOk: Int
  levelmessage: String
  mark: String
  merchantId: String
  mt: String
  serviceId: String
  sort: Int
  state: Int
  subtype: Int
  time: String
  timebegin: String
  timeend: String
  type: Int
  userId: String
  orderSn: String
}

type ChongduAppointmentConnection {
  pageInfo: PageInfo!
  edges: [ChongduAppointmentEdge]!
  aggregate: AggregateChongduAppointment!
}

input ChongduAppointmentCreateInput {
  id: Int
  ct: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  isOk: Int
  levelmessage: String
  mark: String
  merchantId: String
  mt: String
  serviceId: String
  sort: Int
  state: Int
  subtype: Int
  time: String
  timebegin: String
  timeend: String
  type: Int
  userId: String
  orderSn: String
}

type ChongduAppointmentEdge {
  node: ChongduAppointment!
  cursor: String!
}

enum ChongduAppointmentOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  deviceid_ASC
  deviceid_DESC
  devicename_ASC
  devicename_DESC
  devicetype_ASC
  devicetype_DESC
  isOk_ASC
  isOk_DESC
  levelmessage_ASC
  levelmessage_DESC
  mark_ASC
  mark_DESC
  merchantId_ASC
  merchantId_DESC
  mt_ASC
  mt_DESC
  serviceId_ASC
  serviceId_DESC
  sort_ASC
  sort_DESC
  state_ASC
  state_DESC
  subtype_ASC
  subtype_DESC
  time_ASC
  time_DESC
  timebegin_ASC
  timebegin_DESC
  timeend_ASC
  timeend_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
  orderSn_ASC
  orderSn_DESC
}

type ChongduAppointmentPreviousValues {
  id: Int!
  ct: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  isOk: Int
  levelmessage: String
  mark: String
  merchantId: String
  mt: String
  serviceId: String
  sort: Int
  state: Int
  subtype: Int
  time: String
  timebegin: String
  timeend: String
  type: Int
  userId: String
  orderSn: String
}

type ChongduAppointmentSubscriptionPayload {
  mutation: MutationType!
  node: ChongduAppointment
  updatedFields: [String!]
  previousValues: ChongduAppointmentPreviousValues
}

input ChongduAppointmentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduAppointmentWhereInput
  AND: [ChongduAppointmentSubscriptionWhereInput!]
  OR: [ChongduAppointmentSubscriptionWhereInput!]
  NOT: [ChongduAppointmentSubscriptionWhereInput!]
}

input ChongduAppointmentUpdateInput {
  ct: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  isOk: Int
  levelmessage: String
  mark: String
  merchantId: String
  mt: String
  serviceId: String
  sort: Int
  state: Int
  subtype: Int
  time: String
  timebegin: String
  timeend: String
  type: Int
  userId: String
  orderSn: String
}

input ChongduAppointmentUpdateManyMutationInput {
  ct: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  isOk: Int
  levelmessage: String
  mark: String
  merchantId: String
  mt: String
  serviceId: String
  sort: Int
  state: Int
  subtype: Int
  time: String
  timebegin: String
  timeend: String
  type: Int
  userId: String
  orderSn: String
}

input ChongduAppointmentWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  deviceid: String
  deviceid_not: String
  deviceid_in: [String!]
  deviceid_not_in: [String!]
  deviceid_lt: String
  deviceid_lte: String
  deviceid_gt: String
  deviceid_gte: String
  deviceid_contains: String
  deviceid_not_contains: String
  deviceid_starts_with: String
  deviceid_not_starts_with: String
  deviceid_ends_with: String
  deviceid_not_ends_with: String
  devicename: String
  devicename_not: String
  devicename_in: [String!]
  devicename_not_in: [String!]
  devicename_lt: String
  devicename_lte: String
  devicename_gt: String
  devicename_gte: String
  devicename_contains: String
  devicename_not_contains: String
  devicename_starts_with: String
  devicename_not_starts_with: String
  devicename_ends_with: String
  devicename_not_ends_with: String
  devicetype: Int
  devicetype_not: Int
  devicetype_in: [Int!]
  devicetype_not_in: [Int!]
  devicetype_lt: Int
  devicetype_lte: Int
  devicetype_gt: Int
  devicetype_gte: Int
  isOk: Int
  isOk_not: Int
  isOk_in: [Int!]
  isOk_not_in: [Int!]
  isOk_lt: Int
  isOk_lte: Int
  isOk_gt: Int
  isOk_gte: Int
  levelmessage: String
  levelmessage_not: String
  levelmessage_in: [String!]
  levelmessage_not_in: [String!]
  levelmessage_lt: String
  levelmessage_lte: String
  levelmessage_gt: String
  levelmessage_gte: String
  levelmessage_contains: String
  levelmessage_not_contains: String
  levelmessage_starts_with: String
  levelmessage_not_starts_with: String
  levelmessage_ends_with: String
  levelmessage_not_ends_with: String
  mark: String
  mark_not: String
  mark_in: [String!]
  mark_not_in: [String!]
  mark_lt: String
  mark_lte: String
  mark_gt: String
  mark_gte: String
  mark_contains: String
  mark_not_contains: String
  mark_starts_with: String
  mark_not_starts_with: String
  mark_ends_with: String
  mark_not_ends_with: String
  merchantId: String
  merchantId_not: String
  merchantId_in: [String!]
  merchantId_not_in: [String!]
  merchantId_lt: String
  merchantId_lte: String
  merchantId_gt: String
  merchantId_gte: String
  merchantId_contains: String
  merchantId_not_contains: String
  merchantId_starts_with: String
  merchantId_not_starts_with: String
  merchantId_ends_with: String
  merchantId_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  serviceId: String
  serviceId_not: String
  serviceId_in: [String!]
  serviceId_not_in: [String!]
  serviceId_lt: String
  serviceId_lte: String
  serviceId_gt: String
  serviceId_gte: String
  serviceId_contains: String
  serviceId_not_contains: String
  serviceId_starts_with: String
  serviceId_not_starts_with: String
  serviceId_ends_with: String
  serviceId_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  state: Int
  state_not: Int
  state_in: [Int!]
  state_not_in: [Int!]
  state_lt: Int
  state_lte: Int
  state_gt: Int
  state_gte: Int
  subtype: Int
  subtype_not: Int
  subtype_in: [Int!]
  subtype_not_in: [Int!]
  subtype_lt: Int
  subtype_lte: Int
  subtype_gt: Int
  subtype_gte: Int
  time: String
  time_not: String
  time_in: [String!]
  time_not_in: [String!]
  time_lt: String
  time_lte: String
  time_gt: String
  time_gte: String
  time_contains: String
  time_not_contains: String
  time_starts_with: String
  time_not_starts_with: String
  time_ends_with: String
  time_not_ends_with: String
  timebegin: String
  timebegin_not: String
  timebegin_in: [String!]
  timebegin_not_in: [String!]
  timebegin_lt: String
  timebegin_lte: String
  timebegin_gt: String
  timebegin_gte: String
  timebegin_contains: String
  timebegin_not_contains: String
  timebegin_starts_with: String
  timebegin_not_starts_with: String
  timebegin_ends_with: String
  timebegin_not_ends_with: String
  timeend: String
  timeend_not: String
  timeend_in: [String!]
  timeend_not_in: [String!]
  timeend_lt: String
  timeend_lte: String
  timeend_gt: String
  timeend_gte: String
  timeend_contains: String
  timeend_not_contains: String
  timeend_starts_with: String
  timeend_not_starts_with: String
  timeend_ends_with: String
  timeend_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  orderSn: String
  orderSn_not: String
  orderSn_in: [String!]
  orderSn_not_in: [String!]
  orderSn_lt: String
  orderSn_lte: String
  orderSn_gt: String
  orderSn_gte: String
  orderSn_contains: String
  orderSn_not_contains: String
  orderSn_starts_with: String
  orderSn_not_starts_with: String
  orderSn_ends_with: String
  orderSn_not_ends_with: String
  AND: [ChongduAppointmentWhereInput!]
  OR: [ChongduAppointmentWhereInput!]
  NOT: [ChongduAppointmentWhereInput!]
}

input ChongduAppointmentWhereUniqueInput {
  id: Int
}

type ChongduAppVersion {
  id: Int!
  appCode: String
  appId: String
  appVersion: String
  ct: String
  cuserId: String
  d: Int
  description: String
  deviceType: Int
  fileName: String
  forces: Int
  mt: String
  muserId: String
  sort: Int
  status: Int
  url: String
}

type ChongduAppVersionConnection {
  pageInfo: PageInfo!
  edges: [ChongduAppVersionEdge]!
  aggregate: AggregateChongduAppVersion!
}

input ChongduAppVersionCreateInput {
  id: Int
  appCode: String
  appId: String
  appVersion: String
  ct: String
  cuserId: String
  d: Int
  description: String
  deviceType: Int
  fileName: String
  forces: Int
  mt: String
  muserId: String
  sort: Int
  status: Int
  url: String
}

type ChongduAppVersionEdge {
  node: ChongduAppVersion!
  cursor: String!
}

enum ChongduAppVersionOrderByInput {
  id_ASC
  id_DESC
  appCode_ASC
  appCode_DESC
  appId_ASC
  appId_DESC
  appVersion_ASC
  appVersion_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  description_ASC
  description_DESC
  deviceType_ASC
  deviceType_DESC
  fileName_ASC
  fileName_DESC
  forces_ASC
  forces_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  url_ASC
  url_DESC
}

type ChongduAppVersionPreviousValues {
  id: Int!
  appCode: String
  appId: String
  appVersion: String
  ct: String
  cuserId: String
  d: Int
  description: String
  deviceType: Int
  fileName: String
  forces: Int
  mt: String
  muserId: String
  sort: Int
  status: Int
  url: String
}

type ChongduAppVersionSubscriptionPayload {
  mutation: MutationType!
  node: ChongduAppVersion
  updatedFields: [String!]
  previousValues: ChongduAppVersionPreviousValues
}

input ChongduAppVersionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduAppVersionWhereInput
  AND: [ChongduAppVersionSubscriptionWhereInput!]
  OR: [ChongduAppVersionSubscriptionWhereInput!]
  NOT: [ChongduAppVersionSubscriptionWhereInput!]
}

input ChongduAppVersionUpdateInput {
  appCode: String
  appId: String
  appVersion: String
  ct: String
  cuserId: String
  d: Int
  description: String
  deviceType: Int
  fileName: String
  forces: Int
  mt: String
  muserId: String
  sort: Int
  status: Int
  url: String
}

input ChongduAppVersionUpdateManyMutationInput {
  appCode: String
  appId: String
  appVersion: String
  ct: String
  cuserId: String
  d: Int
  description: String
  deviceType: Int
  fileName: String
  forces: Int
  mt: String
  muserId: String
  sort: Int
  status: Int
  url: String
}

input ChongduAppVersionWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  appCode: String
  appCode_not: String
  appCode_in: [String!]
  appCode_not_in: [String!]
  appCode_lt: String
  appCode_lte: String
  appCode_gt: String
  appCode_gte: String
  appCode_contains: String
  appCode_not_contains: String
  appCode_starts_with: String
  appCode_not_starts_with: String
  appCode_ends_with: String
  appCode_not_ends_with: String
  appId: String
  appId_not: String
  appId_in: [String!]
  appId_not_in: [String!]
  appId_lt: String
  appId_lte: String
  appId_gt: String
  appId_gte: String
  appId_contains: String
  appId_not_contains: String
  appId_starts_with: String
  appId_not_starts_with: String
  appId_ends_with: String
  appId_not_ends_with: String
  appVersion: String
  appVersion_not: String
  appVersion_in: [String!]
  appVersion_not_in: [String!]
  appVersion_lt: String
  appVersion_lte: String
  appVersion_gt: String
  appVersion_gte: String
  appVersion_contains: String
  appVersion_not_contains: String
  appVersion_starts_with: String
  appVersion_not_starts_with: String
  appVersion_ends_with: String
  appVersion_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  deviceType: Int
  deviceType_not: Int
  deviceType_in: [Int!]
  deviceType_not_in: [Int!]
  deviceType_lt: Int
  deviceType_lte: Int
  deviceType_gt: Int
  deviceType_gte: Int
  fileName: String
  fileName_not: String
  fileName_in: [String!]
  fileName_not_in: [String!]
  fileName_lt: String
  fileName_lte: String
  fileName_gt: String
  fileName_gte: String
  fileName_contains: String
  fileName_not_contains: String
  fileName_starts_with: String
  fileName_not_starts_with: String
  fileName_ends_with: String
  fileName_not_ends_with: String
  forces: Int
  forces_not: Int
  forces_in: [Int!]
  forces_not_in: [Int!]
  forces_lt: Int
  forces_lte: Int
  forces_gt: Int
  forces_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  AND: [ChongduAppVersionWhereInput!]
  OR: [ChongduAppVersionWhereInput!]
  NOT: [ChongduAppVersionWhereInput!]
}

input ChongduAppVersionWhereUniqueInput {
  id: Int
}

type ChongduCart {
  id: ID!
  checked: Int
  ct: String
  d: Int
  merchantId: String
  mt: String
  num: Int
  productId: String
  userId: String
}

type ChongduCartConnection {
  pageInfo: PageInfo!
  edges: [ChongduCartEdge]!
  aggregate: AggregateChongduCart!
}

input ChongduCartCreateInput {
  id: ID
  checked: Int
  ct: String
  d: Int
  merchantId: String
  mt: String
  num: Int
  productId: String
  userId: String
}

type ChongduCartEdge {
  node: ChongduCart!
  cursor: String!
}

enum ChongduCartOrderByInput {
  id_ASC
  id_DESC
  checked_ASC
  checked_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  merchantId_ASC
  merchantId_DESC
  mt_ASC
  mt_DESC
  num_ASC
  num_DESC
  productId_ASC
  productId_DESC
  userId_ASC
  userId_DESC
}

type ChongduCartPreviousValues {
  id: ID!
  checked: Int
  ct: String
  d: Int
  merchantId: String
  mt: String
  num: Int
  productId: String
  userId: String
}

type ChongduCartSubscriptionPayload {
  mutation: MutationType!
  node: ChongduCart
  updatedFields: [String!]
  previousValues: ChongduCartPreviousValues
}

input ChongduCartSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduCartWhereInput
  AND: [ChongduCartSubscriptionWhereInput!]
  OR: [ChongduCartSubscriptionWhereInput!]
  NOT: [ChongduCartSubscriptionWhereInput!]
}

input ChongduCartUpdateInput {
  checked: Int
  ct: String
  d: Int
  merchantId: String
  mt: String
  num: Int
  productId: String
  userId: String
}

input ChongduCartUpdateManyMutationInput {
  checked: Int
  ct: String
  d: Int
  merchantId: String
  mt: String
  num: Int
  productId: String
  userId: String
}

input ChongduCartWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  checked: Int
  checked_not: Int
  checked_in: [Int!]
  checked_not_in: [Int!]
  checked_lt: Int
  checked_lte: Int
  checked_gt: Int
  checked_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  merchantId: String
  merchantId_not: String
  merchantId_in: [String!]
  merchantId_not_in: [String!]
  merchantId_lt: String
  merchantId_lte: String
  merchantId_gt: String
  merchantId_gte: String
  merchantId_contains: String
  merchantId_not_contains: String
  merchantId_starts_with: String
  merchantId_not_starts_with: String
  merchantId_ends_with: String
  merchantId_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  num: Int
  num_not: Int
  num_in: [Int!]
  num_not_in: [Int!]
  num_lt: Int
  num_lte: Int
  num_gt: Int
  num_gte: Int
  productId: String
  productId_not: String
  productId_in: [String!]
  productId_not_in: [String!]
  productId_lt: String
  productId_lte: String
  productId_gt: String
  productId_gte: String
  productId_contains: String
  productId_not_contains: String
  productId_starts_with: String
  productId_not_starts_with: String
  productId_ends_with: String
  productId_not_ends_with: String
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduCartWhereInput!]
  OR: [ChongduCartWhereInput!]
  NOT: [ChongduCartWhereInput!]
}

input ChongduCartWhereUniqueInput {
  id: ID
}

type ChongduCity {
  id: Int!
  code: String
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  name: String
  sort: Int
  status: Int
}

type ChongduCityConnection {
  pageInfo: PageInfo!
  edges: [ChongduCityEdge]!
  aggregate: AggregateChongduCity!
}

input ChongduCityCreateInput {
  id: Int
  code: String
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  name: String
  sort: Int
  status: Int
}

type ChongduCityEdge {
  node: ChongduCity!
  cursor: String!
}

enum ChongduCityOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  name_ASC
  name_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
}

type ChongduCityPreviousValues {
  id: Int!
  code: String
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  name: String
  sort: Int
  status: Int
}

type ChongduCitySubscriptionPayload {
  mutation: MutationType!
  node: ChongduCity
  updatedFields: [String!]
  previousValues: ChongduCityPreviousValues
}

input ChongduCitySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduCityWhereInput
  AND: [ChongduCitySubscriptionWhereInput!]
  OR: [ChongduCitySubscriptionWhereInput!]
  NOT: [ChongduCitySubscriptionWhereInput!]
}

input ChongduCityUpdateInput {
  code: String
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  name: String
  sort: Int
  status: Int
}

input ChongduCityUpdateManyMutationInput {
  code: String
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  name: String
  sort: Int
  status: Int
}

input ChongduCityWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  AND: [ChongduCityWhereInput!]
  OR: [ChongduCityWhereInput!]
  NOT: [ChongduCityWhereInput!]
}

input ChongduCityWhereUniqueInput {
  id: Int
}

type ChongduComment {
  id: Int!
  anonymity: Int
  brower: Int
  commentType: Int
  content: String
  ct: String
  d: Int
  image: String
  isAdd: Int
  likedNum: Int
  productId: String
  replyNum: Int
  serviceId: String
  shareNum: Int
  starNum: Float
  userId: String
  video: String
  orderSn: String
}

type ChongduCommentConnection {
  pageInfo: PageInfo!
  edges: [ChongduCommentEdge]!
  aggregate: AggregateChongduComment!
}

input ChongduCommentCreateInput {
  id: Int
  anonymity: Int
  brower: Int
  commentType: Int
  content: String
  ct: String
  d: Int
  image: String
  isAdd: Int
  likedNum: Int
  productId: String
  replyNum: Int
  serviceId: String
  shareNum: Int
  starNum: Float
  userId: String
  video: String
  orderSn: String
}

type ChongduCommentEdge {
  node: ChongduComment!
  cursor: String!
}

enum ChongduCommentOrderByInput {
  id_ASC
  id_DESC
  anonymity_ASC
  anonymity_DESC
  brower_ASC
  brower_DESC
  commentType_ASC
  commentType_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  image_ASC
  image_DESC
  isAdd_ASC
  isAdd_DESC
  likedNum_ASC
  likedNum_DESC
  productId_ASC
  productId_DESC
  replyNum_ASC
  replyNum_DESC
  serviceId_ASC
  serviceId_DESC
  shareNum_ASC
  shareNum_DESC
  starNum_ASC
  starNum_DESC
  userId_ASC
  userId_DESC
  video_ASC
  video_DESC
  orderSn_ASC
  orderSn_DESC
}

type ChongduCommentPraise {
  id: Int!
  ct: String
  d: Int
  relateId: Int
  relateType: Int
  status: Int
  userId: String
}

type ChongduCommentPraiseConnection {
  pageInfo: PageInfo!
  edges: [ChongduCommentPraiseEdge]!
  aggregate: AggregateChongduCommentPraise!
}

input ChongduCommentPraiseCreateInput {
  id: Int
  ct: String
  d: Int
  relateId: Int
  relateType: Int
  status: Int
  userId: String
}

type ChongduCommentPraiseEdge {
  node: ChongduCommentPraise!
  cursor: String!
}

enum ChongduCommentPraiseOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  relateId_ASC
  relateId_DESC
  relateType_ASC
  relateType_DESC
  status_ASC
  status_DESC
  userId_ASC
  userId_DESC
}

type ChongduCommentPraisePreviousValues {
  id: Int!
  ct: String
  d: Int
  relateId: Int
  relateType: Int
  status: Int
  userId: String
}

type ChongduCommentPraiseSubscriptionPayload {
  mutation: MutationType!
  node: ChongduCommentPraise
  updatedFields: [String!]
  previousValues: ChongduCommentPraisePreviousValues
}

input ChongduCommentPraiseSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduCommentPraiseWhereInput
  AND: [ChongduCommentPraiseSubscriptionWhereInput!]
  OR: [ChongduCommentPraiseSubscriptionWhereInput!]
  NOT: [ChongduCommentPraiseSubscriptionWhereInput!]
}

input ChongduCommentPraiseUpdateInput {
  ct: String
  d: Int
  relateId: Int
  relateType: Int
  status: Int
  userId: String
}

input ChongduCommentPraiseUpdateManyMutationInput {
  ct: String
  d: Int
  relateId: Int
  relateType: Int
  status: Int
  userId: String
}

input ChongduCommentPraiseWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  relateId: Int
  relateId_not: Int
  relateId_in: [Int!]
  relateId_not_in: [Int!]
  relateId_lt: Int
  relateId_lte: Int
  relateId_gt: Int
  relateId_gte: Int
  relateType: Int
  relateType_not: Int
  relateType_in: [Int!]
  relateType_not_in: [Int!]
  relateType_lt: Int
  relateType_lte: Int
  relateType_gt: Int
  relateType_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduCommentPraiseWhereInput!]
  OR: [ChongduCommentPraiseWhereInput!]
  NOT: [ChongduCommentPraiseWhereInput!]
}

input ChongduCommentPraiseWhereUniqueInput {
  id: Int
}

type ChongduCommentPreviousValues {
  id: Int!
  anonymity: Int
  brower: Int
  commentType: Int
  content: String
  ct: String
  d: Int
  image: String
  isAdd: Int
  likedNum: Int
  productId: String
  replyNum: Int
  serviceId: String
  shareNum: Int
  starNum: Float
  userId: String
  video: String
  orderSn: String
}

type ChongduCommentReply {
  id: Int!
  commentId: Int
  content: String
  ct: String
  d: Int
  praiseCount: Int
  replyuserId: String
  type: Int
  userId: String
}

type ChongduCommentReplyConnection {
  pageInfo: PageInfo!
  edges: [ChongduCommentReplyEdge]!
  aggregate: AggregateChongduCommentReply!
}

input ChongduCommentReplyCreateInput {
  id: Int
  commentId: Int
  content: String
  ct: String
  d: Int
  praiseCount: Int
  replyuserId: String
  type: Int
  userId: String
}

type ChongduCommentReplyEdge {
  node: ChongduCommentReply!
  cursor: String!
}

enum ChongduCommentReplyOrderByInput {
  id_ASC
  id_DESC
  commentId_ASC
  commentId_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  praiseCount_ASC
  praiseCount_DESC
  replyuserId_ASC
  replyuserId_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduCommentReplyPreviousValues {
  id: Int!
  commentId: Int
  content: String
  ct: String
  d: Int
  praiseCount: Int
  replyuserId: String
  type: Int
  userId: String
}

type ChongduCommentReplySubscriptionPayload {
  mutation: MutationType!
  node: ChongduCommentReply
  updatedFields: [String!]
  previousValues: ChongduCommentReplyPreviousValues
}

input ChongduCommentReplySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduCommentReplyWhereInput
  AND: [ChongduCommentReplySubscriptionWhereInput!]
  OR: [ChongduCommentReplySubscriptionWhereInput!]
  NOT: [ChongduCommentReplySubscriptionWhereInput!]
}

input ChongduCommentReplyUpdateInput {
  commentId: Int
  content: String
  ct: String
  d: Int
  praiseCount: Int
  replyuserId: String
  type: Int
  userId: String
}

input ChongduCommentReplyUpdateManyMutationInput {
  commentId: Int
  content: String
  ct: String
  d: Int
  praiseCount: Int
  replyuserId: String
  type: Int
  userId: String
}

input ChongduCommentReplyWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  commentId: Int
  commentId_not: Int
  commentId_in: [Int!]
  commentId_not_in: [Int!]
  commentId_lt: Int
  commentId_lte: Int
  commentId_gt: Int
  commentId_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  praiseCount: Int
  praiseCount_not: Int
  praiseCount_in: [Int!]
  praiseCount_not_in: [Int!]
  praiseCount_lt: Int
  praiseCount_lte: Int
  praiseCount_gt: Int
  praiseCount_gte: Int
  replyuserId: String
  replyuserId_not: String
  replyuserId_in: [String!]
  replyuserId_not_in: [String!]
  replyuserId_lt: String
  replyuserId_lte: String
  replyuserId_gt: String
  replyuserId_gte: String
  replyuserId_contains: String
  replyuserId_not_contains: String
  replyuserId_starts_with: String
  replyuserId_not_starts_with: String
  replyuserId_ends_with: String
  replyuserId_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduCommentReplyWhereInput!]
  OR: [ChongduCommentReplyWhereInput!]
  NOT: [ChongduCommentReplyWhereInput!]
}

input ChongduCommentReplyWhereUniqueInput {
  id: Int
}

type ChongduCommentReview {
  id: Int!
  brower: Int
  commentId: Int
  content: String
  ct: String
  d: Int
  image: String
  likedNum: Int
  replyNum: Int
  userId: String
  video: String
}

type ChongduCommentReviewConnection {
  pageInfo: PageInfo!
  edges: [ChongduCommentReviewEdge]!
  aggregate: AggregateChongduCommentReview!
}

input ChongduCommentReviewCreateInput {
  id: Int
  brower: Int
  commentId: Int
  content: String
  ct: String
  d: Int
  image: String
  likedNum: Int
  replyNum: Int
  userId: String
  video: String
}

type ChongduCommentReviewEdge {
  node: ChongduCommentReview!
  cursor: String!
}

enum ChongduCommentReviewOrderByInput {
  id_ASC
  id_DESC
  brower_ASC
  brower_DESC
  commentId_ASC
  commentId_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  image_ASC
  image_DESC
  likedNum_ASC
  likedNum_DESC
  replyNum_ASC
  replyNum_DESC
  userId_ASC
  userId_DESC
  video_ASC
  video_DESC
}

type ChongduCommentReviewPreviousValues {
  id: Int!
  brower: Int
  commentId: Int
  content: String
  ct: String
  d: Int
  image: String
  likedNum: Int
  replyNum: Int
  userId: String
  video: String
}

type ChongduCommentReviewSubscriptionPayload {
  mutation: MutationType!
  node: ChongduCommentReview
  updatedFields: [String!]
  previousValues: ChongduCommentReviewPreviousValues
}

input ChongduCommentReviewSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduCommentReviewWhereInput
  AND: [ChongduCommentReviewSubscriptionWhereInput!]
  OR: [ChongduCommentReviewSubscriptionWhereInput!]
  NOT: [ChongduCommentReviewSubscriptionWhereInput!]
}

input ChongduCommentReviewUpdateInput {
  brower: Int
  commentId: Int
  content: String
  ct: String
  d: Int
  image: String
  likedNum: Int
  replyNum: Int
  userId: String
  video: String
}

input ChongduCommentReviewUpdateManyMutationInput {
  brower: Int
  commentId: Int
  content: String
  ct: String
  d: Int
  image: String
  likedNum: Int
  replyNum: Int
  userId: String
  video: String
}

input ChongduCommentReviewWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  brower: Int
  brower_not: Int
  brower_in: [Int!]
  brower_not_in: [Int!]
  brower_lt: Int
  brower_lte: Int
  brower_gt: Int
  brower_gte: Int
  commentId: Int
  commentId_not: Int
  commentId_in: [Int!]
  commentId_not_in: [Int!]
  commentId_lt: Int
  commentId_lte: Int
  commentId_gt: Int
  commentId_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  likedNum: Int
  likedNum_not: Int
  likedNum_in: [Int!]
  likedNum_not_in: [Int!]
  likedNum_lt: Int
  likedNum_lte: Int
  likedNum_gt: Int
  likedNum_gte: Int
  replyNum: Int
  replyNum_not: Int
  replyNum_in: [Int!]
  replyNum_not_in: [Int!]
  replyNum_lt: Int
  replyNum_lte: Int
  replyNum_gt: Int
  replyNum_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  video: String
  video_not: String
  video_in: [String!]
  video_not_in: [String!]
  video_lt: String
  video_lte: String
  video_gt: String
  video_gte: String
  video_contains: String
  video_not_contains: String
  video_starts_with: String
  video_not_starts_with: String
  video_ends_with: String
  video_not_ends_with: String
  AND: [ChongduCommentReviewWhereInput!]
  OR: [ChongduCommentReviewWhereInput!]
  NOT: [ChongduCommentReviewWhereInput!]
}

input ChongduCommentReviewWhereUniqueInput {
  id: Int
}

type ChongduCommentSubscriptionPayload {
  mutation: MutationType!
  node: ChongduComment
  updatedFields: [String!]
  previousValues: ChongduCommentPreviousValues
}

input ChongduCommentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduCommentWhereInput
  AND: [ChongduCommentSubscriptionWhereInput!]
  OR: [ChongduCommentSubscriptionWhereInput!]
  NOT: [ChongduCommentSubscriptionWhereInput!]
}

input ChongduCommentUpdateInput {
  anonymity: Int
  brower: Int
  commentType: Int
  content: String
  ct: String
  d: Int
  image: String
  isAdd: Int
  likedNum: Int
  productId: String
  replyNum: Int
  serviceId: String
  shareNum: Int
  starNum: Float
  userId: String
  video: String
  orderSn: String
}

input ChongduCommentUpdateManyMutationInput {
  anonymity: Int
  brower: Int
  commentType: Int
  content: String
  ct: String
  d: Int
  image: String
  isAdd: Int
  likedNum: Int
  productId: String
  replyNum: Int
  serviceId: String
  shareNum: Int
  starNum: Float
  userId: String
  video: String
  orderSn: String
}

input ChongduCommentWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  anonymity: Int
  anonymity_not: Int
  anonymity_in: [Int!]
  anonymity_not_in: [Int!]
  anonymity_lt: Int
  anonymity_lte: Int
  anonymity_gt: Int
  anonymity_gte: Int
  brower: Int
  brower_not: Int
  brower_in: [Int!]
  brower_not_in: [Int!]
  brower_lt: Int
  brower_lte: Int
  brower_gt: Int
  brower_gte: Int
  commentType: Int
  commentType_not: Int
  commentType_in: [Int!]
  commentType_not_in: [Int!]
  commentType_lt: Int
  commentType_lte: Int
  commentType_gt: Int
  commentType_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  isAdd: Int
  isAdd_not: Int
  isAdd_in: [Int!]
  isAdd_not_in: [Int!]
  isAdd_lt: Int
  isAdd_lte: Int
  isAdd_gt: Int
  isAdd_gte: Int
  likedNum: Int
  likedNum_not: Int
  likedNum_in: [Int!]
  likedNum_not_in: [Int!]
  likedNum_lt: Int
  likedNum_lte: Int
  likedNum_gt: Int
  likedNum_gte: Int
  productId: String
  productId_not: String
  productId_in: [String!]
  productId_not_in: [String!]
  productId_lt: String
  productId_lte: String
  productId_gt: String
  productId_gte: String
  productId_contains: String
  productId_not_contains: String
  productId_starts_with: String
  productId_not_starts_with: String
  productId_ends_with: String
  productId_not_ends_with: String
  replyNum: Int
  replyNum_not: Int
  replyNum_in: [Int!]
  replyNum_not_in: [Int!]
  replyNum_lt: Int
  replyNum_lte: Int
  replyNum_gt: Int
  replyNum_gte: Int
  serviceId: String
  serviceId_not: String
  serviceId_in: [String!]
  serviceId_not_in: [String!]
  serviceId_lt: String
  serviceId_lte: String
  serviceId_gt: String
  serviceId_gte: String
  serviceId_contains: String
  serviceId_not_contains: String
  serviceId_starts_with: String
  serviceId_not_starts_with: String
  serviceId_ends_with: String
  serviceId_not_ends_with: String
  shareNum: Int
  shareNum_not: Int
  shareNum_in: [Int!]
  shareNum_not_in: [Int!]
  shareNum_lt: Int
  shareNum_lte: Int
  shareNum_gt: Int
  shareNum_gte: Int
  starNum: Float
  starNum_not: Float
  starNum_in: [Float!]
  starNum_not_in: [Float!]
  starNum_lt: Float
  starNum_lte: Float
  starNum_gt: Float
  starNum_gte: Float
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  video: String
  video_not: String
  video_in: [String!]
  video_not_in: [String!]
  video_lt: String
  video_lte: String
  video_gt: String
  video_gte: String
  video_contains: String
  video_not_contains: String
  video_starts_with: String
  video_not_starts_with: String
  video_ends_with: String
  video_not_ends_with: String
  orderSn: String
  orderSn_not: String
  orderSn_in: [String!]
  orderSn_not_in: [String!]
  orderSn_lt: String
  orderSn_lte: String
  orderSn_gt: String
  orderSn_gte: String
  orderSn_contains: String
  orderSn_not_contains: String
  orderSn_starts_with: String
  orderSn_not_starts_with: String
  orderSn_ends_with: String
  orderSn_not_ends_with: String
  AND: [ChongduCommentWhereInput!]
  OR: [ChongduCommentWhereInput!]
  NOT: [ChongduCommentWhereInput!]
}

input ChongduCommentWhereUniqueInput {
  id: Int
}

type ChongduCompanyauthent {
  id: ID!
  authType: String
  backPhoto: String
  bisDate: String
  bisPhoto: String
  city: String
  citycode: String
  companyAddress: String
  ct: String
  d: Int
  discription: String
  frontPhoto: String
  handPhoto: String
  headPhoto: String
  isSame: Int
  latitude: String
  legalDi: String
  legalName: String
  legalTel: String
  longitude: String
  merchantId: String
  name: String
  nowAddress: String
  otherPhoto: String
  registMoney: String
  setupDate: String
  socialCode: String
  status: Int
  userId: ChongduUser
}

type ChongduCompanyauthentConnection {
  pageInfo: PageInfo!
  edges: [ChongduCompanyauthentEdge]!
  aggregate: AggregateChongduCompanyauthent!
}

input ChongduCompanyauthentCreateInput {
  id: ID
  authType: String
  backPhoto: String
  bisDate: String
  bisPhoto: String
  city: String
  citycode: String
  companyAddress: String
  ct: String
  d: Int
  discription: String
  frontPhoto: String
  handPhoto: String
  headPhoto: String
  isSame: Int
  latitude: String
  legalDi: String
  legalName: String
  legalTel: String
  longitude: String
  merchantId: String
  name: String
  nowAddress: String
  otherPhoto: String
  registMoney: String
  setupDate: String
  socialCode: String
  status: Int
  userId: ChongduUserCreateOneInput
}

type ChongduCompanyauthentEdge {
  node: ChongduCompanyauthent!
  cursor: String!
}

type ChongduCompanyauthentLog {
  id: Int!
  companyauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdmin
  ct: String
  d: Int
}

type ChongduCompanyauthentLogConnection {
  pageInfo: PageInfo!
  edges: [ChongduCompanyauthentLogEdge]!
  aggregate: AggregateChongduCompanyauthentLog!
}

input ChongduCompanyauthentLogCreateInput {
  id: Int
  companyauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdminCreateOneInput
  ct: String
  d: Int
}

type ChongduCompanyauthentLogEdge {
  node: ChongduCompanyauthentLog!
  cursor: String!
}

enum ChongduCompanyauthentLogOrderByInput {
  id_ASC
  id_DESC
  companyauthentId_ASC
  companyauthentId_DESC
  status_ASC
  status_DESC
  remark_ASC
  remark_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
}

type ChongduCompanyauthentLogPreviousValues {
  id: Int!
  companyauthentId: String
  status: Int
  remark: String
  ct: String
  d: Int
}

type ChongduCompanyauthentLogSubscriptionPayload {
  mutation: MutationType!
  node: ChongduCompanyauthentLog
  updatedFields: [String!]
  previousValues: ChongduCompanyauthentLogPreviousValues
}

input ChongduCompanyauthentLogSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduCompanyauthentLogWhereInput
  AND: [ChongduCompanyauthentLogSubscriptionWhereInput!]
  OR: [ChongduCompanyauthentLogSubscriptionWhereInput!]
  NOT: [ChongduCompanyauthentLogSubscriptionWhereInput!]
}

input ChongduCompanyauthentLogUpdateInput {
  companyauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdminUpdateOneInput
  ct: String
  d: Int
}

input ChongduCompanyauthentLogUpdateManyMutationInput {
  companyauthentId: String
  status: Int
  remark: String
  ct: String
  d: Int
}

input ChongduCompanyauthentLogWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  companyauthentId: String
  companyauthentId_not: String
  companyauthentId_in: [String!]
  companyauthentId_not_in: [String!]
  companyauthentId_lt: String
  companyauthentId_lte: String
  companyauthentId_gt: String
  companyauthentId_gte: String
  companyauthentId_contains: String
  companyauthentId_not_contains: String
  companyauthentId_starts_with: String
  companyauthentId_not_starts_with: String
  companyauthentId_ends_with: String
  companyauthentId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  remark: String
  remark_not: String
  remark_in: [String!]
  remark_not_in: [String!]
  remark_lt: String
  remark_lte: String
  remark_gt: String
  remark_gte: String
  remark_contains: String
  remark_not_contains: String
  remark_starts_with: String
  remark_not_starts_with: String
  remark_ends_with: String
  remark_not_ends_with: String
  cadminId: ChongduAdminWhereInput
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  AND: [ChongduCompanyauthentLogWhereInput!]
  OR: [ChongduCompanyauthentLogWhereInput!]
  NOT: [ChongduCompanyauthentLogWhereInput!]
}

input ChongduCompanyauthentLogWhereUniqueInput {
  id: Int
}

enum ChongduCompanyauthentOrderByInput {
  id_ASC
  id_DESC
  authType_ASC
  authType_DESC
  backPhoto_ASC
  backPhoto_DESC
  bisDate_ASC
  bisDate_DESC
  bisPhoto_ASC
  bisPhoto_DESC
  city_ASC
  city_DESC
  citycode_ASC
  citycode_DESC
  companyAddress_ASC
  companyAddress_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  discription_ASC
  discription_DESC
  frontPhoto_ASC
  frontPhoto_DESC
  handPhoto_ASC
  handPhoto_DESC
  headPhoto_ASC
  headPhoto_DESC
  isSame_ASC
  isSame_DESC
  latitude_ASC
  latitude_DESC
  legalDi_ASC
  legalDi_DESC
  legalName_ASC
  legalName_DESC
  legalTel_ASC
  legalTel_DESC
  longitude_ASC
  longitude_DESC
  merchantId_ASC
  merchantId_DESC
  name_ASC
  name_DESC
  nowAddress_ASC
  nowAddress_DESC
  otherPhoto_ASC
  otherPhoto_DESC
  registMoney_ASC
  registMoney_DESC
  setupDate_ASC
  setupDate_DESC
  socialCode_ASC
  socialCode_DESC
  status_ASC
  status_DESC
}

type ChongduCompanyauthentPreviousValues {
  id: ID!
  authType: String
  backPhoto: String
  bisDate: String
  bisPhoto: String
  city: String
  citycode: String
  companyAddress: String
  ct: String
  d: Int
  discription: String
  frontPhoto: String
  handPhoto: String
  headPhoto: String
  isSame: Int
  latitude: String
  legalDi: String
  legalName: String
  legalTel: String
  longitude: String
  merchantId: String
  name: String
  nowAddress: String
  otherPhoto: String
  registMoney: String
  setupDate: String
  socialCode: String
  status: Int
}

type ChongduCompanyauthentSubscriptionPayload {
  mutation: MutationType!
  node: ChongduCompanyauthent
  updatedFields: [String!]
  previousValues: ChongduCompanyauthentPreviousValues
}

input ChongduCompanyauthentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduCompanyauthentWhereInput
  AND: [ChongduCompanyauthentSubscriptionWhereInput!]
  OR: [ChongduCompanyauthentSubscriptionWhereInput!]
  NOT: [ChongduCompanyauthentSubscriptionWhereInput!]
}

input ChongduCompanyauthentUpdateInput {
  authType: String
  backPhoto: String
  bisDate: String
  bisPhoto: String
  city: String
  citycode: String
  companyAddress: String
  ct: String
  d: Int
  discription: String
  frontPhoto: String
  handPhoto: String
  headPhoto: String
  isSame: Int
  latitude: String
  legalDi: String
  legalName: String
  legalTel: String
  longitude: String
  merchantId: String
  name: String
  nowAddress: String
  otherPhoto: String
  registMoney: String
  setupDate: String
  socialCode: String
  status: Int
  userId: ChongduUserUpdateOneInput
}

input ChongduCompanyauthentUpdateManyMutationInput {
  authType: String
  backPhoto: String
  bisDate: String
  bisPhoto: String
  city: String
  citycode: String
  companyAddress: String
  ct: String
  d: Int
  discription: String
  frontPhoto: String
  handPhoto: String
  headPhoto: String
  isSame: Int
  latitude: String
  legalDi: String
  legalName: String
  legalTel: String
  longitude: String
  merchantId: String
  name: String
  nowAddress: String
  otherPhoto: String
  registMoney: String
  setupDate: String
  socialCode: String
  status: Int
}

input ChongduCompanyauthentWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  authType: String
  authType_not: String
  authType_in: [String!]
  authType_not_in: [String!]
  authType_lt: String
  authType_lte: String
  authType_gt: String
  authType_gte: String
  authType_contains: String
  authType_not_contains: String
  authType_starts_with: String
  authType_not_starts_with: String
  authType_ends_with: String
  authType_not_ends_with: String
  backPhoto: String
  backPhoto_not: String
  backPhoto_in: [String!]
  backPhoto_not_in: [String!]
  backPhoto_lt: String
  backPhoto_lte: String
  backPhoto_gt: String
  backPhoto_gte: String
  backPhoto_contains: String
  backPhoto_not_contains: String
  backPhoto_starts_with: String
  backPhoto_not_starts_with: String
  backPhoto_ends_with: String
  backPhoto_not_ends_with: String
  bisDate: String
  bisDate_not: String
  bisDate_in: [String!]
  bisDate_not_in: [String!]
  bisDate_lt: String
  bisDate_lte: String
  bisDate_gt: String
  bisDate_gte: String
  bisDate_contains: String
  bisDate_not_contains: String
  bisDate_starts_with: String
  bisDate_not_starts_with: String
  bisDate_ends_with: String
  bisDate_not_ends_with: String
  bisPhoto: String
  bisPhoto_not: String
  bisPhoto_in: [String!]
  bisPhoto_not_in: [String!]
  bisPhoto_lt: String
  bisPhoto_lte: String
  bisPhoto_gt: String
  bisPhoto_gte: String
  bisPhoto_contains: String
  bisPhoto_not_contains: String
  bisPhoto_starts_with: String
  bisPhoto_not_starts_with: String
  bisPhoto_ends_with: String
  bisPhoto_not_ends_with: String
  city: String
  city_not: String
  city_in: [String!]
  city_not_in: [String!]
  city_lt: String
  city_lte: String
  city_gt: String
  city_gte: String
  city_contains: String
  city_not_contains: String
  city_starts_with: String
  city_not_starts_with: String
  city_ends_with: String
  city_not_ends_with: String
  citycode: String
  citycode_not: String
  citycode_in: [String!]
  citycode_not_in: [String!]
  citycode_lt: String
  citycode_lte: String
  citycode_gt: String
  citycode_gte: String
  citycode_contains: String
  citycode_not_contains: String
  citycode_starts_with: String
  citycode_not_starts_with: String
  citycode_ends_with: String
  citycode_not_ends_with: String
  companyAddress: String
  companyAddress_not: String
  companyAddress_in: [String!]
  companyAddress_not_in: [String!]
  companyAddress_lt: String
  companyAddress_lte: String
  companyAddress_gt: String
  companyAddress_gte: String
  companyAddress_contains: String
  companyAddress_not_contains: String
  companyAddress_starts_with: String
  companyAddress_not_starts_with: String
  companyAddress_ends_with: String
  companyAddress_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  discription: String
  discription_not: String
  discription_in: [String!]
  discription_not_in: [String!]
  discription_lt: String
  discription_lte: String
  discription_gt: String
  discription_gte: String
  discription_contains: String
  discription_not_contains: String
  discription_starts_with: String
  discription_not_starts_with: String
  discription_ends_with: String
  discription_not_ends_with: String
  frontPhoto: String
  frontPhoto_not: String
  frontPhoto_in: [String!]
  frontPhoto_not_in: [String!]
  frontPhoto_lt: String
  frontPhoto_lte: String
  frontPhoto_gt: String
  frontPhoto_gte: String
  frontPhoto_contains: String
  frontPhoto_not_contains: String
  frontPhoto_starts_with: String
  frontPhoto_not_starts_with: String
  frontPhoto_ends_with: String
  frontPhoto_not_ends_with: String
  handPhoto: String
  handPhoto_not: String
  handPhoto_in: [String!]
  handPhoto_not_in: [String!]
  handPhoto_lt: String
  handPhoto_lte: String
  handPhoto_gt: String
  handPhoto_gte: String
  handPhoto_contains: String
  handPhoto_not_contains: String
  handPhoto_starts_with: String
  handPhoto_not_starts_with: String
  handPhoto_ends_with: String
  handPhoto_not_ends_with: String
  headPhoto: String
  headPhoto_not: String
  headPhoto_in: [String!]
  headPhoto_not_in: [String!]
  headPhoto_lt: String
  headPhoto_lte: String
  headPhoto_gt: String
  headPhoto_gte: String
  headPhoto_contains: String
  headPhoto_not_contains: String
  headPhoto_starts_with: String
  headPhoto_not_starts_with: String
  headPhoto_ends_with: String
  headPhoto_not_ends_with: String
  isSame: Int
  isSame_not: Int
  isSame_in: [Int!]
  isSame_not_in: [Int!]
  isSame_lt: Int
  isSame_lte: Int
  isSame_gt: Int
  isSame_gte: Int
  latitude: String
  latitude_not: String
  latitude_in: [String!]
  latitude_not_in: [String!]
  latitude_lt: String
  latitude_lte: String
  latitude_gt: String
  latitude_gte: String
  latitude_contains: String
  latitude_not_contains: String
  latitude_starts_with: String
  latitude_not_starts_with: String
  latitude_ends_with: String
  latitude_not_ends_with: String
  legalDi: String
  legalDi_not: String
  legalDi_in: [String!]
  legalDi_not_in: [String!]
  legalDi_lt: String
  legalDi_lte: String
  legalDi_gt: String
  legalDi_gte: String
  legalDi_contains: String
  legalDi_not_contains: String
  legalDi_starts_with: String
  legalDi_not_starts_with: String
  legalDi_ends_with: String
  legalDi_not_ends_with: String
  legalName: String
  legalName_not: String
  legalName_in: [String!]
  legalName_not_in: [String!]
  legalName_lt: String
  legalName_lte: String
  legalName_gt: String
  legalName_gte: String
  legalName_contains: String
  legalName_not_contains: String
  legalName_starts_with: String
  legalName_not_starts_with: String
  legalName_ends_with: String
  legalName_not_ends_with: String
  legalTel: String
  legalTel_not: String
  legalTel_in: [String!]
  legalTel_not_in: [String!]
  legalTel_lt: String
  legalTel_lte: String
  legalTel_gt: String
  legalTel_gte: String
  legalTel_contains: String
  legalTel_not_contains: String
  legalTel_starts_with: String
  legalTel_not_starts_with: String
  legalTel_ends_with: String
  legalTel_not_ends_with: String
  longitude: String
  longitude_not: String
  longitude_in: [String!]
  longitude_not_in: [String!]
  longitude_lt: String
  longitude_lte: String
  longitude_gt: String
  longitude_gte: String
  longitude_contains: String
  longitude_not_contains: String
  longitude_starts_with: String
  longitude_not_starts_with: String
  longitude_ends_with: String
  longitude_not_ends_with: String
  merchantId: String
  merchantId_not: String
  merchantId_in: [String!]
  merchantId_not_in: [String!]
  merchantId_lt: String
  merchantId_lte: String
  merchantId_gt: String
  merchantId_gte: String
  merchantId_contains: String
  merchantId_not_contains: String
  merchantId_starts_with: String
  merchantId_not_starts_with: String
  merchantId_ends_with: String
  merchantId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  nowAddress: String
  nowAddress_not: String
  nowAddress_in: [String!]
  nowAddress_not_in: [String!]
  nowAddress_lt: String
  nowAddress_lte: String
  nowAddress_gt: String
  nowAddress_gte: String
  nowAddress_contains: String
  nowAddress_not_contains: String
  nowAddress_starts_with: String
  nowAddress_not_starts_with: String
  nowAddress_ends_with: String
  nowAddress_not_ends_with: String
  otherPhoto: String
  otherPhoto_not: String
  otherPhoto_in: [String!]
  otherPhoto_not_in: [String!]
  otherPhoto_lt: String
  otherPhoto_lte: String
  otherPhoto_gt: String
  otherPhoto_gte: String
  otherPhoto_contains: String
  otherPhoto_not_contains: String
  otherPhoto_starts_with: String
  otherPhoto_not_starts_with: String
  otherPhoto_ends_with: String
  otherPhoto_not_ends_with: String
  registMoney: String
  registMoney_not: String
  registMoney_in: [String!]
  registMoney_not_in: [String!]
  registMoney_lt: String
  registMoney_lte: String
  registMoney_gt: String
  registMoney_gte: String
  registMoney_contains: String
  registMoney_not_contains: String
  registMoney_starts_with: String
  registMoney_not_starts_with: String
  registMoney_ends_with: String
  registMoney_not_ends_with: String
  setupDate: String
  setupDate_not: String
  setupDate_in: [String!]
  setupDate_not_in: [String!]
  setupDate_lt: String
  setupDate_lte: String
  setupDate_gt: String
  setupDate_gte: String
  setupDate_contains: String
  setupDate_not_contains: String
  setupDate_starts_with: String
  setupDate_not_starts_with: String
  setupDate_ends_with: String
  setupDate_not_ends_with: String
  socialCode: String
  socialCode_not: String
  socialCode_in: [String!]
  socialCode_not_in: [String!]
  socialCode_lt: String
  socialCode_lte: String
  socialCode_gt: String
  socialCode_gte: String
  socialCode_contains: String
  socialCode_not_contains: String
  socialCode_starts_with: String
  socialCode_not_starts_with: String
  socialCode_ends_with: String
  socialCode_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  userId: ChongduUserWhereInput
  AND: [ChongduCompanyauthentWhereInput!]
  OR: [ChongduCompanyauthentWhereInput!]
  NOT: [ChongduCompanyauthentWhereInput!]
}

input ChongduCompanyauthentWhereUniqueInput {
  id: ID
}

type ChongduCompanyrecommend {
  id: Int!
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: Int
  endtime: DateTime
  fullname: String
  merchantId: String
  mt: String
  muserid: String
  name: String
  sort: Int
  starttime: DateTime
  status: Int
}

type ChongduCompanyrecommendConnection {
  pageInfo: PageInfo!
  edges: [ChongduCompanyrecommendEdge]!
  aggregate: AggregateChongduCompanyrecommend!
}

input ChongduCompanyrecommendCreateInput {
  id: Int
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: Int
  endtime: DateTime
  fullname: String
  merchantId: String
  mt: String
  muserid: String
  name: String
  sort: Int
  starttime: DateTime
  status: Int
}

type ChongduCompanyrecommendEdge {
  node: ChongduCompanyrecommend!
  cursor: String!
}

enum ChongduCompanyrecommendOrderByInput {
  id_ASC
  id_DESC
  citycode_ASC
  citycode_DESC
  ct_ASC
  ct_DESC
  cuserid_ASC
  cuserid_DESC
  d_ASC
  d_DESC
  deviceid_ASC
  deviceid_DESC
  endtime_ASC
  endtime_DESC
  fullname_ASC
  fullname_DESC
  merchantId_ASC
  merchantId_DESC
  mt_ASC
  mt_DESC
  muserid_ASC
  muserid_DESC
  name_ASC
  name_DESC
  sort_ASC
  sort_DESC
  starttime_ASC
  starttime_DESC
  status_ASC
  status_DESC
}

type ChongduCompanyrecommendPreviousValues {
  id: Int!
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: Int
  endtime: DateTime
  fullname: String
  merchantId: String
  mt: String
  muserid: String
  name: String
  sort: Int
  starttime: DateTime
  status: Int
}

type ChongduCompanyrecommendSubscriptionPayload {
  mutation: MutationType!
  node: ChongduCompanyrecommend
  updatedFields: [String!]
  previousValues: ChongduCompanyrecommendPreviousValues
}

input ChongduCompanyrecommendSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduCompanyrecommendWhereInput
  AND: [ChongduCompanyrecommendSubscriptionWhereInput!]
  OR: [ChongduCompanyrecommendSubscriptionWhereInput!]
  NOT: [ChongduCompanyrecommendSubscriptionWhereInput!]
}

input ChongduCompanyrecommendUpdateInput {
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: Int
  endtime: DateTime
  fullname: String
  merchantId: String
  mt: String
  muserid: String
  name: String
  sort: Int
  starttime: DateTime
  status: Int
}

input ChongduCompanyrecommendUpdateManyMutationInput {
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: Int
  endtime: DateTime
  fullname: String
  merchantId: String
  mt: String
  muserid: String
  name: String
  sort: Int
  starttime: DateTime
  status: Int
}

input ChongduCompanyrecommendWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  citycode: String
  citycode_not: String
  citycode_in: [String!]
  citycode_not_in: [String!]
  citycode_lt: String
  citycode_lte: String
  citycode_gt: String
  citycode_gte: String
  citycode_contains: String
  citycode_not_contains: String
  citycode_starts_with: String
  citycode_not_starts_with: String
  citycode_ends_with: String
  citycode_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserid: String
  cuserid_not: String
  cuserid_in: [String!]
  cuserid_not_in: [String!]
  cuserid_lt: String
  cuserid_lte: String
  cuserid_gt: String
  cuserid_gte: String
  cuserid_contains: String
  cuserid_not_contains: String
  cuserid_starts_with: String
  cuserid_not_starts_with: String
  cuserid_ends_with: String
  cuserid_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  deviceid: Int
  deviceid_not: Int
  deviceid_in: [Int!]
  deviceid_not_in: [Int!]
  deviceid_lt: Int
  deviceid_lte: Int
  deviceid_gt: Int
  deviceid_gte: Int
  endtime: DateTime
  endtime_not: DateTime
  endtime_in: [DateTime!]
  endtime_not_in: [DateTime!]
  endtime_lt: DateTime
  endtime_lte: DateTime
  endtime_gt: DateTime
  endtime_gte: DateTime
  fullname: String
  fullname_not: String
  fullname_in: [String!]
  fullname_not_in: [String!]
  fullname_lt: String
  fullname_lte: String
  fullname_gt: String
  fullname_gte: String
  fullname_contains: String
  fullname_not_contains: String
  fullname_starts_with: String
  fullname_not_starts_with: String
  fullname_ends_with: String
  fullname_not_ends_with: String
  merchantId: String
  merchantId_not: String
  merchantId_in: [String!]
  merchantId_not_in: [String!]
  merchantId_lt: String
  merchantId_lte: String
  merchantId_gt: String
  merchantId_gte: String
  merchantId_contains: String
  merchantId_not_contains: String
  merchantId_starts_with: String
  merchantId_not_starts_with: String
  merchantId_ends_with: String
  merchantId_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserid: String
  muserid_not: String
  muserid_in: [String!]
  muserid_not_in: [String!]
  muserid_lt: String
  muserid_lte: String
  muserid_gt: String
  muserid_gte: String
  muserid_contains: String
  muserid_not_contains: String
  muserid_starts_with: String
  muserid_not_starts_with: String
  muserid_ends_with: String
  muserid_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  starttime: DateTime
  starttime_not: DateTime
  starttime_in: [DateTime!]
  starttime_not_in: [DateTime!]
  starttime_lt: DateTime
  starttime_lte: DateTime
  starttime_gt: DateTime
  starttime_gte: DateTime
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  AND: [ChongduCompanyrecommendWhereInput!]
  OR: [ChongduCompanyrecommendWhereInput!]
  NOT: [ChongduCompanyrecommendWhereInput!]
}

input ChongduCompanyrecommendWhereUniqueInput {
  id: Int
}

type ChongduCorrelation {
  id: ID!
  ct: String
  d: Int
  petLevelId: Int
  petTypeId: Int
  productId: String
  serviceId: String
  type: Int
}

type ChongduCorrelationConnection {
  pageInfo: PageInfo!
  edges: [ChongduCorrelationEdge]!
  aggregate: AggregateChongduCorrelation!
}

input ChongduCorrelationCreateInput {
  id: ID
  ct: String
  d: Int
  petLevelId: Int
  petTypeId: Int
  productId: String
  serviceId: String
  type: Int
}

type ChongduCorrelationEdge {
  node: ChongduCorrelation!
  cursor: String!
}

enum ChongduCorrelationOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  petLevelId_ASC
  petLevelId_DESC
  petTypeId_ASC
  petTypeId_DESC
  productId_ASC
  productId_DESC
  serviceId_ASC
  serviceId_DESC
  type_ASC
  type_DESC
}

type ChongduCorrelationPreviousValues {
  id: ID!
  ct: String
  d: Int
  petLevelId: Int
  petTypeId: Int
  productId: String
  serviceId: String
  type: Int
}

type ChongduCorrelationSubscriptionPayload {
  mutation: MutationType!
  node: ChongduCorrelation
  updatedFields: [String!]
  previousValues: ChongduCorrelationPreviousValues
}

input ChongduCorrelationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduCorrelationWhereInput
  AND: [ChongduCorrelationSubscriptionWhereInput!]
  OR: [ChongduCorrelationSubscriptionWhereInput!]
  NOT: [ChongduCorrelationSubscriptionWhereInput!]
}

input ChongduCorrelationUpdateInput {
  ct: String
  d: Int
  petLevelId: Int
  petTypeId: Int
  productId: String
  serviceId: String
  type: Int
}

input ChongduCorrelationUpdateManyMutationInput {
  ct: String
  d: Int
  petLevelId: Int
  petTypeId: Int
  productId: String
  serviceId: String
  type: Int
}

input ChongduCorrelationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  petLevelId: Int
  petLevelId_not: Int
  petLevelId_in: [Int!]
  petLevelId_not_in: [Int!]
  petLevelId_lt: Int
  petLevelId_lte: Int
  petLevelId_gt: Int
  petLevelId_gte: Int
  petTypeId: Int
  petTypeId_not: Int
  petTypeId_in: [Int!]
  petTypeId_not_in: [Int!]
  petTypeId_lt: Int
  petTypeId_lte: Int
  petTypeId_gt: Int
  petTypeId_gte: Int
  productId: String
  productId_not: String
  productId_in: [String!]
  productId_not_in: [String!]
  productId_lt: String
  productId_lte: String
  productId_gt: String
  productId_gte: String
  productId_contains: String
  productId_not_contains: String
  productId_starts_with: String
  productId_not_starts_with: String
  productId_ends_with: String
  productId_not_ends_with: String
  serviceId: String
  serviceId_not: String
  serviceId_in: [String!]
  serviceId_not_in: [String!]
  serviceId_lt: String
  serviceId_lte: String
  serviceId_gt: String
  serviceId_gte: String
  serviceId_contains: String
  serviceId_not_contains: String
  serviceId_starts_with: String
  serviceId_not_starts_with: String
  serviceId_ends_with: String
  serviceId_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  AND: [ChongduCorrelationWhereInput!]
  OR: [ChongduCorrelationWhereInput!]
  NOT: [ChongduCorrelationWhereInput!]
}

input ChongduCorrelationWhereUniqueInput {
  id: ID
}

type ChongduDataVersion {
  id: Int!
  ip: String
  mac: String
  mt: String
  muserId: String
  name: String
  type: Int
  versionCode: String
}

type ChongduDataVersionConnection {
  pageInfo: PageInfo!
  edges: [ChongduDataVersionEdge]!
  aggregate: AggregateChongduDataVersion!
}

input ChongduDataVersionCreateInput {
  id: Int
  ip: String
  mac: String
  mt: String
  muserId: String
  name: String
  type: Int
  versionCode: String
}

type ChongduDataVersionEdge {
  node: ChongduDataVersion!
  cursor: String!
}

enum ChongduDataVersionOrderByInput {
  id_ASC
  id_DESC
  ip_ASC
  ip_DESC
  mac_ASC
  mac_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  name_ASC
  name_DESC
  type_ASC
  type_DESC
  versionCode_ASC
  versionCode_DESC
}

type ChongduDataVersionPreviousValues {
  id: Int!
  ip: String
  mac: String
  mt: String
  muserId: String
  name: String
  type: Int
  versionCode: String
}

type ChongduDataVersionSubscriptionPayload {
  mutation: MutationType!
  node: ChongduDataVersion
  updatedFields: [String!]
  previousValues: ChongduDataVersionPreviousValues
}

input ChongduDataVersionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduDataVersionWhereInput
  AND: [ChongduDataVersionSubscriptionWhereInput!]
  OR: [ChongduDataVersionSubscriptionWhereInput!]
  NOT: [ChongduDataVersionSubscriptionWhereInput!]
}

input ChongduDataVersionUpdateInput {
  ip: String
  mac: String
  mt: String
  muserId: String
  name: String
  type: Int
  versionCode: String
}

input ChongduDataVersionUpdateManyMutationInput {
  ip: String
  mac: String
  mt: String
  muserId: String
  name: String
  type: Int
  versionCode: String
}

input ChongduDataVersionWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ip: String
  ip_not: String
  ip_in: [String!]
  ip_not_in: [String!]
  ip_lt: String
  ip_lte: String
  ip_gt: String
  ip_gte: String
  ip_contains: String
  ip_not_contains: String
  ip_starts_with: String
  ip_not_starts_with: String
  ip_ends_with: String
  ip_not_ends_with: String
  mac: String
  mac_not: String
  mac_in: [String!]
  mac_not_in: [String!]
  mac_lt: String
  mac_lte: String
  mac_gt: String
  mac_gte: String
  mac_contains: String
  mac_not_contains: String
  mac_starts_with: String
  mac_not_starts_with: String
  mac_ends_with: String
  mac_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  versionCode: String
  versionCode_not: String
  versionCode_in: [String!]
  versionCode_not_in: [String!]
  versionCode_lt: String
  versionCode_lte: String
  versionCode_gt: String
  versionCode_gte: String
  versionCode_contains: String
  versionCode_not_contains: String
  versionCode_starts_with: String
  versionCode_not_starts_with: String
  versionCode_ends_with: String
  versionCode_not_ends_with: String
  AND: [ChongduDataVersionWhereInput!]
  OR: [ChongduDataVersionWhereInput!]
  NOT: [ChongduDataVersionWhereInput!]
}

input ChongduDataVersionWhereUniqueInput {
  id: Int
}

type ChongduDiscuss {
  id: Int!
  content: String
  ct: String
  d: Int
  pSComId: Int
  replyType: Int
  userId: String
}

type ChongduDiscussConnection {
  pageInfo: PageInfo!
  edges: [ChongduDiscussEdge]!
  aggregate: AggregateChongduDiscuss!
}

input ChongduDiscussCreateInput {
  id: Int
  content: String
  ct: String
  d: Int
  pSComId: Int
  replyType: Int
  userId: String
}

type ChongduDiscussEdge {
  node: ChongduDiscuss!
  cursor: String!
}

enum ChongduDiscussOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  pSComId_ASC
  pSComId_DESC
  replyType_ASC
  replyType_DESC
  userId_ASC
  userId_DESC
}

type ChongduDiscussPreviousValues {
  id: Int!
  content: String
  ct: String
  d: Int
  pSComId: Int
  replyType: Int
  userId: String
}

type ChongduDiscussSubscriptionPayload {
  mutation: MutationType!
  node: ChongduDiscuss
  updatedFields: [String!]
  previousValues: ChongduDiscussPreviousValues
}

input ChongduDiscussSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduDiscussWhereInput
  AND: [ChongduDiscussSubscriptionWhereInput!]
  OR: [ChongduDiscussSubscriptionWhereInput!]
  NOT: [ChongduDiscussSubscriptionWhereInput!]
}

input ChongduDiscussUpdateInput {
  content: String
  ct: String
  d: Int
  pSComId: Int
  replyType: Int
  userId: String
}

input ChongduDiscussUpdateManyMutationInput {
  content: String
  ct: String
  d: Int
  pSComId: Int
  replyType: Int
  userId: String
}

input ChongduDiscussWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  pSComId: Int
  pSComId_not: Int
  pSComId_in: [Int!]
  pSComId_not_in: [Int!]
  pSComId_lt: Int
  pSComId_lte: Int
  pSComId_gt: Int
  pSComId_gte: Int
  replyType: Int
  replyType_not: Int
  replyType_in: [Int!]
  replyType_not_in: [Int!]
  replyType_lt: Int
  replyType_lte: Int
  replyType_gt: Int
  replyType_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduDiscussWhereInput!]
  OR: [ChongduDiscussWhereInput!]
  NOT: [ChongduDiscussWhereInput!]
}

input ChongduDiscussWhereUniqueInput {
  id: Int
}

type ChongduFilemanage {
  id: Int!
  ct: String
  customtype: Int
  d: Int
  filename: String
  mt: String
  path: String
  pid: String
  sort: Int
  status: Int
  tablename: String
  type: Int
  userid: String
}

type ChongduFilemanageConnection {
  pageInfo: PageInfo!
  edges: [ChongduFilemanageEdge]!
  aggregate: AggregateChongduFilemanage!
}

input ChongduFilemanageCreateInput {
  id: Int
  ct: String
  customtype: Int
  d: Int
  filename: String
  mt: String
  path: String
  pid: String
  sort: Int
  status: Int
  tablename: String
  type: Int
  userid: String
}

type ChongduFilemanageEdge {
  node: ChongduFilemanage!
  cursor: String!
}

enum ChongduFilemanageOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  customtype_ASC
  customtype_DESC
  d_ASC
  d_DESC
  filename_ASC
  filename_DESC
  mt_ASC
  mt_DESC
  path_ASC
  path_DESC
  pid_ASC
  pid_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  tablename_ASC
  tablename_DESC
  type_ASC
  type_DESC
  userid_ASC
  userid_DESC
}

type ChongduFilemanagePreviousValues {
  id: Int!
  ct: String
  customtype: Int
  d: Int
  filename: String
  mt: String
  path: String
  pid: String
  sort: Int
  status: Int
  tablename: String
  type: Int
  userid: String
}

type ChongduFilemanageSubscriptionPayload {
  mutation: MutationType!
  node: ChongduFilemanage
  updatedFields: [String!]
  previousValues: ChongduFilemanagePreviousValues
}

input ChongduFilemanageSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduFilemanageWhereInput
  AND: [ChongduFilemanageSubscriptionWhereInput!]
  OR: [ChongduFilemanageSubscriptionWhereInput!]
  NOT: [ChongduFilemanageSubscriptionWhereInput!]
}

input ChongduFilemanageUpdateInput {
  ct: String
  customtype: Int
  d: Int
  filename: String
  mt: String
  path: String
  pid: String
  sort: Int
  status: Int
  tablename: String
  type: Int
  userid: String
}

input ChongduFilemanageUpdateManyMutationInput {
  ct: String
  customtype: Int
  d: Int
  filename: String
  mt: String
  path: String
  pid: String
  sort: Int
  status: Int
  tablename: String
  type: Int
  userid: String
}

input ChongduFilemanageWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  customtype: Int
  customtype_not: Int
  customtype_in: [Int!]
  customtype_not_in: [Int!]
  customtype_lt: Int
  customtype_lte: Int
  customtype_gt: Int
  customtype_gte: Int
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  filename: String
  filename_not: String
  filename_in: [String!]
  filename_not_in: [String!]
  filename_lt: String
  filename_lte: String
  filename_gt: String
  filename_gte: String
  filename_contains: String
  filename_not_contains: String
  filename_starts_with: String
  filename_not_starts_with: String
  filename_ends_with: String
  filename_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  path: String
  path_not: String
  path_in: [String!]
  path_not_in: [String!]
  path_lt: String
  path_lte: String
  path_gt: String
  path_gte: String
  path_contains: String
  path_not_contains: String
  path_starts_with: String
  path_not_starts_with: String
  path_ends_with: String
  path_not_ends_with: String
  pid: String
  pid_not: String
  pid_in: [String!]
  pid_not_in: [String!]
  pid_lt: String
  pid_lte: String
  pid_gt: String
  pid_gte: String
  pid_contains: String
  pid_not_contains: String
  pid_starts_with: String
  pid_not_starts_with: String
  pid_ends_with: String
  pid_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  tablename: String
  tablename_not: String
  tablename_in: [String!]
  tablename_not_in: [String!]
  tablename_lt: String
  tablename_lte: String
  tablename_gt: String
  tablename_gte: String
  tablename_contains: String
  tablename_not_contains: String
  tablename_starts_with: String
  tablename_not_starts_with: String
  tablename_ends_with: String
  tablename_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userid: String
  userid_not: String
  userid_in: [String!]
  userid_not_in: [String!]
  userid_lt: String
  userid_lte: String
  userid_gt: String
  userid_gte: String
  userid_contains: String
  userid_not_contains: String
  userid_starts_with: String
  userid_not_starts_with: String
  userid_ends_with: String
  userid_not_ends_with: String
  AND: [ChongduFilemanageWhereInput!]
  OR: [ChongduFilemanageWhereInput!]
  NOT: [ChongduFilemanageWhereInput!]
}

input ChongduFilemanageWhereUniqueInput {
  id: Int
}

type ChongduFocusing {
  id: Int!
  ct: String
  d: Int
  fUserId: String
  status: Int
  userId: String
}

type ChongduFocusingConnection {
  pageInfo: PageInfo!
  edges: [ChongduFocusingEdge]!
  aggregate: AggregateChongduFocusing!
}

input ChongduFocusingCreateInput {
  id: Int
  ct: String
  d: Int
  fUserId: String
  status: Int
  userId: String
}

type ChongduFocusingEdge {
  node: ChongduFocusing!
  cursor: String!
}

enum ChongduFocusingOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  fUserId_ASC
  fUserId_DESC
  status_ASC
  status_DESC
  userId_ASC
  userId_DESC
}

type ChongduFocusingPreviousValues {
  id: Int!
  ct: String
  d: Int
  fUserId: String
  status: Int
  userId: String
}

type ChongduFocusingSubscriptionPayload {
  mutation: MutationType!
  node: ChongduFocusing
  updatedFields: [String!]
  previousValues: ChongduFocusingPreviousValues
}

input ChongduFocusingSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduFocusingWhereInput
  AND: [ChongduFocusingSubscriptionWhereInput!]
  OR: [ChongduFocusingSubscriptionWhereInput!]
  NOT: [ChongduFocusingSubscriptionWhereInput!]
}

input ChongduFocusingUpdateInput {
  ct: String
  d: Int
  fUserId: String
  status: Int
  userId: String
}

input ChongduFocusingUpdateManyMutationInput {
  ct: String
  d: Int
  fUserId: String
  status: Int
  userId: String
}

input ChongduFocusingWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  fUserId: String
  fUserId_not: String
  fUserId_in: [String!]
  fUserId_not_in: [String!]
  fUserId_lt: String
  fUserId_lte: String
  fUserId_gt: String
  fUserId_gte: String
  fUserId_contains: String
  fUserId_not_contains: String
  fUserId_starts_with: String
  fUserId_not_starts_with: String
  fUserId_ends_with: String
  fUserId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduFocusingWhereInput!]
  OR: [ChongduFocusingWhereInput!]
  NOT: [ChongduFocusingWhereInput!]
}

input ChongduFocusingWhereUniqueInput {
  id: Int
}

type ChongduInform {
  id: Int!
  type: Int
  relatedType: Int
  relatedId: Int
  description: String
  image: String
  userId: ChongduUser
  status: Int
  disposeBy: ChongduAdmin
  disposeAt: String
  ct: String
  d: Int
}

type ChongduInformConnection {
  pageInfo: PageInfo!
  edges: [ChongduInformEdge]!
  aggregate: AggregateChongduInform!
}

input ChongduInformCreateInput {
  id: Int
  type: Int
  relatedType: Int
  relatedId: Int
  description: String
  image: String
  userId: ChongduUserCreateOneInput
  status: Int
  disposeBy: ChongduAdminCreateOneInput
  disposeAt: String
  ct: String
  d: Int
}

type ChongduInformEdge {
  node: ChongduInform!
  cursor: String!
}

enum ChongduInformOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  relatedType_ASC
  relatedType_DESC
  relatedId_ASC
  relatedId_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  status_ASC
  status_DESC
  disposeAt_ASC
  disposeAt_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
}

type ChongduInformPreviousValues {
  id: Int!
  type: Int
  relatedType: Int
  relatedId: Int
  description: String
  image: String
  status: Int
  disposeAt: String
  ct: String
  d: Int
}

type ChongduInformSubscriptionPayload {
  mutation: MutationType!
  node: ChongduInform
  updatedFields: [String!]
  previousValues: ChongduInformPreviousValues
}

input ChongduInformSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduInformWhereInput
  AND: [ChongduInformSubscriptionWhereInput!]
  OR: [ChongduInformSubscriptionWhereInput!]
  NOT: [ChongduInformSubscriptionWhereInput!]
}

input ChongduInformUpdateInput {
  type: Int
  relatedType: Int
  relatedId: Int
  description: String
  image: String
  userId: ChongduUserUpdateOneInput
  status: Int
  disposeBy: ChongduAdminUpdateOneInput
  disposeAt: String
  ct: String
  d: Int
}

input ChongduInformUpdateManyMutationInput {
  type: Int
  relatedType: Int
  relatedId: Int
  description: String
  image: String
  status: Int
  disposeAt: String
  ct: String
  d: Int
}

input ChongduInformWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  relatedType: Int
  relatedType_not: Int
  relatedType_in: [Int!]
  relatedType_not_in: [Int!]
  relatedType_lt: Int
  relatedType_lte: Int
  relatedType_gt: Int
  relatedType_gte: Int
  relatedId: Int
  relatedId_not: Int
  relatedId_in: [Int!]
  relatedId_not_in: [Int!]
  relatedId_lt: Int
  relatedId_lte: Int
  relatedId_gt: Int
  relatedId_gte: Int
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  userId: ChongduUserWhereInput
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  disposeBy: ChongduAdminWhereInput
  disposeAt: String
  disposeAt_not: String
  disposeAt_in: [String!]
  disposeAt_not_in: [String!]
  disposeAt_lt: String
  disposeAt_lte: String
  disposeAt_gt: String
  disposeAt_gte: String
  disposeAt_contains: String
  disposeAt_not_contains: String
  disposeAt_starts_with: String
  disposeAt_not_starts_with: String
  disposeAt_ends_with: String
  disposeAt_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  AND: [ChongduInformWhereInput!]
  OR: [ChongduInformWhereInput!]
  NOT: [ChongduInformWhereInput!]
}

input ChongduInformWhereUniqueInput {
  id: Int
}

type ChongduLock {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  sort: Int
  status: Int
  thread: String
  tName: String
  type: Int
  userId: String
}

type ChongduLockConnection {
  pageInfo: PageInfo!
  edges: [ChongduLockEdge]!
  aggregate: AggregateChongduLock!
}

input ChongduLockCreateInput {
  id: Int
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  sort: Int
  status: Int
  thread: String
  tName: String
  type: Int
  userId: String
}

type ChongduLockEdge {
  node: ChongduLock!
  cursor: String!
}

enum ChongduLockOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  thread_ASC
  thread_DESC
  tName_ASC
  tName_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduLockPreviousValues {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  sort: Int
  status: Int
  thread: String
  tName: String
  type: Int
  userId: String
}

type ChongduLockSubscriptionPayload {
  mutation: MutationType!
  node: ChongduLock
  updatedFields: [String!]
  previousValues: ChongduLockPreviousValues
}

input ChongduLockSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduLockWhereInput
  AND: [ChongduLockSubscriptionWhereInput!]
  OR: [ChongduLockSubscriptionWhereInput!]
  NOT: [ChongduLockSubscriptionWhereInput!]
}

input ChongduLockUpdateInput {
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  sort: Int
  status: Int
  thread: String
  tName: String
  type: Int
  userId: String
}

input ChongduLockUpdateManyMutationInput {
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  sort: Int
  status: Int
  thread: String
  tName: String
  type: Int
  userId: String
}

input ChongduLockWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  thread: String
  thread_not: String
  thread_in: [String!]
  thread_not_in: [String!]
  thread_lt: String
  thread_lte: String
  thread_gt: String
  thread_gte: String
  thread_contains: String
  thread_not_contains: String
  thread_starts_with: String
  thread_not_starts_with: String
  thread_ends_with: String
  thread_not_ends_with: String
  tName: String
  tName_not: String
  tName_in: [String!]
  tName_not_in: [String!]
  tName_lt: String
  tName_lte: String
  tName_gt: String
  tName_gte: String
  tName_contains: String
  tName_not_contains: String
  tName_starts_with: String
  tName_not_starts_with: String
  tName_ends_with: String
  tName_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduLockWhereInput!]
  OR: [ChongduLockWhereInput!]
  NOT: [ChongduLockWhereInput!]
}

input ChongduLockWhereUniqueInput {
  id: Int
}

type ChongduLog {
  id: Int!
  cn: String
  ct: String
  cuserId: String
  d: Int
  dataId: Int
  ip: String
  mn: String
  mt: String
  muserId: String
  originalData: String
  sort: Int
  status: Int
  targetData: String
  type: Int
  userId: String
}

type ChongduLogConnection {
  pageInfo: PageInfo!
  edges: [ChongduLogEdge]!
  aggregate: AggregateChongduLog!
}

input ChongduLogCreateInput {
  id: Int
  cn: String
  ct: String
  cuserId: String
  d: Int
  dataId: Int
  ip: String
  mn: String
  mt: String
  muserId: String
  originalData: String
  sort: Int
  status: Int
  targetData: String
  type: Int
  userId: String
}

type ChongduLogEdge {
  node: ChongduLog!
  cursor: String!
}

type ChongduLoginLog {
  id: Int!
  adminId: String
  ip: String
  loginTime: String
  mac: String
  type: Int
  userId: String
}

type ChongduLoginLogConnection {
  pageInfo: PageInfo!
  edges: [ChongduLoginLogEdge]!
  aggregate: AggregateChongduLoginLog!
}

input ChongduLoginLogCreateInput {
  id: Int
  adminId: String
  ip: String
  loginTime: String
  mac: String
  type: Int
  userId: String
}

type ChongduLoginLogEdge {
  node: ChongduLoginLog!
  cursor: String!
}

enum ChongduLoginLogOrderByInput {
  id_ASC
  id_DESC
  adminId_ASC
  adminId_DESC
  ip_ASC
  ip_DESC
  loginTime_ASC
  loginTime_DESC
  mac_ASC
  mac_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduLoginLogPreviousValues {
  id: Int!
  adminId: String
  ip: String
  loginTime: String
  mac: String
  type: Int
  userId: String
}

type ChongduLoginLogSubscriptionPayload {
  mutation: MutationType!
  node: ChongduLoginLog
  updatedFields: [String!]
  previousValues: ChongduLoginLogPreviousValues
}

input ChongduLoginLogSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduLoginLogWhereInput
  AND: [ChongduLoginLogSubscriptionWhereInput!]
  OR: [ChongduLoginLogSubscriptionWhereInput!]
  NOT: [ChongduLoginLogSubscriptionWhereInput!]
}

input ChongduLoginLogUpdateInput {
  adminId: String
  ip: String
  loginTime: String
  mac: String
  type: Int
  userId: String
}

input ChongduLoginLogUpdateManyMutationInput {
  adminId: String
  ip: String
  loginTime: String
  mac: String
  type: Int
  userId: String
}

input ChongduLoginLogWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  adminId: String
  adminId_not: String
  adminId_in: [String!]
  adminId_not_in: [String!]
  adminId_lt: String
  adminId_lte: String
  adminId_gt: String
  adminId_gte: String
  adminId_contains: String
  adminId_not_contains: String
  adminId_starts_with: String
  adminId_not_starts_with: String
  adminId_ends_with: String
  adminId_not_ends_with: String
  ip: String
  ip_not: String
  ip_in: [String!]
  ip_not_in: [String!]
  ip_lt: String
  ip_lte: String
  ip_gt: String
  ip_gte: String
  ip_contains: String
  ip_not_contains: String
  ip_starts_with: String
  ip_not_starts_with: String
  ip_ends_with: String
  ip_not_ends_with: String
  loginTime: String
  loginTime_not: String
  loginTime_in: [String!]
  loginTime_not_in: [String!]
  loginTime_lt: String
  loginTime_lte: String
  loginTime_gt: String
  loginTime_gte: String
  loginTime_contains: String
  loginTime_not_contains: String
  loginTime_starts_with: String
  loginTime_not_starts_with: String
  loginTime_ends_with: String
  loginTime_not_ends_with: String
  mac: String
  mac_not: String
  mac_in: [String!]
  mac_not_in: [String!]
  mac_lt: String
  mac_lte: String
  mac_gt: String
  mac_gte: String
  mac_contains: String
  mac_not_contains: String
  mac_starts_with: String
  mac_not_starts_with: String
  mac_ends_with: String
  mac_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduLoginLogWhereInput!]
  OR: [ChongduLoginLogWhereInput!]
  NOT: [ChongduLoginLogWhereInput!]
}

input ChongduLoginLogWhereUniqueInput {
  id: Int
}

enum ChongduLogOrderByInput {
  id_ASC
  id_DESC
  cn_ASC
  cn_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  dataId_ASC
  dataId_DESC
  ip_ASC
  ip_DESC
  mn_ASC
  mn_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  originalData_ASC
  originalData_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  targetData_ASC
  targetData_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduLogPreviousValues {
  id: Int!
  cn: String
  ct: String
  cuserId: String
  d: Int
  dataId: Int
  ip: String
  mn: String
  mt: String
  muserId: String
  originalData: String
  sort: Int
  status: Int
  targetData: String
  type: Int
  userId: String
}

type ChongduLogSubscriptionPayload {
  mutation: MutationType!
  node: ChongduLog
  updatedFields: [String!]
  previousValues: ChongduLogPreviousValues
}

input ChongduLogSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduLogWhereInput
  AND: [ChongduLogSubscriptionWhereInput!]
  OR: [ChongduLogSubscriptionWhereInput!]
  NOT: [ChongduLogSubscriptionWhereInput!]
}

input ChongduLogUpdateInput {
  cn: String
  ct: String
  cuserId: String
  d: Int
  dataId: Int
  ip: String
  mn: String
  mt: String
  muserId: String
  originalData: String
  sort: Int
  status: Int
  targetData: String
  type: Int
  userId: String
}

input ChongduLogUpdateManyMutationInput {
  cn: String
  ct: String
  cuserId: String
  d: Int
  dataId: Int
  ip: String
  mn: String
  mt: String
  muserId: String
  originalData: String
  sort: Int
  status: Int
  targetData: String
  type: Int
  userId: String
}

input ChongduLogWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  cn: String
  cn_not: String
  cn_in: [String!]
  cn_not_in: [String!]
  cn_lt: String
  cn_lte: String
  cn_gt: String
  cn_gte: String
  cn_contains: String
  cn_not_contains: String
  cn_starts_with: String
  cn_not_starts_with: String
  cn_ends_with: String
  cn_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  dataId: Int
  dataId_not: Int
  dataId_in: [Int!]
  dataId_not_in: [Int!]
  dataId_lt: Int
  dataId_lte: Int
  dataId_gt: Int
  dataId_gte: Int
  ip: String
  ip_not: String
  ip_in: [String!]
  ip_not_in: [String!]
  ip_lt: String
  ip_lte: String
  ip_gt: String
  ip_gte: String
  ip_contains: String
  ip_not_contains: String
  ip_starts_with: String
  ip_not_starts_with: String
  ip_ends_with: String
  ip_not_ends_with: String
  mn: String
  mn_not: String
  mn_in: [String!]
  mn_not_in: [String!]
  mn_lt: String
  mn_lte: String
  mn_gt: String
  mn_gte: String
  mn_contains: String
  mn_not_contains: String
  mn_starts_with: String
  mn_not_starts_with: String
  mn_ends_with: String
  mn_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  originalData: String
  originalData_not: String
  originalData_in: [String!]
  originalData_not_in: [String!]
  originalData_lt: String
  originalData_lte: String
  originalData_gt: String
  originalData_gte: String
  originalData_contains: String
  originalData_not_contains: String
  originalData_starts_with: String
  originalData_not_starts_with: String
  originalData_ends_with: String
  originalData_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  targetData: String
  targetData_not: String
  targetData_in: [String!]
  targetData_not_in: [String!]
  targetData_lt: String
  targetData_lte: String
  targetData_gt: String
  targetData_gte: String
  targetData_contains: String
  targetData_not_contains: String
  targetData_starts_with: String
  targetData_not_starts_with: String
  targetData_ends_with: String
  targetData_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduLogWhereInput!]
  OR: [ChongduLogWhereInput!]
  NOT: [ChongduLogWhereInput!]
}

input ChongduLogWhereUniqueInput {
  id: Int
}

type ChongduMenu {
  id: ID!
  ct: String
  d: Int
  icon: String
  mobile: String
  mobileIcon: String
  modelId: String
  mt: String
  name: String
  path: String
  pid: String
  sort: Int
  status: Int
}

type ChongduMenuConnection {
  pageInfo: PageInfo!
  edges: [ChongduMenuEdge]!
  aggregate: AggregateChongduMenu!
}

input ChongduMenuCreateInput {
  id: ID
  ct: String
  d: Int
  icon: String
  mobile: String
  mobileIcon: String
  modelId: String
  mt: String
  name: String
  path: String
  pid: String
  sort: Int
  status: Int
}

type ChongduMenuEdge {
  node: ChongduMenu!
  cursor: String!
}

enum ChongduMenuOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  icon_ASC
  icon_DESC
  mobile_ASC
  mobile_DESC
  mobileIcon_ASC
  mobileIcon_DESC
  modelId_ASC
  modelId_DESC
  mt_ASC
  mt_DESC
  name_ASC
  name_DESC
  path_ASC
  path_DESC
  pid_ASC
  pid_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
}

type ChongduMenuPreviousValues {
  id: ID!
  ct: String
  d: Int
  icon: String
  mobile: String
  mobileIcon: String
  modelId: String
  mt: String
  name: String
  path: String
  pid: String
  sort: Int
  status: Int
}

type ChongduMenuSubscriptionPayload {
  mutation: MutationType!
  node: ChongduMenu
  updatedFields: [String!]
  previousValues: ChongduMenuPreviousValues
}

input ChongduMenuSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduMenuWhereInput
  AND: [ChongduMenuSubscriptionWhereInput!]
  OR: [ChongduMenuSubscriptionWhereInput!]
  NOT: [ChongduMenuSubscriptionWhereInput!]
}

input ChongduMenuUpdateInput {
  ct: String
  d: Int
  icon: String
  mobile: String
  mobileIcon: String
  modelId: String
  mt: String
  name: String
  path: String
  pid: String
  sort: Int
  status: Int
}

input ChongduMenuUpdateManyMutationInput {
  ct: String
  d: Int
  icon: String
  mobile: String
  mobileIcon: String
  modelId: String
  mt: String
  name: String
  path: String
  pid: String
  sort: Int
  status: Int
}

input ChongduMenuWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  mobile: String
  mobile_not: String
  mobile_in: [String!]
  mobile_not_in: [String!]
  mobile_lt: String
  mobile_lte: String
  mobile_gt: String
  mobile_gte: String
  mobile_contains: String
  mobile_not_contains: String
  mobile_starts_with: String
  mobile_not_starts_with: String
  mobile_ends_with: String
  mobile_not_ends_with: String
  mobileIcon: String
  mobileIcon_not: String
  mobileIcon_in: [String!]
  mobileIcon_not_in: [String!]
  mobileIcon_lt: String
  mobileIcon_lte: String
  mobileIcon_gt: String
  mobileIcon_gte: String
  mobileIcon_contains: String
  mobileIcon_not_contains: String
  mobileIcon_starts_with: String
  mobileIcon_not_starts_with: String
  mobileIcon_ends_with: String
  mobileIcon_not_ends_with: String
  modelId: String
  modelId_not: String
  modelId_in: [String!]
  modelId_not_in: [String!]
  modelId_lt: String
  modelId_lte: String
  modelId_gt: String
  modelId_gte: String
  modelId_contains: String
  modelId_not_contains: String
  modelId_starts_with: String
  modelId_not_starts_with: String
  modelId_ends_with: String
  modelId_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  path: String
  path_not: String
  path_in: [String!]
  path_not_in: [String!]
  path_lt: String
  path_lte: String
  path_gt: String
  path_gte: String
  path_contains: String
  path_not_contains: String
  path_starts_with: String
  path_not_starts_with: String
  path_ends_with: String
  path_not_ends_with: String
  pid: String
  pid_not: String
  pid_in: [String!]
  pid_not_in: [String!]
  pid_lt: String
  pid_lte: String
  pid_gt: String
  pid_gte: String
  pid_contains: String
  pid_not_contains: String
  pid_starts_with: String
  pid_not_starts_with: String
  pid_ends_with: String
  pid_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  AND: [ChongduMenuWhereInput!]
  OR: [ChongduMenuWhereInput!]
  NOT: [ChongduMenuWhereInput!]
}

input ChongduMenuWhereUniqueInput {
  id: ID
}

type ChongduMerchant {
  id: ID!
  address: String
  attention: Int
  beginTime: String
  city: String
  citycode: String
  endTime: String
  icon: String
  latitude: String
  longitude: String
  name: String
  tel: String
  userId: String
}

type ChongduMerchantConnection {
  pageInfo: PageInfo!
  edges: [ChongduMerchantEdge]!
  aggregate: AggregateChongduMerchant!
}

input ChongduMerchantCreateInput {
  id: ID
  address: String
  attention: Int
  beginTime: String
  city: String
  citycode: String
  endTime: String
  icon: String
  latitude: String
  longitude: String
  name: String
  tel: String
  userId: String
}

input ChongduMerchantCreateOneInput {
  create: ChongduMerchantCreateInput
  connect: ChongduMerchantWhereUniqueInput
}

type ChongduMerchantEdge {
  node: ChongduMerchant!
  cursor: String!
}

type ChongduMerchantImg {
  id: ID!
  addr: String
  ct: String
  d: Int
  imgType: Int
  merchantId: String
  mt: String
  status: Int
  type: Int
  userId: String
}

type ChongduMerchantImgConnection {
  pageInfo: PageInfo!
  edges: [ChongduMerchantImgEdge]!
  aggregate: AggregateChongduMerchantImg!
}

input ChongduMerchantImgCreateInput {
  id: ID
  addr: String
  ct: String
  d: Int
  imgType: Int
  merchantId: String
  mt: String
  status: Int
  type: Int
  userId: String
}

type ChongduMerchantImgEdge {
  node: ChongduMerchantImg!
  cursor: String!
}

enum ChongduMerchantImgOrderByInput {
  id_ASC
  id_DESC
  addr_ASC
  addr_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  imgType_ASC
  imgType_DESC
  merchantId_ASC
  merchantId_DESC
  mt_ASC
  mt_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduMerchantImgPreviousValues {
  id: ID!
  addr: String
  ct: String
  d: Int
  imgType: Int
  merchantId: String
  mt: String
  status: Int
  type: Int
  userId: String
}

type ChongduMerchantImgSubscriptionPayload {
  mutation: MutationType!
  node: ChongduMerchantImg
  updatedFields: [String!]
  previousValues: ChongduMerchantImgPreviousValues
}

input ChongduMerchantImgSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduMerchantImgWhereInput
  AND: [ChongduMerchantImgSubscriptionWhereInput!]
  OR: [ChongduMerchantImgSubscriptionWhereInput!]
  NOT: [ChongduMerchantImgSubscriptionWhereInput!]
}

input ChongduMerchantImgUpdateInput {
  addr: String
  ct: String
  d: Int
  imgType: Int
  merchantId: String
  mt: String
  status: Int
  type: Int
  userId: String
}

input ChongduMerchantImgUpdateManyMutationInput {
  addr: String
  ct: String
  d: Int
  imgType: Int
  merchantId: String
  mt: String
  status: Int
  type: Int
  userId: String
}

input ChongduMerchantImgWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  addr: String
  addr_not: String
  addr_in: [String!]
  addr_not_in: [String!]
  addr_lt: String
  addr_lte: String
  addr_gt: String
  addr_gte: String
  addr_contains: String
  addr_not_contains: String
  addr_starts_with: String
  addr_not_starts_with: String
  addr_ends_with: String
  addr_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  imgType: Int
  imgType_not: Int
  imgType_in: [Int!]
  imgType_not_in: [Int!]
  imgType_lt: Int
  imgType_lte: Int
  imgType_gt: Int
  imgType_gte: Int
  merchantId: String
  merchantId_not: String
  merchantId_in: [String!]
  merchantId_not_in: [String!]
  merchantId_lt: String
  merchantId_lte: String
  merchantId_gt: String
  merchantId_gte: String
  merchantId_contains: String
  merchantId_not_contains: String
  merchantId_starts_with: String
  merchantId_not_starts_with: String
  merchantId_ends_with: String
  merchantId_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduMerchantImgWhereInput!]
  OR: [ChongduMerchantImgWhereInput!]
  NOT: [ChongduMerchantImgWhereInput!]
}

input ChongduMerchantImgWhereUniqueInput {
  id: ID
}

enum ChongduMerchantOrderByInput {
  id_ASC
  id_DESC
  address_ASC
  address_DESC
  attention_ASC
  attention_DESC
  beginTime_ASC
  beginTime_DESC
  city_ASC
  city_DESC
  citycode_ASC
  citycode_DESC
  endTime_ASC
  endTime_DESC
  icon_ASC
  icon_DESC
  latitude_ASC
  latitude_DESC
  longitude_ASC
  longitude_DESC
  name_ASC
  name_DESC
  tel_ASC
  tel_DESC
  userId_ASC
  userId_DESC
}

type ChongduMerchantPreviousValues {
  id: ID!
  address: String
  attention: Int
  beginTime: String
  city: String
  citycode: String
  endTime: String
  icon: String
  latitude: String
  longitude: String
  name: String
  tel: String
  userId: String
}

type ChongduMerchantstatistic {
  id: Int!
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

type ChongduMerchantstatisticConnection {
  pageInfo: PageInfo!
  edges: [ChongduMerchantstatisticEdge]!
  aggregate: AggregateChongduMerchantstatistic!
}

input ChongduMerchantstatisticCreateInput {
  id: Int
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

type ChongduMerchantstatisticEdge {
  node: ChongduMerchantstatistic!
  cursor: String!
}

enum ChongduMerchantstatisticOrderByInput {
  id_ASC
  id_DESC
  count_ASC
  count_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  day_ASC
  day_DESC
  hour_ASC
  hour_DESC
  month_ASC
  month_DESC
  mt_ASC
  mt_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  year_ASC
  year_DESC
}

type ChongduMerchantstatisticPreviousValues {
  id: Int!
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

type ChongduMerchantstatisticSubscriptionPayload {
  mutation: MutationType!
  node: ChongduMerchantstatistic
  updatedFields: [String!]
  previousValues: ChongduMerchantstatisticPreviousValues
}

input ChongduMerchantstatisticSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduMerchantstatisticWhereInput
  AND: [ChongduMerchantstatisticSubscriptionWhereInput!]
  OR: [ChongduMerchantstatisticSubscriptionWhereInput!]
  NOT: [ChongduMerchantstatisticSubscriptionWhereInput!]
}

input ChongduMerchantstatisticUpdateInput {
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

input ChongduMerchantstatisticUpdateManyMutationInput {
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

input ChongduMerchantstatisticWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  count: Int
  count_not: Int
  count_in: [Int!]
  count_not_in: [Int!]
  count_lt: Int
  count_lte: Int
  count_gt: Int
  count_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  day: Int
  day_not: Int
  day_in: [Int!]
  day_not_in: [Int!]
  day_lt: Int
  day_lte: Int
  day_gt: Int
  day_gte: Int
  hour: Int
  hour_not: Int
  hour_in: [Int!]
  hour_not_in: [Int!]
  hour_lt: Int
  hour_lte: Int
  hour_gt: Int
  hour_gte: Int
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  AND: [ChongduMerchantstatisticWhereInput!]
  OR: [ChongduMerchantstatisticWhereInput!]
  NOT: [ChongduMerchantstatisticWhereInput!]
}

input ChongduMerchantstatisticWhereUniqueInput {
  id: Int
}

type ChongduMerchantSubscriptionPayload {
  mutation: MutationType!
  node: ChongduMerchant
  updatedFields: [String!]
  previousValues: ChongduMerchantPreviousValues
}

input ChongduMerchantSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduMerchantWhereInput
  AND: [ChongduMerchantSubscriptionWhereInput!]
  OR: [ChongduMerchantSubscriptionWhereInput!]
  NOT: [ChongduMerchantSubscriptionWhereInput!]
}

input ChongduMerchantUpdateDataInput {
  address: String
  attention: Int
  beginTime: String
  city: String
  citycode: String
  endTime: String
  icon: String
  latitude: String
  longitude: String
  name: String
  tel: String
  userId: String
}

input ChongduMerchantUpdateInput {
  address: String
  attention: Int
  beginTime: String
  city: String
  citycode: String
  endTime: String
  icon: String
  latitude: String
  longitude: String
  name: String
  tel: String
  userId: String
}

input ChongduMerchantUpdateManyMutationInput {
  address: String
  attention: Int
  beginTime: String
  city: String
  citycode: String
  endTime: String
  icon: String
  latitude: String
  longitude: String
  name: String
  tel: String
  userId: String
}

input ChongduMerchantUpdateOneInput {
  create: ChongduMerchantCreateInput
  update: ChongduMerchantUpdateDataInput
  upsert: ChongduMerchantUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduMerchantWhereUniqueInput
}

input ChongduMerchantUpsertNestedInput {
  update: ChongduMerchantUpdateDataInput!
  create: ChongduMerchantCreateInput!
}

input ChongduMerchantWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  address: String
  address_not: String
  address_in: [String!]
  address_not_in: [String!]
  address_lt: String
  address_lte: String
  address_gt: String
  address_gte: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  attention: Int
  attention_not: Int
  attention_in: [Int!]
  attention_not_in: [Int!]
  attention_lt: Int
  attention_lte: Int
  attention_gt: Int
  attention_gte: Int
  beginTime: String
  beginTime_not: String
  beginTime_in: [String!]
  beginTime_not_in: [String!]
  beginTime_lt: String
  beginTime_lte: String
  beginTime_gt: String
  beginTime_gte: String
  beginTime_contains: String
  beginTime_not_contains: String
  beginTime_starts_with: String
  beginTime_not_starts_with: String
  beginTime_ends_with: String
  beginTime_not_ends_with: String
  city: String
  city_not: String
  city_in: [String!]
  city_not_in: [String!]
  city_lt: String
  city_lte: String
  city_gt: String
  city_gte: String
  city_contains: String
  city_not_contains: String
  city_starts_with: String
  city_not_starts_with: String
  city_ends_with: String
  city_not_ends_with: String
  citycode: String
  citycode_not: String
  citycode_in: [String!]
  citycode_not_in: [String!]
  citycode_lt: String
  citycode_lte: String
  citycode_gt: String
  citycode_gte: String
  citycode_contains: String
  citycode_not_contains: String
  citycode_starts_with: String
  citycode_not_starts_with: String
  citycode_ends_with: String
  citycode_not_ends_with: String
  endTime: String
  endTime_not: String
  endTime_in: [String!]
  endTime_not_in: [String!]
  endTime_lt: String
  endTime_lte: String
  endTime_gt: String
  endTime_gte: String
  endTime_contains: String
  endTime_not_contains: String
  endTime_starts_with: String
  endTime_not_starts_with: String
  endTime_ends_with: String
  endTime_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  latitude: String
  latitude_not: String
  latitude_in: [String!]
  latitude_not_in: [String!]
  latitude_lt: String
  latitude_lte: String
  latitude_gt: String
  latitude_gte: String
  latitude_contains: String
  latitude_not_contains: String
  latitude_starts_with: String
  latitude_not_starts_with: String
  latitude_ends_with: String
  latitude_not_ends_with: String
  longitude: String
  longitude_not: String
  longitude_in: [String!]
  longitude_not_in: [String!]
  longitude_lt: String
  longitude_lte: String
  longitude_gt: String
  longitude_gte: String
  longitude_contains: String
  longitude_not_contains: String
  longitude_starts_with: String
  longitude_not_starts_with: String
  longitude_ends_with: String
  longitude_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  tel: String
  tel_not: String
  tel_in: [String!]
  tel_not_in: [String!]
  tel_lt: String
  tel_lte: String
  tel_gt: String
  tel_gte: String
  tel_contains: String
  tel_not_contains: String
  tel_starts_with: String
  tel_not_starts_with: String
  tel_ends_with: String
  tel_not_ends_with: String
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduMerchantWhereInput!]
  OR: [ChongduMerchantWhereInput!]
  NOT: [ChongduMerchantWhereInput!]
}

input ChongduMerchantWhereUniqueInput {
  id: ID
}

type ChongduMessage {
  id: Int!
  authentstate: String
  content: String
  ct: String
  cuserId: String
  d: Int
  img: String
  mt: String
  muserId: String
  publishtime: String
  sort: Int
  status: Int
  title: String
  type: Int
  userId: String
}

type ChongduMessageConnection {
  pageInfo: PageInfo!
  edges: [ChongduMessageEdge]!
  aggregate: AggregateChongduMessage!
}

input ChongduMessageCreateInput {
  id: Int
  authentstate: String
  content: String
  ct: String
  cuserId: String
  d: Int
  img: String
  mt: String
  muserId: String
  publishtime: String
  sort: Int
  status: Int
  title: String
  type: Int
  userId: String
}

type ChongduMessageEdge {
  node: ChongduMessage!
  cursor: String!
}

enum ChongduMessageOrderByInput {
  id_ASC
  id_DESC
  authentstate_ASC
  authentstate_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  img_ASC
  img_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  publishtime_ASC
  publishtime_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduMessagePreviousValues {
  id: Int!
  authentstate: String
  content: String
  ct: String
  cuserId: String
  d: Int
  img: String
  mt: String
  muserId: String
  publishtime: String
  sort: Int
  status: Int
  title: String
  type: Int
  userId: String
}

type ChongduMessageSubscriptionPayload {
  mutation: MutationType!
  node: ChongduMessage
  updatedFields: [String!]
  previousValues: ChongduMessagePreviousValues
}

input ChongduMessageSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduMessageWhereInput
  AND: [ChongduMessageSubscriptionWhereInput!]
  OR: [ChongduMessageSubscriptionWhereInput!]
  NOT: [ChongduMessageSubscriptionWhereInput!]
}

input ChongduMessageUpdateInput {
  authentstate: String
  content: String
  ct: String
  cuserId: String
  d: Int
  img: String
  mt: String
  muserId: String
  publishtime: String
  sort: Int
  status: Int
  title: String
  type: Int
  userId: String
}

input ChongduMessageUpdateManyMutationInput {
  authentstate: String
  content: String
  ct: String
  cuserId: String
  d: Int
  img: String
  mt: String
  muserId: String
  publishtime: String
  sort: Int
  status: Int
  title: String
  type: Int
  userId: String
}

input ChongduMessageWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  authentstate: String
  authentstate_not: String
  authentstate_in: [String!]
  authentstate_not_in: [String!]
  authentstate_lt: String
  authentstate_lte: String
  authentstate_gt: String
  authentstate_gte: String
  authentstate_contains: String
  authentstate_not_contains: String
  authentstate_starts_with: String
  authentstate_not_starts_with: String
  authentstate_ends_with: String
  authentstate_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  publishtime: String
  publishtime_not: String
  publishtime_in: [String!]
  publishtime_not_in: [String!]
  publishtime_lt: String
  publishtime_lte: String
  publishtime_gt: String
  publishtime_gte: String
  publishtime_contains: String
  publishtime_not_contains: String
  publishtime_starts_with: String
  publishtime_not_starts_with: String
  publishtime_ends_with: String
  publishtime_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduMessageWhereInput!]
  OR: [ChongduMessageWhereInput!]
  NOT: [ChongduMessageWhereInput!]
}

input ChongduMessageWhereUniqueInput {
  id: Int
}

type ChongduModel {
  id: ID!
  action: String
  ct: String
  d: Int
  mt: String
  name: String
  namespace: String
  path: String
  sort: Int
  status: Int
}

type ChongduModelConnection {
  pageInfo: PageInfo!
  edges: [ChongduModelEdge]!
  aggregate: AggregateChongduModel!
}

input ChongduModelCreateInput {
  id: ID
  action: String
  ct: String
  d: Int
  mt: String
  name: String
  namespace: String
  path: String
  sort: Int
  status: Int
}

type ChongduModeldetail {
  id: ID!
  action: String
  alert: String
  ask: Int
  auth: String
  buttomname: String
  button: String
  ct: String
  d: Int
  function: String
  heght: String
  method: String
  methodname: String
  modelId: String
  mt: String
  namespace: String
  param: String
  refresh: String
  sort: Int
  status: Int
  type: Int
  viewname: String
  width: String
}

type ChongduModeldetailConnection {
  pageInfo: PageInfo!
  edges: [ChongduModeldetailEdge]!
  aggregate: AggregateChongduModeldetail!
}

input ChongduModeldetailCreateInput {
  id: ID
  action: String
  alert: String
  ask: Int
  auth: String
  buttomname: String
  button: String
  ct: String
  d: Int
  function: String
  heght: String
  method: String
  methodname: String
  modelId: String
  mt: String
  namespace: String
  param: String
  refresh: String
  sort: Int
  status: Int
  type: Int
  viewname: String
  width: String
}

type ChongduModeldetailEdge {
  node: ChongduModeldetail!
  cursor: String!
}

enum ChongduModeldetailOrderByInput {
  id_ASC
  id_DESC
  action_ASC
  action_DESC
  alert_ASC
  alert_DESC
  ask_ASC
  ask_DESC
  auth_ASC
  auth_DESC
  buttomname_ASC
  buttomname_DESC
  button_ASC
  button_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  function_ASC
  function_DESC
  heght_ASC
  heght_DESC
  method_ASC
  method_DESC
  methodname_ASC
  methodname_DESC
  modelId_ASC
  modelId_DESC
  mt_ASC
  mt_DESC
  namespace_ASC
  namespace_DESC
  param_ASC
  param_DESC
  refresh_ASC
  refresh_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  viewname_ASC
  viewname_DESC
  width_ASC
  width_DESC
}

type ChongduModeldetailPreviousValues {
  id: ID!
  action: String
  alert: String
  ask: Int
  auth: String
  buttomname: String
  button: String
  ct: String
  d: Int
  function: String
  heght: String
  method: String
  methodname: String
  modelId: String
  mt: String
  namespace: String
  param: String
  refresh: String
  sort: Int
  status: Int
  type: Int
  viewname: String
  width: String
}

type ChongduModeldetailSubscriptionPayload {
  mutation: MutationType!
  node: ChongduModeldetail
  updatedFields: [String!]
  previousValues: ChongduModeldetailPreviousValues
}

input ChongduModeldetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduModeldetailWhereInput
  AND: [ChongduModeldetailSubscriptionWhereInput!]
  OR: [ChongduModeldetailSubscriptionWhereInput!]
  NOT: [ChongduModeldetailSubscriptionWhereInput!]
}

input ChongduModeldetailUpdateInput {
  action: String
  alert: String
  ask: Int
  auth: String
  buttomname: String
  button: String
  ct: String
  d: Int
  function: String
  heght: String
  method: String
  methodname: String
  modelId: String
  mt: String
  namespace: String
  param: String
  refresh: String
  sort: Int
  status: Int
  type: Int
  viewname: String
  width: String
}

input ChongduModeldetailUpdateManyMutationInput {
  action: String
  alert: String
  ask: Int
  auth: String
  buttomname: String
  button: String
  ct: String
  d: Int
  function: String
  heght: String
  method: String
  methodname: String
  modelId: String
  mt: String
  namespace: String
  param: String
  refresh: String
  sort: Int
  status: Int
  type: Int
  viewname: String
  width: String
}

input ChongduModeldetailWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  action: String
  action_not: String
  action_in: [String!]
  action_not_in: [String!]
  action_lt: String
  action_lte: String
  action_gt: String
  action_gte: String
  action_contains: String
  action_not_contains: String
  action_starts_with: String
  action_not_starts_with: String
  action_ends_with: String
  action_not_ends_with: String
  alert: String
  alert_not: String
  alert_in: [String!]
  alert_not_in: [String!]
  alert_lt: String
  alert_lte: String
  alert_gt: String
  alert_gte: String
  alert_contains: String
  alert_not_contains: String
  alert_starts_with: String
  alert_not_starts_with: String
  alert_ends_with: String
  alert_not_ends_with: String
  ask: Int
  ask_not: Int
  ask_in: [Int!]
  ask_not_in: [Int!]
  ask_lt: Int
  ask_lte: Int
  ask_gt: Int
  ask_gte: Int
  auth: String
  auth_not: String
  auth_in: [String!]
  auth_not_in: [String!]
  auth_lt: String
  auth_lte: String
  auth_gt: String
  auth_gte: String
  auth_contains: String
  auth_not_contains: String
  auth_starts_with: String
  auth_not_starts_with: String
  auth_ends_with: String
  auth_not_ends_with: String
  buttomname: String
  buttomname_not: String
  buttomname_in: [String!]
  buttomname_not_in: [String!]
  buttomname_lt: String
  buttomname_lte: String
  buttomname_gt: String
  buttomname_gte: String
  buttomname_contains: String
  buttomname_not_contains: String
  buttomname_starts_with: String
  buttomname_not_starts_with: String
  buttomname_ends_with: String
  buttomname_not_ends_with: String
  button: String
  button_not: String
  button_in: [String!]
  button_not_in: [String!]
  button_lt: String
  button_lte: String
  button_gt: String
  button_gte: String
  button_contains: String
  button_not_contains: String
  button_starts_with: String
  button_not_starts_with: String
  button_ends_with: String
  button_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  function: String
  function_not: String
  function_in: [String!]
  function_not_in: [String!]
  function_lt: String
  function_lte: String
  function_gt: String
  function_gte: String
  function_contains: String
  function_not_contains: String
  function_starts_with: String
  function_not_starts_with: String
  function_ends_with: String
  function_not_ends_with: String
  heght: String
  heght_not: String
  heght_in: [String!]
  heght_not_in: [String!]
  heght_lt: String
  heght_lte: String
  heght_gt: String
  heght_gte: String
  heght_contains: String
  heght_not_contains: String
  heght_starts_with: String
  heght_not_starts_with: String
  heght_ends_with: String
  heght_not_ends_with: String
  method: String
  method_not: String
  method_in: [String!]
  method_not_in: [String!]
  method_lt: String
  method_lte: String
  method_gt: String
  method_gte: String
  method_contains: String
  method_not_contains: String
  method_starts_with: String
  method_not_starts_with: String
  method_ends_with: String
  method_not_ends_with: String
  methodname: String
  methodname_not: String
  methodname_in: [String!]
  methodname_not_in: [String!]
  methodname_lt: String
  methodname_lte: String
  methodname_gt: String
  methodname_gte: String
  methodname_contains: String
  methodname_not_contains: String
  methodname_starts_with: String
  methodname_not_starts_with: String
  methodname_ends_with: String
  methodname_not_ends_with: String
  modelId: String
  modelId_not: String
  modelId_in: [String!]
  modelId_not_in: [String!]
  modelId_lt: String
  modelId_lte: String
  modelId_gt: String
  modelId_gte: String
  modelId_contains: String
  modelId_not_contains: String
  modelId_starts_with: String
  modelId_not_starts_with: String
  modelId_ends_with: String
  modelId_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  namespace: String
  namespace_not: String
  namespace_in: [String!]
  namespace_not_in: [String!]
  namespace_lt: String
  namespace_lte: String
  namespace_gt: String
  namespace_gte: String
  namespace_contains: String
  namespace_not_contains: String
  namespace_starts_with: String
  namespace_not_starts_with: String
  namespace_ends_with: String
  namespace_not_ends_with: String
  param: String
  param_not: String
  param_in: [String!]
  param_not_in: [String!]
  param_lt: String
  param_lte: String
  param_gt: String
  param_gte: String
  param_contains: String
  param_not_contains: String
  param_starts_with: String
  param_not_starts_with: String
  param_ends_with: String
  param_not_ends_with: String
  refresh: String
  refresh_not: String
  refresh_in: [String!]
  refresh_not_in: [String!]
  refresh_lt: String
  refresh_lte: String
  refresh_gt: String
  refresh_gte: String
  refresh_contains: String
  refresh_not_contains: String
  refresh_starts_with: String
  refresh_not_starts_with: String
  refresh_ends_with: String
  refresh_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  viewname: String
  viewname_not: String
  viewname_in: [String!]
  viewname_not_in: [String!]
  viewname_lt: String
  viewname_lte: String
  viewname_gt: String
  viewname_gte: String
  viewname_contains: String
  viewname_not_contains: String
  viewname_starts_with: String
  viewname_not_starts_with: String
  viewname_ends_with: String
  viewname_not_ends_with: String
  width: String
  width_not: String
  width_in: [String!]
  width_not_in: [String!]
  width_lt: String
  width_lte: String
  width_gt: String
  width_gte: String
  width_contains: String
  width_not_contains: String
  width_starts_with: String
  width_not_starts_with: String
  width_ends_with: String
  width_not_ends_with: String
  AND: [ChongduModeldetailWhereInput!]
  OR: [ChongduModeldetailWhereInput!]
  NOT: [ChongduModeldetailWhereInput!]
}

input ChongduModeldetailWhereUniqueInput {
  id: ID
}

type ChongduModelEdge {
  node: ChongduModel!
  cursor: String!
}

enum ChongduModelOrderByInput {
  id_ASC
  id_DESC
  action_ASC
  action_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  mt_ASC
  mt_DESC
  name_ASC
  name_DESC
  namespace_ASC
  namespace_DESC
  path_ASC
  path_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
}

type ChongduModelPreviousValues {
  id: ID!
  action: String
  ct: String
  d: Int
  mt: String
  name: String
  namespace: String
  path: String
  sort: Int
  status: Int
}

type ChongduModelSubscriptionPayload {
  mutation: MutationType!
  node: ChongduModel
  updatedFields: [String!]
  previousValues: ChongduModelPreviousValues
}

input ChongduModelSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduModelWhereInput
  AND: [ChongduModelSubscriptionWhereInput!]
  OR: [ChongduModelSubscriptionWhereInput!]
  NOT: [ChongduModelSubscriptionWhereInput!]
}

input ChongduModelUpdateInput {
  action: String
  ct: String
  d: Int
  mt: String
  name: String
  namespace: String
  path: String
  sort: Int
  status: Int
}

input ChongduModelUpdateManyMutationInput {
  action: String
  ct: String
  d: Int
  mt: String
  name: String
  namespace: String
  path: String
  sort: Int
  status: Int
}

input ChongduModelWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  action: String
  action_not: String
  action_in: [String!]
  action_not_in: [String!]
  action_lt: String
  action_lte: String
  action_gt: String
  action_gte: String
  action_contains: String
  action_not_contains: String
  action_starts_with: String
  action_not_starts_with: String
  action_ends_with: String
  action_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  namespace: String
  namespace_not: String
  namespace_in: [String!]
  namespace_not_in: [String!]
  namespace_lt: String
  namespace_lte: String
  namespace_gt: String
  namespace_gte: String
  namespace_contains: String
  namespace_not_contains: String
  namespace_starts_with: String
  namespace_not_starts_with: String
  namespace_ends_with: String
  namespace_not_ends_with: String
  path: String
  path_not: String
  path_in: [String!]
  path_not_in: [String!]
  path_lt: String
  path_lte: String
  path_gt: String
  path_gte: String
  path_contains: String
  path_not_contains: String
  path_starts_with: String
  path_not_starts_with: String
  path_ends_with: String
  path_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  AND: [ChongduModelWhereInput!]
  OR: [ChongduModelWhereInput!]
  NOT: [ChongduModelWhereInput!]
}

input ChongduModelWhereUniqueInput {
  id: ID
}

type ChongduOrder {
  id: Int!
  addressId: Int
  closeTime: String
  ct: String
  d: Int
  endTime: String
  mt: String
  orderNo: String
  payment: Float
  paymentTime: String
  paymentType: Int
  postage: Float
  sendTime: String
  status: Int
  userId: String
}

type ChongduOrderConnection {
  pageInfo: PageInfo!
  edges: [ChongduOrderEdge]!
  aggregate: AggregateChongduOrder!
}

input ChongduOrderCreateInput {
  id: Int
  addressId: Int
  closeTime: String
  ct: String
  d: Int
  endTime: String
  mt: String
  orderNo: String
  payment: Float
  paymentTime: String
  paymentType: Int
  postage: Float
  sendTime: String
  status: Int
  userId: String
}

type ChongduOrderEdge {
  node: ChongduOrder!
  cursor: String!
}

type ChongduOrderinvoice {
  id: Int!
  accountnum: String
  addressid: Int
  ct: String
  cuserid: String
  d: Int
  head: String
  invoicename: String
  money: Float
  mt: String
  muserid: String
  name: String
  nature: Int
  orderid: String
  phone: String
  sort: Int
  status: Int
  type: Int
  userid: String
  username: String
  usernum: String
}

type ChongduOrderinvoiceConnection {
  pageInfo: PageInfo!
  edges: [ChongduOrderinvoiceEdge]!
  aggregate: AggregateChongduOrderinvoice!
}

input ChongduOrderinvoiceCreateInput {
  id: Int
  accountnum: String
  addressid: Int
  ct: String
  cuserid: String
  d: Int
  head: String
  invoicename: String
  money: Float
  mt: String
  muserid: String
  name: String
  nature: Int
  orderid: String
  phone: String
  sort: Int
  status: Int
  type: Int
  userid: String
  username: String
  usernum: String
}

type ChongduOrderinvoicedetail {
  id: Int!
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  invoiceid: Int
  mt: String
  muserid: String
  sort: Int
  status: Int
  title: String
  type: Int
  userid: String
}

type ChongduOrderinvoicedetailConnection {
  pageInfo: PageInfo!
  edges: [ChongduOrderinvoicedetailEdge]!
  aggregate: AggregateChongduOrderinvoicedetail!
}

input ChongduOrderinvoicedetailCreateInput {
  id: Int
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  invoiceid: Int
  mt: String
  muserid: String
  sort: Int
  status: Int
  title: String
  type: Int
  userid: String
}

type ChongduOrderinvoicedetailEdge {
  node: ChongduOrderinvoicedetail!
  cursor: String!
}

enum ChongduOrderinvoicedetailOrderByInput {
  id_ASC
  id_DESC
  audittime_ASC
  audittime_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  cuserid_ASC
  cuserid_DESC
  d_ASC
  d_DESC
  invoiceid_ASC
  invoiceid_DESC
  mt_ASC
  mt_DESC
  muserid_ASC
  muserid_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
  type_ASC
  type_DESC
  userid_ASC
  userid_DESC
}

type ChongduOrderinvoicedetailPreviousValues {
  id: Int!
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  invoiceid: Int
  mt: String
  muserid: String
  sort: Int
  status: Int
  title: String
  type: Int
  userid: String
}

type ChongduOrderinvoicedetailSubscriptionPayload {
  mutation: MutationType!
  node: ChongduOrderinvoicedetail
  updatedFields: [String!]
  previousValues: ChongduOrderinvoicedetailPreviousValues
}

input ChongduOrderinvoicedetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduOrderinvoicedetailWhereInput
  AND: [ChongduOrderinvoicedetailSubscriptionWhereInput!]
  OR: [ChongduOrderinvoicedetailSubscriptionWhereInput!]
  NOT: [ChongduOrderinvoicedetailSubscriptionWhereInput!]
}

input ChongduOrderinvoicedetailUpdateInput {
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  invoiceid: Int
  mt: String
  muserid: String
  sort: Int
  status: Int
  title: String
  type: Int
  userid: String
}

input ChongduOrderinvoicedetailUpdateManyMutationInput {
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  invoiceid: Int
  mt: String
  muserid: String
  sort: Int
  status: Int
  title: String
  type: Int
  userid: String
}

input ChongduOrderinvoicedetailWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  audittime: String
  audittime_not: String
  audittime_in: [String!]
  audittime_not_in: [String!]
  audittime_lt: String
  audittime_lte: String
  audittime_gt: String
  audittime_gte: String
  audittime_contains: String
  audittime_not_contains: String
  audittime_starts_with: String
  audittime_not_starts_with: String
  audittime_ends_with: String
  audittime_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserid: String
  cuserid_not: String
  cuserid_in: [String!]
  cuserid_not_in: [String!]
  cuserid_lt: String
  cuserid_lte: String
  cuserid_gt: String
  cuserid_gte: String
  cuserid_contains: String
  cuserid_not_contains: String
  cuserid_starts_with: String
  cuserid_not_starts_with: String
  cuserid_ends_with: String
  cuserid_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  invoiceid: Int
  invoiceid_not: Int
  invoiceid_in: [Int!]
  invoiceid_not_in: [Int!]
  invoiceid_lt: Int
  invoiceid_lte: Int
  invoiceid_gt: Int
  invoiceid_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserid: String
  muserid_not: String
  muserid_in: [String!]
  muserid_not_in: [String!]
  muserid_lt: String
  muserid_lte: String
  muserid_gt: String
  muserid_gte: String
  muserid_contains: String
  muserid_not_contains: String
  muserid_starts_with: String
  muserid_not_starts_with: String
  muserid_ends_with: String
  muserid_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userid: String
  userid_not: String
  userid_in: [String!]
  userid_not_in: [String!]
  userid_lt: String
  userid_lte: String
  userid_gt: String
  userid_gte: String
  userid_contains: String
  userid_not_contains: String
  userid_starts_with: String
  userid_not_starts_with: String
  userid_ends_with: String
  userid_not_ends_with: String
  AND: [ChongduOrderinvoicedetailWhereInput!]
  OR: [ChongduOrderinvoicedetailWhereInput!]
  NOT: [ChongduOrderinvoicedetailWhereInput!]
}

input ChongduOrderinvoicedetailWhereUniqueInput {
  id: Int
}

type ChongduOrderinvoiceEdge {
  node: ChongduOrderinvoice!
  cursor: String!
}

enum ChongduOrderinvoiceOrderByInput {
  id_ASC
  id_DESC
  accountnum_ASC
  accountnum_DESC
  addressid_ASC
  addressid_DESC
  ct_ASC
  ct_DESC
  cuserid_ASC
  cuserid_DESC
  d_ASC
  d_DESC
  head_ASC
  head_DESC
  invoicename_ASC
  invoicename_DESC
  money_ASC
  money_DESC
  mt_ASC
  mt_DESC
  muserid_ASC
  muserid_DESC
  name_ASC
  name_DESC
  nature_ASC
  nature_DESC
  orderid_ASC
  orderid_DESC
  phone_ASC
  phone_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  userid_ASC
  userid_DESC
  username_ASC
  username_DESC
  usernum_ASC
  usernum_DESC
}

type ChongduOrderinvoicePreviousValues {
  id: Int!
  accountnum: String
  addressid: Int
  ct: String
  cuserid: String
  d: Int
  head: String
  invoicename: String
  money: Float
  mt: String
  muserid: String
  name: String
  nature: Int
  orderid: String
  phone: String
  sort: Int
  status: Int
  type: Int
  userid: String
  username: String
  usernum: String
}

type ChongduOrderinvoiceSubscriptionPayload {
  mutation: MutationType!
  node: ChongduOrderinvoice
  updatedFields: [String!]
  previousValues: ChongduOrderinvoicePreviousValues
}

input ChongduOrderinvoiceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduOrderinvoiceWhereInput
  AND: [ChongduOrderinvoiceSubscriptionWhereInput!]
  OR: [ChongduOrderinvoiceSubscriptionWhereInput!]
  NOT: [ChongduOrderinvoiceSubscriptionWhereInput!]
}

input ChongduOrderinvoiceUpdateInput {
  accountnum: String
  addressid: Int
  ct: String
  cuserid: String
  d: Int
  head: String
  invoicename: String
  money: Float
  mt: String
  muserid: String
  name: String
  nature: Int
  orderid: String
  phone: String
  sort: Int
  status: Int
  type: Int
  userid: String
  username: String
  usernum: String
}

input ChongduOrderinvoiceUpdateManyMutationInput {
  accountnum: String
  addressid: Int
  ct: String
  cuserid: String
  d: Int
  head: String
  invoicename: String
  money: Float
  mt: String
  muserid: String
  name: String
  nature: Int
  orderid: String
  phone: String
  sort: Int
  status: Int
  type: Int
  userid: String
  username: String
  usernum: String
}

input ChongduOrderinvoiceWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  accountnum: String
  accountnum_not: String
  accountnum_in: [String!]
  accountnum_not_in: [String!]
  accountnum_lt: String
  accountnum_lte: String
  accountnum_gt: String
  accountnum_gte: String
  accountnum_contains: String
  accountnum_not_contains: String
  accountnum_starts_with: String
  accountnum_not_starts_with: String
  accountnum_ends_with: String
  accountnum_not_ends_with: String
  addressid: Int
  addressid_not: Int
  addressid_in: [Int!]
  addressid_not_in: [Int!]
  addressid_lt: Int
  addressid_lte: Int
  addressid_gt: Int
  addressid_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserid: String
  cuserid_not: String
  cuserid_in: [String!]
  cuserid_not_in: [String!]
  cuserid_lt: String
  cuserid_lte: String
  cuserid_gt: String
  cuserid_gte: String
  cuserid_contains: String
  cuserid_not_contains: String
  cuserid_starts_with: String
  cuserid_not_starts_with: String
  cuserid_ends_with: String
  cuserid_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  head: String
  head_not: String
  head_in: [String!]
  head_not_in: [String!]
  head_lt: String
  head_lte: String
  head_gt: String
  head_gte: String
  head_contains: String
  head_not_contains: String
  head_starts_with: String
  head_not_starts_with: String
  head_ends_with: String
  head_not_ends_with: String
  invoicename: String
  invoicename_not: String
  invoicename_in: [String!]
  invoicename_not_in: [String!]
  invoicename_lt: String
  invoicename_lte: String
  invoicename_gt: String
  invoicename_gte: String
  invoicename_contains: String
  invoicename_not_contains: String
  invoicename_starts_with: String
  invoicename_not_starts_with: String
  invoicename_ends_with: String
  invoicename_not_ends_with: String
  money: Float
  money_not: Float
  money_in: [Float!]
  money_not_in: [Float!]
  money_lt: Float
  money_lte: Float
  money_gt: Float
  money_gte: Float
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserid: String
  muserid_not: String
  muserid_in: [String!]
  muserid_not_in: [String!]
  muserid_lt: String
  muserid_lte: String
  muserid_gt: String
  muserid_gte: String
  muserid_contains: String
  muserid_not_contains: String
  muserid_starts_with: String
  muserid_not_starts_with: String
  muserid_ends_with: String
  muserid_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  nature: Int
  nature_not: Int
  nature_in: [Int!]
  nature_not_in: [Int!]
  nature_lt: Int
  nature_lte: Int
  nature_gt: Int
  nature_gte: Int
  orderid: String
  orderid_not: String
  orderid_in: [String!]
  orderid_not_in: [String!]
  orderid_lt: String
  orderid_lte: String
  orderid_gt: String
  orderid_gte: String
  orderid_contains: String
  orderid_not_contains: String
  orderid_starts_with: String
  orderid_not_starts_with: String
  orderid_ends_with: String
  orderid_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userid: String
  userid_not: String
  userid_in: [String!]
  userid_not_in: [String!]
  userid_lt: String
  userid_lte: String
  userid_gt: String
  userid_gte: String
  userid_contains: String
  userid_not_contains: String
  userid_starts_with: String
  userid_not_starts_with: String
  userid_ends_with: String
  userid_not_ends_with: String
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  usernum: String
  usernum_not: String
  usernum_in: [String!]
  usernum_not_in: [String!]
  usernum_lt: String
  usernum_lte: String
  usernum_gt: String
  usernum_gte: String
  usernum_contains: String
  usernum_not_contains: String
  usernum_starts_with: String
  usernum_not_starts_with: String
  usernum_ends_with: String
  usernum_not_ends_with: String
  AND: [ChongduOrderinvoiceWhereInput!]
  OR: [ChongduOrderinvoiceWhereInput!]
  NOT: [ChongduOrderinvoiceWhereInput!]
}

input ChongduOrderinvoiceWhereUniqueInput {
  id: Int
}

type ChongduOrderItem {
  id: Int!
  closeTime: String
  ct: String
  currentPrice: Float
  d: Int
  endTime: String
  image: String
  merchantId: String
  merOrderNo: String
  mt: String
  orderNo: String
  paymentTime: String
  paymentType: Int
  postage: Float
  productId: String
  productName: String
  quantity: Int
  remark: String
  reStatus: Int
  sendTime: String
  status: Int
  totalPrice: Float
  userId: String
}

type ChongduOrderItemConnection {
  pageInfo: PageInfo!
  edges: [ChongduOrderItemEdge]!
  aggregate: AggregateChongduOrderItem!
}

input ChongduOrderItemCreateInput {
  id: Int
  closeTime: String
  ct: String
  currentPrice: Float
  d: Int
  endTime: String
  image: String
  merchantId: String
  merOrderNo: String
  mt: String
  orderNo: String
  paymentTime: String
  paymentType: Int
  postage: Float
  productId: String
  productName: String
  quantity: Int
  remark: String
  reStatus: Int
  sendTime: String
  status: Int
  totalPrice: Float
  userId: String
}

type ChongduOrderItemEdge {
  node: ChongduOrderItem!
  cursor: String!
}

enum ChongduOrderItemOrderByInput {
  id_ASC
  id_DESC
  closeTime_ASC
  closeTime_DESC
  ct_ASC
  ct_DESC
  currentPrice_ASC
  currentPrice_DESC
  d_ASC
  d_DESC
  endTime_ASC
  endTime_DESC
  image_ASC
  image_DESC
  merchantId_ASC
  merchantId_DESC
  merOrderNo_ASC
  merOrderNo_DESC
  mt_ASC
  mt_DESC
  orderNo_ASC
  orderNo_DESC
  paymentTime_ASC
  paymentTime_DESC
  paymentType_ASC
  paymentType_DESC
  postage_ASC
  postage_DESC
  productId_ASC
  productId_DESC
  productName_ASC
  productName_DESC
  quantity_ASC
  quantity_DESC
  remark_ASC
  remark_DESC
  reStatus_ASC
  reStatus_DESC
  sendTime_ASC
  sendTime_DESC
  status_ASC
  status_DESC
  totalPrice_ASC
  totalPrice_DESC
  userId_ASC
  userId_DESC
}

type ChongduOrderItemPreviousValues {
  id: Int!
  closeTime: String
  ct: String
  currentPrice: Float
  d: Int
  endTime: String
  image: String
  merchantId: String
  merOrderNo: String
  mt: String
  orderNo: String
  paymentTime: String
  paymentType: Int
  postage: Float
  productId: String
  productName: String
  quantity: Int
  remark: String
  reStatus: Int
  sendTime: String
  status: Int
  totalPrice: Float
  userId: String
}

type ChongduOrderItemSubscriptionPayload {
  mutation: MutationType!
  node: ChongduOrderItem
  updatedFields: [String!]
  previousValues: ChongduOrderItemPreviousValues
}

input ChongduOrderItemSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduOrderItemWhereInput
  AND: [ChongduOrderItemSubscriptionWhereInput!]
  OR: [ChongduOrderItemSubscriptionWhereInput!]
  NOT: [ChongduOrderItemSubscriptionWhereInput!]
}

input ChongduOrderItemUpdateInput {
  closeTime: String
  ct: String
  currentPrice: Float
  d: Int
  endTime: String
  image: String
  merchantId: String
  merOrderNo: String
  mt: String
  orderNo: String
  paymentTime: String
  paymentType: Int
  postage: Float
  productId: String
  productName: String
  quantity: Int
  remark: String
  reStatus: Int
  sendTime: String
  status: Int
  totalPrice: Float
  userId: String
}

input ChongduOrderItemUpdateManyMutationInput {
  closeTime: String
  ct: String
  currentPrice: Float
  d: Int
  endTime: String
  image: String
  merchantId: String
  merOrderNo: String
  mt: String
  orderNo: String
  paymentTime: String
  paymentType: Int
  postage: Float
  productId: String
  productName: String
  quantity: Int
  remark: String
  reStatus: Int
  sendTime: String
  status: Int
  totalPrice: Float
  userId: String
}

input ChongduOrderItemWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  closeTime: String
  closeTime_not: String
  closeTime_in: [String!]
  closeTime_not_in: [String!]
  closeTime_lt: String
  closeTime_lte: String
  closeTime_gt: String
  closeTime_gte: String
  closeTime_contains: String
  closeTime_not_contains: String
  closeTime_starts_with: String
  closeTime_not_starts_with: String
  closeTime_ends_with: String
  closeTime_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  currentPrice: Float
  currentPrice_not: Float
  currentPrice_in: [Float!]
  currentPrice_not_in: [Float!]
  currentPrice_lt: Float
  currentPrice_lte: Float
  currentPrice_gt: Float
  currentPrice_gte: Float
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  endTime: String
  endTime_not: String
  endTime_in: [String!]
  endTime_not_in: [String!]
  endTime_lt: String
  endTime_lte: String
  endTime_gt: String
  endTime_gte: String
  endTime_contains: String
  endTime_not_contains: String
  endTime_starts_with: String
  endTime_not_starts_with: String
  endTime_ends_with: String
  endTime_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  merchantId: String
  merchantId_not: String
  merchantId_in: [String!]
  merchantId_not_in: [String!]
  merchantId_lt: String
  merchantId_lte: String
  merchantId_gt: String
  merchantId_gte: String
  merchantId_contains: String
  merchantId_not_contains: String
  merchantId_starts_with: String
  merchantId_not_starts_with: String
  merchantId_ends_with: String
  merchantId_not_ends_with: String
  merOrderNo: String
  merOrderNo_not: String
  merOrderNo_in: [String!]
  merOrderNo_not_in: [String!]
  merOrderNo_lt: String
  merOrderNo_lte: String
  merOrderNo_gt: String
  merOrderNo_gte: String
  merOrderNo_contains: String
  merOrderNo_not_contains: String
  merOrderNo_starts_with: String
  merOrderNo_not_starts_with: String
  merOrderNo_ends_with: String
  merOrderNo_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  orderNo: String
  orderNo_not: String
  orderNo_in: [String!]
  orderNo_not_in: [String!]
  orderNo_lt: String
  orderNo_lte: String
  orderNo_gt: String
  orderNo_gte: String
  orderNo_contains: String
  orderNo_not_contains: String
  orderNo_starts_with: String
  orderNo_not_starts_with: String
  orderNo_ends_with: String
  orderNo_not_ends_with: String
  paymentTime: String
  paymentTime_not: String
  paymentTime_in: [String!]
  paymentTime_not_in: [String!]
  paymentTime_lt: String
  paymentTime_lte: String
  paymentTime_gt: String
  paymentTime_gte: String
  paymentTime_contains: String
  paymentTime_not_contains: String
  paymentTime_starts_with: String
  paymentTime_not_starts_with: String
  paymentTime_ends_with: String
  paymentTime_not_ends_with: String
  paymentType: Int
  paymentType_not: Int
  paymentType_in: [Int!]
  paymentType_not_in: [Int!]
  paymentType_lt: Int
  paymentType_lte: Int
  paymentType_gt: Int
  paymentType_gte: Int
  postage: Float
  postage_not: Float
  postage_in: [Float!]
  postage_not_in: [Float!]
  postage_lt: Float
  postage_lte: Float
  postage_gt: Float
  postage_gte: Float
  productId: String
  productId_not: String
  productId_in: [String!]
  productId_not_in: [String!]
  productId_lt: String
  productId_lte: String
  productId_gt: String
  productId_gte: String
  productId_contains: String
  productId_not_contains: String
  productId_starts_with: String
  productId_not_starts_with: String
  productId_ends_with: String
  productId_not_ends_with: String
  productName: String
  productName_not: String
  productName_in: [String!]
  productName_not_in: [String!]
  productName_lt: String
  productName_lte: String
  productName_gt: String
  productName_gte: String
  productName_contains: String
  productName_not_contains: String
  productName_starts_with: String
  productName_not_starts_with: String
  productName_ends_with: String
  productName_not_ends_with: String
  quantity: Int
  quantity_not: Int
  quantity_in: [Int!]
  quantity_not_in: [Int!]
  quantity_lt: Int
  quantity_lte: Int
  quantity_gt: Int
  quantity_gte: Int
  remark: String
  remark_not: String
  remark_in: [String!]
  remark_not_in: [String!]
  remark_lt: String
  remark_lte: String
  remark_gt: String
  remark_gte: String
  remark_contains: String
  remark_not_contains: String
  remark_starts_with: String
  remark_not_starts_with: String
  remark_ends_with: String
  remark_not_ends_with: String
  reStatus: Int
  reStatus_not: Int
  reStatus_in: [Int!]
  reStatus_not_in: [Int!]
  reStatus_lt: Int
  reStatus_lte: Int
  reStatus_gt: Int
  reStatus_gte: Int
  sendTime: String
  sendTime_not: String
  sendTime_in: [String!]
  sendTime_not_in: [String!]
  sendTime_lt: String
  sendTime_lte: String
  sendTime_gt: String
  sendTime_gte: String
  sendTime_contains: String
  sendTime_not_contains: String
  sendTime_starts_with: String
  sendTime_not_starts_with: String
  sendTime_ends_with: String
  sendTime_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  totalPrice: Float
  totalPrice_not: Float
  totalPrice_in: [Float!]
  totalPrice_not_in: [Float!]
  totalPrice_lt: Float
  totalPrice_lte: Float
  totalPrice_gt: Float
  totalPrice_gte: Float
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduOrderItemWhereInput!]
  OR: [ChongduOrderItemWhereInput!]
  NOT: [ChongduOrderItemWhereInput!]
}

input ChongduOrderItemWhereUniqueInput {
  id: Int
}

enum ChongduOrderOrderByInput {
  id_ASC
  id_DESC
  addressId_ASC
  addressId_DESC
  closeTime_ASC
  closeTime_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  endTime_ASC
  endTime_DESC
  mt_ASC
  mt_DESC
  orderNo_ASC
  orderNo_DESC
  payment_ASC
  payment_DESC
  paymentTime_ASC
  paymentTime_DESC
  paymentType_ASC
  paymentType_DESC
  postage_ASC
  postage_DESC
  sendTime_ASC
  sendTime_DESC
  status_ASC
  status_DESC
  userId_ASC
  userId_DESC
}

type ChongduOrderPreviousValues {
  id: Int!
  addressId: Int
  closeTime: String
  ct: String
  d: Int
  endTime: String
  mt: String
  orderNo: String
  payment: Float
  paymentTime: String
  paymentType: Int
  postage: Float
  sendTime: String
  status: Int
  userId: String
}

type ChongduOrderserial {
  id: Int!
  context: String
  ct: String
  d: Int
  money: Float
  mt: String
  orderid: Int
  ordersn: String
  platformtype: Int
  sort: Int
  status: Int
  type: Int
  userid: String
}

type ChongduOrderserialConnection {
  pageInfo: PageInfo!
  edges: [ChongduOrderserialEdge]!
  aggregate: AggregateChongduOrderserial!
}

input ChongduOrderserialCreateInput {
  id: Int
  context: String
  ct: String
  d: Int
  money: Float
  mt: String
  orderid: Int
  ordersn: String
  platformtype: Int
  sort: Int
  status: Int
  type: Int
  userid: String
}

type ChongduOrderserialEdge {
  node: ChongduOrderserial!
  cursor: String!
}

enum ChongduOrderserialOrderByInput {
  id_ASC
  id_DESC
  context_ASC
  context_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  money_ASC
  money_DESC
  mt_ASC
  mt_DESC
  orderid_ASC
  orderid_DESC
  ordersn_ASC
  ordersn_DESC
  platformtype_ASC
  platformtype_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  userid_ASC
  userid_DESC
}

type ChongduOrderserialPreviousValues {
  id: Int!
  context: String
  ct: String
  d: Int
  money: Float
  mt: String
  orderid: Int
  ordersn: String
  platformtype: Int
  sort: Int
  status: Int
  type: Int
  userid: String
}

type ChongduOrderserialSubscriptionPayload {
  mutation: MutationType!
  node: ChongduOrderserial
  updatedFields: [String!]
  previousValues: ChongduOrderserialPreviousValues
}

input ChongduOrderserialSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduOrderserialWhereInput
  AND: [ChongduOrderserialSubscriptionWhereInput!]
  OR: [ChongduOrderserialSubscriptionWhereInput!]
  NOT: [ChongduOrderserialSubscriptionWhereInput!]
}

input ChongduOrderserialUpdateInput {
  context: String
  ct: String
  d: Int
  money: Float
  mt: String
  orderid: Int
  ordersn: String
  platformtype: Int
  sort: Int
  status: Int
  type: Int
  userid: String
}

input ChongduOrderserialUpdateManyMutationInput {
  context: String
  ct: String
  d: Int
  money: Float
  mt: String
  orderid: Int
  ordersn: String
  platformtype: Int
  sort: Int
  status: Int
  type: Int
  userid: String
}

input ChongduOrderserialWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  context: String
  context_not: String
  context_in: [String!]
  context_not_in: [String!]
  context_lt: String
  context_lte: String
  context_gt: String
  context_gte: String
  context_contains: String
  context_not_contains: String
  context_starts_with: String
  context_not_starts_with: String
  context_ends_with: String
  context_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  money: Float
  money_not: Float
  money_in: [Float!]
  money_not_in: [Float!]
  money_lt: Float
  money_lte: Float
  money_gt: Float
  money_gte: Float
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  orderid: Int
  orderid_not: Int
  orderid_in: [Int!]
  orderid_not_in: [Int!]
  orderid_lt: Int
  orderid_lte: Int
  orderid_gt: Int
  orderid_gte: Int
  ordersn: String
  ordersn_not: String
  ordersn_in: [String!]
  ordersn_not_in: [String!]
  ordersn_lt: String
  ordersn_lte: String
  ordersn_gt: String
  ordersn_gte: String
  ordersn_contains: String
  ordersn_not_contains: String
  ordersn_starts_with: String
  ordersn_not_starts_with: String
  ordersn_ends_with: String
  ordersn_not_ends_with: String
  platformtype: Int
  platformtype_not: Int
  platformtype_in: [Int!]
  platformtype_not_in: [Int!]
  platformtype_lt: Int
  platformtype_lte: Int
  platformtype_gt: Int
  platformtype_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userid: String
  userid_not: String
  userid_in: [String!]
  userid_not_in: [String!]
  userid_lt: String
  userid_lte: String
  userid_gt: String
  userid_gte: String
  userid_contains: String
  userid_not_contains: String
  userid_starts_with: String
  userid_not_starts_with: String
  userid_ends_with: String
  userid_not_ends_with: String
  AND: [ChongduOrderserialWhereInput!]
  OR: [ChongduOrderserialWhereInput!]
  NOT: [ChongduOrderserialWhereInput!]
}

input ChongduOrderserialWhereUniqueInput {
  id: Int
}

type ChongduOrderstatistic {
  id: Int!
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

type ChongduOrderstatisticConnection {
  pageInfo: PageInfo!
  edges: [ChongduOrderstatisticEdge]!
  aggregate: AggregateChongduOrderstatistic!
}

input ChongduOrderstatisticCreateInput {
  id: Int
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

type ChongduOrderstatisticEdge {
  node: ChongduOrderstatistic!
  cursor: String!
}

enum ChongduOrderstatisticOrderByInput {
  id_ASC
  id_DESC
  count_ASC
  count_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  day_ASC
  day_DESC
  hour_ASC
  hour_DESC
  month_ASC
  month_DESC
  mt_ASC
  mt_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  year_ASC
  year_DESC
}

type ChongduOrderstatisticPreviousValues {
  id: Int!
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

type ChongduOrderstatisticSubscriptionPayload {
  mutation: MutationType!
  node: ChongduOrderstatistic
  updatedFields: [String!]
  previousValues: ChongduOrderstatisticPreviousValues
}

input ChongduOrderstatisticSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduOrderstatisticWhereInput
  AND: [ChongduOrderstatisticSubscriptionWhereInput!]
  OR: [ChongduOrderstatisticSubscriptionWhereInput!]
  NOT: [ChongduOrderstatisticSubscriptionWhereInput!]
}

input ChongduOrderstatisticUpdateInput {
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

input ChongduOrderstatisticUpdateManyMutationInput {
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

input ChongduOrderstatisticWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  count: Int
  count_not: Int
  count_in: [Int!]
  count_not_in: [Int!]
  count_lt: Int
  count_lte: Int
  count_gt: Int
  count_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  day: Int
  day_not: Int
  day_in: [Int!]
  day_not_in: [Int!]
  day_lt: Int
  day_lte: Int
  day_gt: Int
  day_gte: Int
  hour: Int
  hour_not: Int
  hour_in: [Int!]
  hour_not_in: [Int!]
  hour_lt: Int
  hour_lte: Int
  hour_gt: Int
  hour_gte: Int
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  AND: [ChongduOrderstatisticWhereInput!]
  OR: [ChongduOrderstatisticWhereInput!]
  NOT: [ChongduOrderstatisticWhereInput!]
}

input ChongduOrderstatisticWhereUniqueInput {
  id: Int
}

type ChongduOrderSubscriptionPayload {
  mutation: MutationType!
  node: ChongduOrder
  updatedFields: [String!]
  previousValues: ChongduOrderPreviousValues
}

input ChongduOrderSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduOrderWhereInput
  AND: [ChongduOrderSubscriptionWhereInput!]
  OR: [ChongduOrderSubscriptionWhereInput!]
  NOT: [ChongduOrderSubscriptionWhereInput!]
}

input ChongduOrderUpdateInput {
  addressId: Int
  closeTime: String
  ct: String
  d: Int
  endTime: String
  mt: String
  orderNo: String
  payment: Float
  paymentTime: String
  paymentType: Int
  postage: Float
  sendTime: String
  status: Int
  userId: String
}

input ChongduOrderUpdateManyMutationInput {
  addressId: Int
  closeTime: String
  ct: String
  d: Int
  endTime: String
  mt: String
  orderNo: String
  payment: Float
  paymentTime: String
  paymentType: Int
  postage: Float
  sendTime: String
  status: Int
  userId: String
}

input ChongduOrderWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  addressId: Int
  addressId_not: Int
  addressId_in: [Int!]
  addressId_not_in: [Int!]
  addressId_lt: Int
  addressId_lte: Int
  addressId_gt: Int
  addressId_gte: Int
  closeTime: String
  closeTime_not: String
  closeTime_in: [String!]
  closeTime_not_in: [String!]
  closeTime_lt: String
  closeTime_lte: String
  closeTime_gt: String
  closeTime_gte: String
  closeTime_contains: String
  closeTime_not_contains: String
  closeTime_starts_with: String
  closeTime_not_starts_with: String
  closeTime_ends_with: String
  closeTime_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  endTime: String
  endTime_not: String
  endTime_in: [String!]
  endTime_not_in: [String!]
  endTime_lt: String
  endTime_lte: String
  endTime_gt: String
  endTime_gte: String
  endTime_contains: String
  endTime_not_contains: String
  endTime_starts_with: String
  endTime_not_starts_with: String
  endTime_ends_with: String
  endTime_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  orderNo: String
  orderNo_not: String
  orderNo_in: [String!]
  orderNo_not_in: [String!]
  orderNo_lt: String
  orderNo_lte: String
  orderNo_gt: String
  orderNo_gte: String
  orderNo_contains: String
  orderNo_not_contains: String
  orderNo_starts_with: String
  orderNo_not_starts_with: String
  orderNo_ends_with: String
  orderNo_not_ends_with: String
  payment: Float
  payment_not: Float
  payment_in: [Float!]
  payment_not_in: [Float!]
  payment_lt: Float
  payment_lte: Float
  payment_gt: Float
  payment_gte: Float
  paymentTime: String
  paymentTime_not: String
  paymentTime_in: [String!]
  paymentTime_not_in: [String!]
  paymentTime_lt: String
  paymentTime_lte: String
  paymentTime_gt: String
  paymentTime_gte: String
  paymentTime_contains: String
  paymentTime_not_contains: String
  paymentTime_starts_with: String
  paymentTime_not_starts_with: String
  paymentTime_ends_with: String
  paymentTime_not_ends_with: String
  paymentType: Int
  paymentType_not: Int
  paymentType_in: [Int!]
  paymentType_not_in: [Int!]
  paymentType_lt: Int
  paymentType_lte: Int
  paymentType_gt: Int
  paymentType_gte: Int
  postage: Float
  postage_not: Float
  postage_in: [Float!]
  postage_not_in: [Float!]
  postage_lt: Float
  postage_lte: Float
  postage_gt: Float
  postage_gte: Float
  sendTime: String
  sendTime_not: String
  sendTime_in: [String!]
  sendTime_not_in: [String!]
  sendTime_lt: String
  sendTime_lte: String
  sendTime_gt: String
  sendTime_gte: String
  sendTime_contains: String
  sendTime_not_contains: String
  sendTime_starts_with: String
  sendTime_not_starts_with: String
  sendTime_ends_with: String
  sendTime_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduOrderWhereInput!]
  OR: [ChongduOrderWhereInput!]
  NOT: [ChongduOrderWhereInput!]
}

input ChongduOrderWhereUniqueInput {
  id: Int
}

type ChongduPayInfo {
  id: Int!
  ct: String
  mt: String
  orderNo: String
  payNo: String
  payPlatform: String
  status: Int
  userId: String
}

type ChongduPayInfoConnection {
  pageInfo: PageInfo!
  edges: [ChongduPayInfoEdge]!
  aggregate: AggregateChongduPayInfo!
}

input ChongduPayInfoCreateInput {
  id: Int
  ct: String
  mt: String
  orderNo: String
  payNo: String
  payPlatform: String
  status: Int
  userId: String
}

type ChongduPayInfoEdge {
  node: ChongduPayInfo!
  cursor: String!
}

enum ChongduPayInfoOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  mt_ASC
  mt_DESC
  orderNo_ASC
  orderNo_DESC
  payNo_ASC
  payNo_DESC
  payPlatform_ASC
  payPlatform_DESC
  status_ASC
  status_DESC
  userId_ASC
  userId_DESC
}

type ChongduPayInfoPreviousValues {
  id: Int!
  ct: String
  mt: String
  orderNo: String
  payNo: String
  payPlatform: String
  status: Int
  userId: String
}

type ChongduPayInfoSubscriptionPayload {
  mutation: MutationType!
  node: ChongduPayInfo
  updatedFields: [String!]
  previousValues: ChongduPayInfoPreviousValues
}

input ChongduPayInfoSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduPayInfoWhereInput
  AND: [ChongduPayInfoSubscriptionWhereInput!]
  OR: [ChongduPayInfoSubscriptionWhereInput!]
  NOT: [ChongduPayInfoSubscriptionWhereInput!]
}

input ChongduPayInfoUpdateInput {
  ct: String
  mt: String
  orderNo: String
  payNo: String
  payPlatform: String
  status: Int
  userId: String
}

input ChongduPayInfoUpdateManyMutationInput {
  ct: String
  mt: String
  orderNo: String
  payNo: String
  payPlatform: String
  status: Int
  userId: String
}

input ChongduPayInfoWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  orderNo: String
  orderNo_not: String
  orderNo_in: [String!]
  orderNo_not_in: [String!]
  orderNo_lt: String
  orderNo_lte: String
  orderNo_gt: String
  orderNo_gte: String
  orderNo_contains: String
  orderNo_not_contains: String
  orderNo_starts_with: String
  orderNo_not_starts_with: String
  orderNo_ends_with: String
  orderNo_not_ends_with: String
  payNo: String
  payNo_not: String
  payNo_in: [String!]
  payNo_not_in: [String!]
  payNo_lt: String
  payNo_lte: String
  payNo_gt: String
  payNo_gte: String
  payNo_contains: String
  payNo_not_contains: String
  payNo_starts_with: String
  payNo_not_starts_with: String
  payNo_ends_with: String
  payNo_not_ends_with: String
  payPlatform: String
  payPlatform_not: String
  payPlatform_in: [String!]
  payPlatform_not_in: [String!]
  payPlatform_lt: String
  payPlatform_lte: String
  payPlatform_gt: String
  payPlatform_gte: String
  payPlatform_contains: String
  payPlatform_not_contains: String
  payPlatform_starts_with: String
  payPlatform_not_starts_with: String
  payPlatform_ends_with: String
  payPlatform_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduPayInfoWhereInput!]
  OR: [ChongduPayInfoWhereInput!]
  NOT: [ChongduPayInfoWhereInput!]
}

input ChongduPayInfoWhereUniqueInput {
  id: Int
}

type ChongduPermission {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  name: String
  parentId: String
  parentIds: String
  permission: String
  status: Int
  type: Int
  url: String
}

type ChongduPermissionConnection {
  pageInfo: PageInfo!
  edges: [ChongduPermissionEdge]!
  aggregate: AggregateChongduPermission!
}

input ChongduPermissionCreateInput {
  id: Int
  ct: String
  cuserId: String
  d: Int
  name: String
  parentId: String
  parentIds: String
  permission: String
  status: Int
  type: Int
  url: String
}

type ChongduPermissionEdge {
  node: ChongduPermission!
  cursor: String!
}

enum ChongduPermissionOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  name_ASC
  name_DESC
  parentId_ASC
  parentId_DESC
  parentIds_ASC
  parentIds_DESC
  permission_ASC
  permission_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  url_ASC
  url_DESC
}

type ChongduPermissionPreviousValues {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  name: String
  parentId: String
  parentIds: String
  permission: String
  status: Int
  type: Int
  url: String
}

type ChongduPermissionSubscriptionPayload {
  mutation: MutationType!
  node: ChongduPermission
  updatedFields: [String!]
  previousValues: ChongduPermissionPreviousValues
}

input ChongduPermissionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduPermissionWhereInput
  AND: [ChongduPermissionSubscriptionWhereInput!]
  OR: [ChongduPermissionSubscriptionWhereInput!]
  NOT: [ChongduPermissionSubscriptionWhereInput!]
}

input ChongduPermissionUpdateInput {
  ct: String
  cuserId: String
  d: Int
  name: String
  parentId: String
  parentIds: String
  permission: String
  status: Int
  type: Int
  url: String
}

input ChongduPermissionUpdateManyMutationInput {
  ct: String
  cuserId: String
  d: Int
  name: String
  parentId: String
  parentIds: String
  permission: String
  status: Int
  type: Int
  url: String
}

input ChongduPermissionWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  parentId: String
  parentId_not: String
  parentId_in: [String!]
  parentId_not_in: [String!]
  parentId_lt: String
  parentId_lte: String
  parentId_gt: String
  parentId_gte: String
  parentId_contains: String
  parentId_not_contains: String
  parentId_starts_with: String
  parentId_not_starts_with: String
  parentId_ends_with: String
  parentId_not_ends_with: String
  parentIds: String
  parentIds_not: String
  parentIds_in: [String!]
  parentIds_not_in: [String!]
  parentIds_lt: String
  parentIds_lte: String
  parentIds_gt: String
  parentIds_gte: String
  parentIds_contains: String
  parentIds_not_contains: String
  parentIds_starts_with: String
  parentIds_not_starts_with: String
  parentIds_ends_with: String
  parentIds_not_ends_with: String
  permission: String
  permission_not: String
  permission_in: [String!]
  permission_not_in: [String!]
  permission_lt: String
  permission_lte: String
  permission_gt: String
  permission_gte: String
  permission_contains: String
  permission_not_contains: String
  permission_starts_with: String
  permission_not_starts_with: String
  permission_ends_with: String
  permission_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  AND: [ChongduPermissionWhereInput!]
  OR: [ChongduPermissionWhereInput!]
  NOT: [ChongduPermissionWhereInput!]
}

input ChongduPermissionWhereUniqueInput {
  id: Int
}

type ChongduPet {
  id: ID!
  addressId: Int
  birthday: String
  browser: Int
  citycode: String
  code: String
  color: String
  content: String
  ct: String
  d: Int
  icon: String
  isMeet: Int
  level: Int
  merchantId: String
  mt: String
  muserId: String
  name: String
  price: Float
  pType: Int
  sex: Int
  shareCount: Int
  status: Int
  title: String
  typeId: ChongduPetType
  userId: ChongduUser
}

type ChongduPetauthentdetail {
  id: Int!
  audit: Int
  authtime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  petid: ChongduPet
  sort: Int
  status: Int
  title: String
  userid: ChongduUser
}

type ChongduPetauthentdetailConnection {
  pageInfo: PageInfo!
  edges: [ChongduPetauthentdetailEdge]!
  aggregate: AggregateChongduPetauthentdetail!
}

input ChongduPetauthentdetailCreateInput {
  id: Int
  audit: Int
  authtime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  petid: ChongduPetCreateOneInput
  sort: Int
  status: Int
  title: String
  userid: ChongduUserCreateOneInput
}

type ChongduPetauthentdetailEdge {
  node: ChongduPetauthentdetail!
  cursor: String!
}

enum ChongduPetauthentdetailOrderByInput {
  id_ASC
  id_DESC
  audit_ASC
  audit_DESC
  authtime_ASC
  authtime_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  cuserid_ASC
  cuserid_DESC
  d_ASC
  d_DESC
  mt_ASC
  mt_DESC
  muserid_ASC
  muserid_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
}

type ChongduPetauthentdetailPreviousValues {
  id: Int!
  audit: Int
  authtime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  sort: Int
  status: Int
  title: String
}

type ChongduPetauthentdetailSubscriptionPayload {
  mutation: MutationType!
  node: ChongduPetauthentdetail
  updatedFields: [String!]
  previousValues: ChongduPetauthentdetailPreviousValues
}

input ChongduPetauthentdetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduPetauthentdetailWhereInput
  AND: [ChongduPetauthentdetailSubscriptionWhereInput!]
  OR: [ChongduPetauthentdetailSubscriptionWhereInput!]
  NOT: [ChongduPetauthentdetailSubscriptionWhereInput!]
}

input ChongduPetauthentdetailUpdateInput {
  audit: Int
  authtime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  petid: ChongduPetUpdateOneInput
  sort: Int
  status: Int
  title: String
  userid: ChongduUserUpdateOneInput
}

input ChongduPetauthentdetailUpdateManyMutationInput {
  audit: Int
  authtime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  sort: Int
  status: Int
  title: String
}

input ChongduPetauthentdetailWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  audit: Int
  audit_not: Int
  audit_in: [Int!]
  audit_not_in: [Int!]
  audit_lt: Int
  audit_lte: Int
  audit_gt: Int
  audit_gte: Int
  authtime: String
  authtime_not: String
  authtime_in: [String!]
  authtime_not_in: [String!]
  authtime_lt: String
  authtime_lte: String
  authtime_gt: String
  authtime_gte: String
  authtime_contains: String
  authtime_not_contains: String
  authtime_starts_with: String
  authtime_not_starts_with: String
  authtime_ends_with: String
  authtime_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserid: String
  cuserid_not: String
  cuserid_in: [String!]
  cuserid_not_in: [String!]
  cuserid_lt: String
  cuserid_lte: String
  cuserid_gt: String
  cuserid_gte: String
  cuserid_contains: String
  cuserid_not_contains: String
  cuserid_starts_with: String
  cuserid_not_starts_with: String
  cuserid_ends_with: String
  cuserid_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserid: String
  muserid_not: String
  muserid_in: [String!]
  muserid_not_in: [String!]
  muserid_lt: String
  muserid_lte: String
  muserid_gt: String
  muserid_gte: String
  muserid_contains: String
  muserid_not_contains: String
  muserid_starts_with: String
  muserid_not_starts_with: String
  muserid_ends_with: String
  muserid_not_ends_with: String
  petid: ChongduPetWhereInput
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  userid: ChongduUserWhereInput
  AND: [ChongduPetauthentdetailWhereInput!]
  OR: [ChongduPetauthentdetailWhereInput!]
  NOT: [ChongduPetauthentdetailWhereInput!]
}

input ChongduPetauthentdetailWhereUniqueInput {
  id: Int
}

type ChongduPetauthentLog {
  id: Int!
  petauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdmin
  ct: String
  d: Int
}

type ChongduPetauthentLogConnection {
  pageInfo: PageInfo!
  edges: [ChongduPetauthentLogEdge]!
  aggregate: AggregateChongduPetauthentLog!
}

input ChongduPetauthentLogCreateInput {
  id: Int
  petauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdminCreateOneInput
  ct: String
  d: Int
}

type ChongduPetauthentLogEdge {
  node: ChongduPetauthentLog!
  cursor: String!
}

enum ChongduPetauthentLogOrderByInput {
  id_ASC
  id_DESC
  petauthentId_ASC
  petauthentId_DESC
  status_ASC
  status_DESC
  remark_ASC
  remark_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
}

type ChongduPetauthentLogPreviousValues {
  id: Int!
  petauthentId: String
  status: Int
  remark: String
  ct: String
  d: Int
}

type ChongduPetauthentLogSubscriptionPayload {
  mutation: MutationType!
  node: ChongduPetauthentLog
  updatedFields: [String!]
  previousValues: ChongduPetauthentLogPreviousValues
}

input ChongduPetauthentLogSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduPetauthentLogWhereInput
  AND: [ChongduPetauthentLogSubscriptionWhereInput!]
  OR: [ChongduPetauthentLogSubscriptionWhereInput!]
  NOT: [ChongduPetauthentLogSubscriptionWhereInput!]
}

input ChongduPetauthentLogUpdateInput {
  petauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdminUpdateOneInput
  ct: String
  d: Int
}

input ChongduPetauthentLogUpdateManyMutationInput {
  petauthentId: String
  status: Int
  remark: String
  ct: String
  d: Int
}

input ChongduPetauthentLogWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  petauthentId: String
  petauthentId_not: String
  petauthentId_in: [String!]
  petauthentId_not_in: [String!]
  petauthentId_lt: String
  petauthentId_lte: String
  petauthentId_gt: String
  petauthentId_gte: String
  petauthentId_contains: String
  petauthentId_not_contains: String
  petauthentId_starts_with: String
  petauthentId_not_starts_with: String
  petauthentId_ends_with: String
  petauthentId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  remark: String
  remark_not: String
  remark_in: [String!]
  remark_not_in: [String!]
  remark_lt: String
  remark_lte: String
  remark_gt: String
  remark_gte: String
  remark_contains: String
  remark_not_contains: String
  remark_starts_with: String
  remark_not_starts_with: String
  remark_ends_with: String
  remark_not_ends_with: String
  cadminId: ChongduAdminWhereInput
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  AND: [ChongduPetauthentLogWhereInput!]
  OR: [ChongduPetauthentLogWhereInput!]
  NOT: [ChongduPetauthentLogWhereInput!]
}

input ChongduPetauthentLogWhereUniqueInput {
  id: Int
}

type ChongduPetCard {
  id: Int!
  birthday: String
  ct: String
  d: Int
  icon: String
  isSteriliz: Int
  name: String
  petType: Int
  praiseCount: Int
  sex: Int
  userId: String
  weight: String
}

type ChongduPetCardConnection {
  pageInfo: PageInfo!
  edges: [ChongduPetCardEdge]!
  aggregate: AggregateChongduPetCard!
}

input ChongduPetCardCreateInput {
  id: Int
  birthday: String
  ct: String
  d: Int
  icon: String
  isSteriliz: Int
  name: String
  petType: Int
  praiseCount: Int
  sex: Int
  userId: String
  weight: String
}

type ChongduPetCardEdge {
  node: ChongduPetCard!
  cursor: String!
}

enum ChongduPetCardOrderByInput {
  id_ASC
  id_DESC
  birthday_ASC
  birthday_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  icon_ASC
  icon_DESC
  isSteriliz_ASC
  isSteriliz_DESC
  name_ASC
  name_DESC
  petType_ASC
  petType_DESC
  praiseCount_ASC
  praiseCount_DESC
  sex_ASC
  sex_DESC
  userId_ASC
  userId_DESC
  weight_ASC
  weight_DESC
}

type ChongduPetCardPreviousValues {
  id: Int!
  birthday: String
  ct: String
  d: Int
  icon: String
  isSteriliz: Int
  name: String
  petType: Int
  praiseCount: Int
  sex: Int
  userId: String
  weight: String
}

type ChongduPetCardSubscriptionPayload {
  mutation: MutationType!
  node: ChongduPetCard
  updatedFields: [String!]
  previousValues: ChongduPetCardPreviousValues
}

input ChongduPetCardSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduPetCardWhereInput
  AND: [ChongduPetCardSubscriptionWhereInput!]
  OR: [ChongduPetCardSubscriptionWhereInput!]
  NOT: [ChongduPetCardSubscriptionWhereInput!]
}

input ChongduPetCardUpdateInput {
  birthday: String
  ct: String
  d: Int
  icon: String
  isSteriliz: Int
  name: String
  petType: Int
  praiseCount: Int
  sex: Int
  userId: String
  weight: String
}

input ChongduPetCardUpdateManyMutationInput {
  birthday: String
  ct: String
  d: Int
  icon: String
  isSteriliz: Int
  name: String
  petType: Int
  praiseCount: Int
  sex: Int
  userId: String
  weight: String
}

input ChongduPetCardWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  birthday: String
  birthday_not: String
  birthday_in: [String!]
  birthday_not_in: [String!]
  birthday_lt: String
  birthday_lte: String
  birthday_gt: String
  birthday_gte: String
  birthday_contains: String
  birthday_not_contains: String
  birthday_starts_with: String
  birthday_not_starts_with: String
  birthday_ends_with: String
  birthday_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  isSteriliz: Int
  isSteriliz_not: Int
  isSteriliz_in: [Int!]
  isSteriliz_not_in: [Int!]
  isSteriliz_lt: Int
  isSteriliz_lte: Int
  isSteriliz_gt: Int
  isSteriliz_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  petType: Int
  petType_not: Int
  petType_in: [Int!]
  petType_not_in: [Int!]
  petType_lt: Int
  petType_lte: Int
  petType_gt: Int
  petType_gte: Int
  praiseCount: Int
  praiseCount_not: Int
  praiseCount_in: [Int!]
  praiseCount_not_in: [Int!]
  praiseCount_lt: Int
  praiseCount_lte: Int
  praiseCount_gt: Int
  praiseCount_gte: Int
  sex: Int
  sex_not: Int
  sex_in: [Int!]
  sex_not_in: [Int!]
  sex_lt: Int
  sex_lte: Int
  sex_gt: Int
  sex_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  weight: String
  weight_not: String
  weight_in: [String!]
  weight_not_in: [String!]
  weight_lt: String
  weight_lte: String
  weight_gt: String
  weight_gte: String
  weight_contains: String
  weight_not_contains: String
  weight_starts_with: String
  weight_not_starts_with: String
  weight_ends_with: String
  weight_not_ends_with: String
  AND: [ChongduPetCardWhereInput!]
  OR: [ChongduPetCardWhereInput!]
  NOT: [ChongduPetCardWhereInput!]
}

input ChongduPetCardWhereUniqueInput {
  id: Int
}

type ChongduPetConnection {
  pageInfo: PageInfo!
  edges: [ChongduPetEdge]!
  aggregate: AggregateChongduPet!
}

input ChongduPetCreateInput {
  id: ID
  addressId: Int
  birthday: String
  browser: Int
  citycode: String
  code: String
  color: String
  content: String
  ct: String
  d: Int
  icon: String
  isMeet: Int
  level: Int
  merchantId: String
  mt: String
  muserId: String
  name: String
  price: Float
  pType: Int
  sex: Int
  shareCount: Int
  status: Int
  title: String
  typeId: ChongduPetTypeCreateOneInput
  userId: ChongduUserCreateOneInput
}

input ChongduPetCreateOneInput {
  create: ChongduPetCreateInput
  connect: ChongduPetWhereUniqueInput
}

type ChongduPetEdge {
  node: ChongduPet!
  cursor: String!
}

type ChongduPetImg {
  id: ID!
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  petId: String
  status: Int
  type: Int
  userId: String
}

type ChongduPetImgConnection {
  pageInfo: PageInfo!
  edges: [ChongduPetImgEdge]!
  aggregate: AggregateChongduPetImg!
}

input ChongduPetImgCreateInput {
  id: ID
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  petId: String
  status: Int
  type: Int
  userId: String
}

type ChongduPetImgEdge {
  node: ChongduPetImg!
  cursor: String!
}

enum ChongduPetImgOrderByInput {
  id_ASC
  id_DESC
  addr_ASC
  addr_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  imgType_ASC
  imgType_DESC
  mt_ASC
  mt_DESC
  petId_ASC
  petId_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduPetImgPreviousValues {
  id: ID!
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  petId: String
  status: Int
  type: Int
  userId: String
}

type ChongduPetImgSubscriptionPayload {
  mutation: MutationType!
  node: ChongduPetImg
  updatedFields: [String!]
  previousValues: ChongduPetImgPreviousValues
}

input ChongduPetImgSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduPetImgWhereInput
  AND: [ChongduPetImgSubscriptionWhereInput!]
  OR: [ChongduPetImgSubscriptionWhereInput!]
  NOT: [ChongduPetImgSubscriptionWhereInput!]
}

input ChongduPetImgUpdateInput {
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  petId: String
  status: Int
  type: Int
  userId: String
}

input ChongduPetImgUpdateManyMutationInput {
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  petId: String
  status: Int
  type: Int
  userId: String
}

input ChongduPetImgWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  addr: String
  addr_not: String
  addr_in: [String!]
  addr_not_in: [String!]
  addr_lt: String
  addr_lte: String
  addr_gt: String
  addr_gte: String
  addr_contains: String
  addr_not_contains: String
  addr_starts_with: String
  addr_not_starts_with: String
  addr_ends_with: String
  addr_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  imgType: Int
  imgType_not: Int
  imgType_in: [Int!]
  imgType_not_in: [Int!]
  imgType_lt: Int
  imgType_lte: Int
  imgType_gt: Int
  imgType_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  petId: String
  petId_not: String
  petId_in: [String!]
  petId_not_in: [String!]
  petId_lt: String
  petId_lte: String
  petId_gt: String
  petId_gte: String
  petId_contains: String
  petId_not_contains: String
  petId_starts_with: String
  petId_not_starts_with: String
  petId_ends_with: String
  petId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduPetImgWhereInput!]
  OR: [ChongduPetImgWhereInput!]
  NOT: [ChongduPetImgWhereInput!]
}

input ChongduPetImgWhereUniqueInput {
  id: ID
}

enum ChongduPetOrderByInput {
  id_ASC
  id_DESC
  addressId_ASC
  addressId_DESC
  birthday_ASC
  birthday_DESC
  browser_ASC
  browser_DESC
  citycode_ASC
  citycode_DESC
  code_ASC
  code_DESC
  color_ASC
  color_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  icon_ASC
  icon_DESC
  isMeet_ASC
  isMeet_DESC
  level_ASC
  level_DESC
  merchantId_ASC
  merchantId_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  pType_ASC
  pType_DESC
  sex_ASC
  sex_DESC
  shareCount_ASC
  shareCount_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
}

type ChongduPetPreviousValues {
  id: ID!
  addressId: Int
  birthday: String
  browser: Int
  citycode: String
  code: String
  color: String
  content: String
  ct: String
  d: Int
  icon: String
  isMeet: Int
  level: Int
  merchantId: String
  mt: String
  muserId: String
  name: String
  price: Float
  pType: Int
  sex: Int
  shareCount: Int
  status: Int
  title: String
}

type ChongduPetRecommend {
  id: Int!
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  pid: Int
  sort: Int
  starttime: String
  status: Int
  userid: String
  username: String
}

type ChongduPetRecommendConnection {
  pageInfo: PageInfo!
  edges: [ChongduPetRecommendEdge]!
  aggregate: AggregateChongduPetRecommend!
}

input ChongduPetRecommendCreateInput {
  id: Int
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  pid: Int
  sort: Int
  starttime: String
  status: Int
  userid: String
  username: String
}

type ChongduPetRecommendEdge {
  node: ChongduPetRecommend!
  cursor: String!
}

enum ChongduPetRecommendOrderByInput {
  id_ASC
  id_DESC
  citycode_ASC
  citycode_DESC
  ct_ASC
  ct_DESC
  cuserid_ASC
  cuserid_DESC
  d_ASC
  d_DESC
  deviceid_ASC
  deviceid_DESC
  devicename_ASC
  devicename_DESC
  devicetype_ASC
  devicetype_DESC
  endtime_ASC
  endtime_DESC
  mt_ASC
  mt_DESC
  muserid_ASC
  muserid_DESC
  name_ASC
  name_DESC
  pid_ASC
  pid_DESC
  sort_ASC
  sort_DESC
  starttime_ASC
  starttime_DESC
  status_ASC
  status_DESC
  userid_ASC
  userid_DESC
  username_ASC
  username_DESC
}

type ChongduPetRecommendPreviousValues {
  id: Int!
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  pid: Int
  sort: Int
  starttime: String
  status: Int
  userid: String
  username: String
}

type ChongduPetRecommendSubscriptionPayload {
  mutation: MutationType!
  node: ChongduPetRecommend
  updatedFields: [String!]
  previousValues: ChongduPetRecommendPreviousValues
}

input ChongduPetRecommendSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduPetRecommendWhereInput
  AND: [ChongduPetRecommendSubscriptionWhereInput!]
  OR: [ChongduPetRecommendSubscriptionWhereInput!]
  NOT: [ChongduPetRecommendSubscriptionWhereInput!]
}

input ChongduPetRecommendUpdateInput {
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  pid: Int
  sort: Int
  starttime: String
  status: Int
  userid: String
  username: String
}

input ChongduPetRecommendUpdateManyMutationInput {
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  pid: Int
  sort: Int
  starttime: String
  status: Int
  userid: String
  username: String
}

input ChongduPetRecommendWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  citycode: String
  citycode_not: String
  citycode_in: [String!]
  citycode_not_in: [String!]
  citycode_lt: String
  citycode_lte: String
  citycode_gt: String
  citycode_gte: String
  citycode_contains: String
  citycode_not_contains: String
  citycode_starts_with: String
  citycode_not_starts_with: String
  citycode_ends_with: String
  citycode_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserid: String
  cuserid_not: String
  cuserid_in: [String!]
  cuserid_not_in: [String!]
  cuserid_lt: String
  cuserid_lte: String
  cuserid_gt: String
  cuserid_gte: String
  cuserid_contains: String
  cuserid_not_contains: String
  cuserid_starts_with: String
  cuserid_not_starts_with: String
  cuserid_ends_with: String
  cuserid_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  deviceid: String
  deviceid_not: String
  deviceid_in: [String!]
  deviceid_not_in: [String!]
  deviceid_lt: String
  deviceid_lte: String
  deviceid_gt: String
  deviceid_gte: String
  deviceid_contains: String
  deviceid_not_contains: String
  deviceid_starts_with: String
  deviceid_not_starts_with: String
  deviceid_ends_with: String
  deviceid_not_ends_with: String
  devicename: String
  devicename_not: String
  devicename_in: [String!]
  devicename_not_in: [String!]
  devicename_lt: String
  devicename_lte: String
  devicename_gt: String
  devicename_gte: String
  devicename_contains: String
  devicename_not_contains: String
  devicename_starts_with: String
  devicename_not_starts_with: String
  devicename_ends_with: String
  devicename_not_ends_with: String
  devicetype: Int
  devicetype_not: Int
  devicetype_in: [Int!]
  devicetype_not_in: [Int!]
  devicetype_lt: Int
  devicetype_lte: Int
  devicetype_gt: Int
  devicetype_gte: Int
  endtime: String
  endtime_not: String
  endtime_in: [String!]
  endtime_not_in: [String!]
  endtime_lt: String
  endtime_lte: String
  endtime_gt: String
  endtime_gte: String
  endtime_contains: String
  endtime_not_contains: String
  endtime_starts_with: String
  endtime_not_starts_with: String
  endtime_ends_with: String
  endtime_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserid: String
  muserid_not: String
  muserid_in: [String!]
  muserid_not_in: [String!]
  muserid_lt: String
  muserid_lte: String
  muserid_gt: String
  muserid_gte: String
  muserid_contains: String
  muserid_not_contains: String
  muserid_starts_with: String
  muserid_not_starts_with: String
  muserid_ends_with: String
  muserid_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  pid: Int
  pid_not: Int
  pid_in: [Int!]
  pid_not_in: [Int!]
  pid_lt: Int
  pid_lte: Int
  pid_gt: Int
  pid_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  starttime: String
  starttime_not: String
  starttime_in: [String!]
  starttime_not_in: [String!]
  starttime_lt: String
  starttime_lte: String
  starttime_gt: String
  starttime_gte: String
  starttime_contains: String
  starttime_not_contains: String
  starttime_starts_with: String
  starttime_not_starts_with: String
  starttime_ends_with: String
  starttime_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  userid: String
  userid_not: String
  userid_in: [String!]
  userid_not_in: [String!]
  userid_lt: String
  userid_lte: String
  userid_gt: String
  userid_gte: String
  userid_contains: String
  userid_not_contains: String
  userid_starts_with: String
  userid_not_starts_with: String
  userid_ends_with: String
  userid_not_ends_with: String
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  AND: [ChongduPetRecommendWhereInput!]
  OR: [ChongduPetRecommendWhereInput!]
  NOT: [ChongduPetRecommendWhereInput!]
}

input ChongduPetRecommendWhereUniqueInput {
  id: Int
}

type ChongduPetSubscriptionPayload {
  mutation: MutationType!
  node: ChongduPet
  updatedFields: [String!]
  previousValues: ChongduPetPreviousValues
}

input ChongduPetSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduPetWhereInput
  AND: [ChongduPetSubscriptionWhereInput!]
  OR: [ChongduPetSubscriptionWhereInput!]
  NOT: [ChongduPetSubscriptionWhereInput!]
}

type ChongduPetType {
  id: Int!
  ct: String
  cuserId: String
  image: String
  level: Int
  name: String
  pid: Int
  ppid: Int
  sort: Int
}

type ChongduPetTypeConnection {
  pageInfo: PageInfo!
  edges: [ChongduPetTypeEdge]!
  aggregate: AggregateChongduPetType!
}

input ChongduPetTypeCreateInput {
  id: Int
  ct: String
  cuserId: String
  image: String
  level: Int
  name: String
  pid: Int
  ppid: Int
  sort: Int
}

input ChongduPetTypeCreateOneInput {
  create: ChongduPetTypeCreateInput
  connect: ChongduPetTypeWhereUniqueInput
}

type ChongduPetTypeEdge {
  node: ChongduPetType!
  cursor: String!
}

enum ChongduPetTypeOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  image_ASC
  image_DESC
  level_ASC
  level_DESC
  name_ASC
  name_DESC
  pid_ASC
  pid_DESC
  ppid_ASC
  ppid_DESC
  sort_ASC
  sort_DESC
}

type ChongduPetTypePreviousValues {
  id: Int!
  ct: String
  cuserId: String
  image: String
  level: Int
  name: String
  pid: Int
  ppid: Int
  sort: Int
}

type ChongduPetTypeSubscriptionPayload {
  mutation: MutationType!
  node: ChongduPetType
  updatedFields: [String!]
  previousValues: ChongduPetTypePreviousValues
}

input ChongduPetTypeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduPetTypeWhereInput
  AND: [ChongduPetTypeSubscriptionWhereInput!]
  OR: [ChongduPetTypeSubscriptionWhereInput!]
  NOT: [ChongduPetTypeSubscriptionWhereInput!]
}

input ChongduPetTypeUpdateDataInput {
  ct: String
  cuserId: String
  image: String
  level: Int
  name: String
  pid: Int
  ppid: Int
  sort: Int
}

input ChongduPetTypeUpdateInput {
  ct: String
  cuserId: String
  image: String
  level: Int
  name: String
  pid: Int
  ppid: Int
  sort: Int
}

input ChongduPetTypeUpdateManyMutationInput {
  ct: String
  cuserId: String
  image: String
  level: Int
  name: String
  pid: Int
  ppid: Int
  sort: Int
}

input ChongduPetTypeUpdateOneInput {
  create: ChongduPetTypeCreateInput
  update: ChongduPetTypeUpdateDataInput
  upsert: ChongduPetTypeUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduPetTypeWhereUniqueInput
}

input ChongduPetTypeUpsertNestedInput {
  update: ChongduPetTypeUpdateDataInput!
  create: ChongduPetTypeCreateInput!
}

input ChongduPetTypeWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  level: Int
  level_not: Int
  level_in: [Int!]
  level_not_in: [Int!]
  level_lt: Int
  level_lte: Int
  level_gt: Int
  level_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  pid: Int
  pid_not: Int
  pid_in: [Int!]
  pid_not_in: [Int!]
  pid_lt: Int
  pid_lte: Int
  pid_gt: Int
  pid_gte: Int
  ppid: Int
  ppid_not: Int
  ppid_in: [Int!]
  ppid_not_in: [Int!]
  ppid_lt: Int
  ppid_lte: Int
  ppid_gt: Int
  ppid_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  AND: [ChongduPetTypeWhereInput!]
  OR: [ChongduPetTypeWhereInput!]
  NOT: [ChongduPetTypeWhereInput!]
}

input ChongduPetTypeWhereUniqueInput {
  id: Int
}

input ChongduPetUpdateDataInput {
  addressId: Int
  birthday: String
  browser: Int
  citycode: String
  code: String
  color: String
  content: String
  ct: String
  d: Int
  icon: String
  isMeet: Int
  level: Int
  merchantId: String
  mt: String
  muserId: String
  name: String
  price: Float
  pType: Int
  sex: Int
  shareCount: Int
  status: Int
  title: String
  typeId: ChongduPetTypeUpdateOneInput
  userId: ChongduUserUpdateOneInput
}

input ChongduPetUpdateInput {
  addressId: Int
  birthday: String
  browser: Int
  citycode: String
  code: String
  color: String
  content: String
  ct: String
  d: Int
  icon: String
  isMeet: Int
  level: Int
  merchantId: String
  mt: String
  muserId: String
  name: String
  price: Float
  pType: Int
  sex: Int
  shareCount: Int
  status: Int
  title: String
  typeId: ChongduPetTypeUpdateOneInput
  userId: ChongduUserUpdateOneInput
}

input ChongduPetUpdateManyMutationInput {
  addressId: Int
  birthday: String
  browser: Int
  citycode: String
  code: String
  color: String
  content: String
  ct: String
  d: Int
  icon: String
  isMeet: Int
  level: Int
  merchantId: String
  mt: String
  muserId: String
  name: String
  price: Float
  pType: Int
  sex: Int
  shareCount: Int
  status: Int
  title: String
}

input ChongduPetUpdateOneInput {
  create: ChongduPetCreateInput
  update: ChongduPetUpdateDataInput
  upsert: ChongduPetUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduPetWhereUniqueInput
}

input ChongduPetUpsertNestedInput {
  update: ChongduPetUpdateDataInput!
  create: ChongduPetCreateInput!
}

input ChongduPetWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  addressId: Int
  addressId_not: Int
  addressId_in: [Int!]
  addressId_not_in: [Int!]
  addressId_lt: Int
  addressId_lte: Int
  addressId_gt: Int
  addressId_gte: Int
  birthday: String
  birthday_not: String
  birthday_in: [String!]
  birthday_not_in: [String!]
  birthday_lt: String
  birthday_lte: String
  birthday_gt: String
  birthday_gte: String
  birthday_contains: String
  birthday_not_contains: String
  birthday_starts_with: String
  birthday_not_starts_with: String
  birthday_ends_with: String
  birthday_not_ends_with: String
  browser: Int
  browser_not: Int
  browser_in: [Int!]
  browser_not_in: [Int!]
  browser_lt: Int
  browser_lte: Int
  browser_gt: Int
  browser_gte: Int
  citycode: String
  citycode_not: String
  citycode_in: [String!]
  citycode_not_in: [String!]
  citycode_lt: String
  citycode_lte: String
  citycode_gt: String
  citycode_gte: String
  citycode_contains: String
  citycode_not_contains: String
  citycode_starts_with: String
  citycode_not_starts_with: String
  citycode_ends_with: String
  citycode_not_ends_with: String
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  color: String
  color_not: String
  color_in: [String!]
  color_not_in: [String!]
  color_lt: String
  color_lte: String
  color_gt: String
  color_gte: String
  color_contains: String
  color_not_contains: String
  color_starts_with: String
  color_not_starts_with: String
  color_ends_with: String
  color_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  isMeet: Int
  isMeet_not: Int
  isMeet_in: [Int!]
  isMeet_not_in: [Int!]
  isMeet_lt: Int
  isMeet_lte: Int
  isMeet_gt: Int
  isMeet_gte: Int
  level: Int
  level_not: Int
  level_in: [Int!]
  level_not_in: [Int!]
  level_lt: Int
  level_lte: Int
  level_gt: Int
  level_gte: Int
  merchantId: String
  merchantId_not: String
  merchantId_in: [String!]
  merchantId_not_in: [String!]
  merchantId_lt: String
  merchantId_lte: String
  merchantId_gt: String
  merchantId_gte: String
  merchantId_contains: String
  merchantId_not_contains: String
  merchantId_starts_with: String
  merchantId_not_starts_with: String
  merchantId_ends_with: String
  merchantId_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  pType: Int
  pType_not: Int
  pType_in: [Int!]
  pType_not_in: [Int!]
  pType_lt: Int
  pType_lte: Int
  pType_gt: Int
  pType_gte: Int
  sex: Int
  sex_not: Int
  sex_in: [Int!]
  sex_not_in: [Int!]
  sex_lt: Int
  sex_lte: Int
  sex_gt: Int
  sex_gte: Int
  shareCount: Int
  shareCount_not: Int
  shareCount_in: [Int!]
  shareCount_not_in: [Int!]
  shareCount_lt: Int
  shareCount_lte: Int
  shareCount_gt: Int
  shareCount_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  typeId: ChongduPetTypeWhereInput
  userId: ChongduUserWhereInput
  AND: [ChongduPetWhereInput!]
  OR: [ChongduPetWhereInput!]
  NOT: [ChongduPetWhereInput!]
}

input ChongduPetWhereUniqueInput {
  id: ID
}

type ChongduPlatformBusiness {
  id: Int!
  content: String
  ct: String
  currency: Float
  cuserId: String
  d: Int
  length: Int
  mt: String
  muserId: String
  name: String
  price: Float
  rNum: Int
  sort: Int
  status: Int
  timestep: Int
  type: Int
}

type ChongduPlatformBusinessConnection {
  pageInfo: PageInfo!
  edges: [ChongduPlatformBusinessEdge]!
  aggregate: AggregateChongduPlatformBusiness!
}

input ChongduPlatformBusinessCreateInput {
  id: Int
  content: String
  ct: String
  currency: Float
  cuserId: String
  d: Int
  length: Int
  mt: String
  muserId: String
  name: String
  price: Float
  rNum: Int
  sort: Int
  status: Int
  timestep: Int
  type: Int
}

type ChongduPlatformBusinessEdge {
  node: ChongduPlatformBusiness!
  cursor: String!
}

enum ChongduPlatformBusinessOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  currency_ASC
  currency_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  length_ASC
  length_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  rNum_ASC
  rNum_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  timestep_ASC
  timestep_DESC
  type_ASC
  type_DESC
}

type ChongduPlatformBusinessPreviousValues {
  id: Int!
  content: String
  ct: String
  currency: Float
  cuserId: String
  d: Int
  length: Int
  mt: String
  muserId: String
  name: String
  price: Float
  rNum: Int
  sort: Int
  status: Int
  timestep: Int
  type: Int
}

type ChongduPlatformBusinessSubscriptionPayload {
  mutation: MutationType!
  node: ChongduPlatformBusiness
  updatedFields: [String!]
  previousValues: ChongduPlatformBusinessPreviousValues
}

input ChongduPlatformBusinessSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduPlatformBusinessWhereInput
  AND: [ChongduPlatformBusinessSubscriptionWhereInput!]
  OR: [ChongduPlatformBusinessSubscriptionWhereInput!]
  NOT: [ChongduPlatformBusinessSubscriptionWhereInput!]
}

input ChongduPlatformBusinessUpdateInput {
  content: String
  ct: String
  currency: Float
  cuserId: String
  d: Int
  length: Int
  mt: String
  muserId: String
  name: String
  price: Float
  rNum: Int
  sort: Int
  status: Int
  timestep: Int
  type: Int
}

input ChongduPlatformBusinessUpdateManyMutationInput {
  content: String
  ct: String
  currency: Float
  cuserId: String
  d: Int
  length: Int
  mt: String
  muserId: String
  name: String
  price: Float
  rNum: Int
  sort: Int
  status: Int
  timestep: Int
  type: Int
}

input ChongduPlatformBusinessWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  currency: Float
  currency_not: Float
  currency_in: [Float!]
  currency_not_in: [Float!]
  currency_lt: Float
  currency_lte: Float
  currency_gt: Float
  currency_gte: Float
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  length: Int
  length_not: Int
  length_in: [Int!]
  length_not_in: [Int!]
  length_lt: Int
  length_lte: Int
  length_gt: Int
  length_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  rNum: Int
  rNum_not: Int
  rNum_in: [Int!]
  rNum_not_in: [Int!]
  rNum_lt: Int
  rNum_lte: Int
  rNum_gt: Int
  rNum_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  timestep: Int
  timestep_not: Int
  timestep_in: [Int!]
  timestep_not_in: [Int!]
  timestep_lt: Int
  timestep_lte: Int
  timestep_gt: Int
  timestep_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  AND: [ChongduPlatformBusinessWhereInput!]
  OR: [ChongduPlatformBusinessWhereInput!]
  NOT: [ChongduPlatformBusinessWhereInput!]
}

input ChongduPlatformBusinessWhereUniqueInput {
  id: Int
}

type ChongduPlatformExecute {
  id: Int!
  business: Int
  ct: String
  cuserId: String
  d: Int
  endtime: String
  money: Float
  mt: String
  muserId: String
  oneprice: Float
  relateId: Int
  relateType: Int
  residue: Int
  sort: Int
  starttime: String
  status: Int
  timestep: String
  type: Int
  userarea: String
  userId: String
  username: String
}

type ChongduPlatformExecuteConnection {
  pageInfo: PageInfo!
  edges: [ChongduPlatformExecuteEdge]!
  aggregate: AggregateChongduPlatformExecute!
}

input ChongduPlatformExecuteCreateInput {
  id: Int
  business: Int
  ct: String
  cuserId: String
  d: Int
  endtime: String
  money: Float
  mt: String
  muserId: String
  oneprice: Float
  relateId: Int
  relateType: Int
  residue: Int
  sort: Int
  starttime: String
  status: Int
  timestep: String
  type: Int
  userarea: String
  userId: String
  username: String
}

type ChongduPlatformExecuteEdge {
  node: ChongduPlatformExecute!
  cursor: String!
}

enum ChongduPlatformExecuteOrderByInput {
  id_ASC
  id_DESC
  business_ASC
  business_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  endtime_ASC
  endtime_DESC
  money_ASC
  money_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  oneprice_ASC
  oneprice_DESC
  relateId_ASC
  relateId_DESC
  relateType_ASC
  relateType_DESC
  residue_ASC
  residue_DESC
  sort_ASC
  sort_DESC
  starttime_ASC
  starttime_DESC
  status_ASC
  status_DESC
  timestep_ASC
  timestep_DESC
  type_ASC
  type_DESC
  userarea_ASC
  userarea_DESC
  userId_ASC
  userId_DESC
  username_ASC
  username_DESC
}

type ChongduPlatformExecutePreviousValues {
  id: Int!
  business: Int
  ct: String
  cuserId: String
  d: Int
  endtime: String
  money: Float
  mt: String
  muserId: String
  oneprice: Float
  relateId: Int
  relateType: Int
  residue: Int
  sort: Int
  starttime: String
  status: Int
  timestep: String
  type: Int
  userarea: String
  userId: String
  username: String
}

type ChongduPlatformExecuteSubscriptionPayload {
  mutation: MutationType!
  node: ChongduPlatformExecute
  updatedFields: [String!]
  previousValues: ChongduPlatformExecutePreviousValues
}

input ChongduPlatformExecuteSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduPlatformExecuteWhereInput
  AND: [ChongduPlatformExecuteSubscriptionWhereInput!]
  OR: [ChongduPlatformExecuteSubscriptionWhereInput!]
  NOT: [ChongduPlatformExecuteSubscriptionWhereInput!]
}

input ChongduPlatformExecuteUpdateInput {
  business: Int
  ct: String
  cuserId: String
  d: Int
  endtime: String
  money: Float
  mt: String
  muserId: String
  oneprice: Float
  relateId: Int
  relateType: Int
  residue: Int
  sort: Int
  starttime: String
  status: Int
  timestep: String
  type: Int
  userarea: String
  userId: String
  username: String
}

input ChongduPlatformExecuteUpdateManyMutationInput {
  business: Int
  ct: String
  cuserId: String
  d: Int
  endtime: String
  money: Float
  mt: String
  muserId: String
  oneprice: Float
  relateId: Int
  relateType: Int
  residue: Int
  sort: Int
  starttime: String
  status: Int
  timestep: String
  type: Int
  userarea: String
  userId: String
  username: String
}

input ChongduPlatformExecuteWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  business: Int
  business_not: Int
  business_in: [Int!]
  business_not_in: [Int!]
  business_lt: Int
  business_lte: Int
  business_gt: Int
  business_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  endtime: String
  endtime_not: String
  endtime_in: [String!]
  endtime_not_in: [String!]
  endtime_lt: String
  endtime_lte: String
  endtime_gt: String
  endtime_gte: String
  endtime_contains: String
  endtime_not_contains: String
  endtime_starts_with: String
  endtime_not_starts_with: String
  endtime_ends_with: String
  endtime_not_ends_with: String
  money: Float
  money_not: Float
  money_in: [Float!]
  money_not_in: [Float!]
  money_lt: Float
  money_lte: Float
  money_gt: Float
  money_gte: Float
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  oneprice: Float
  oneprice_not: Float
  oneprice_in: [Float!]
  oneprice_not_in: [Float!]
  oneprice_lt: Float
  oneprice_lte: Float
  oneprice_gt: Float
  oneprice_gte: Float
  relateId: Int
  relateId_not: Int
  relateId_in: [Int!]
  relateId_not_in: [Int!]
  relateId_lt: Int
  relateId_lte: Int
  relateId_gt: Int
  relateId_gte: Int
  relateType: Int
  relateType_not: Int
  relateType_in: [Int!]
  relateType_not_in: [Int!]
  relateType_lt: Int
  relateType_lte: Int
  relateType_gt: Int
  relateType_gte: Int
  residue: Int
  residue_not: Int
  residue_in: [Int!]
  residue_not_in: [Int!]
  residue_lt: Int
  residue_lte: Int
  residue_gt: Int
  residue_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  starttime: String
  starttime_not: String
  starttime_in: [String!]
  starttime_not_in: [String!]
  starttime_lt: String
  starttime_lte: String
  starttime_gt: String
  starttime_gte: String
  starttime_contains: String
  starttime_not_contains: String
  starttime_starts_with: String
  starttime_not_starts_with: String
  starttime_ends_with: String
  starttime_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  timestep: String
  timestep_not: String
  timestep_in: [String!]
  timestep_not_in: [String!]
  timestep_lt: String
  timestep_lte: String
  timestep_gt: String
  timestep_gte: String
  timestep_contains: String
  timestep_not_contains: String
  timestep_starts_with: String
  timestep_not_starts_with: String
  timestep_ends_with: String
  timestep_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userarea: String
  userarea_not: String
  userarea_in: [String!]
  userarea_not_in: [String!]
  userarea_lt: String
  userarea_lte: String
  userarea_gt: String
  userarea_gte: String
  userarea_contains: String
  userarea_not_contains: String
  userarea_starts_with: String
  userarea_not_starts_with: String
  userarea_ends_with: String
  userarea_not_ends_with: String
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  AND: [ChongduPlatformExecuteWhereInput!]
  OR: [ChongduPlatformExecuteWhereInput!]
  NOT: [ChongduPlatformExecuteWhereInput!]
}

input ChongduPlatformExecuteWhereUniqueInput {
  id: Int
}

type ChongduProduct {
  id: ID!
  brandId: ChongduProductBrand
  browser: Int
  content: String
  ct: String
  d: Int
  icon: String
  merchantId: ChongduMerchant
  mt: String
  name: String
  price: Float
  promotionPrice: Float
  sale: Int
  shareCount: Int
  status: Int
  stock: Int
  title: String
  typeId: ChongduProductType
  userId: String
}

type ChongduProductAuthentdetail {
  id: Int!
  audit: Int
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  productId: ChongduProduct
  sort: Int
  status: Int
  title: String
  type: Int
  userid: ChongduUser
}

type ChongduProductAuthentdetailConnection {
  pageInfo: PageInfo!
  edges: [ChongduProductAuthentdetailEdge]!
  aggregate: AggregateChongduProductAuthentdetail!
}

input ChongduProductAuthentdetailCreateInput {
  id: Int
  audit: Int
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  productId: ChongduProductCreateOneInput
  sort: Int
  status: Int
  title: String
  type: Int
  userid: ChongduUserCreateOneInput
}

type ChongduProductAuthentdetailEdge {
  node: ChongduProductAuthentdetail!
  cursor: String!
}

enum ChongduProductAuthentdetailOrderByInput {
  id_ASC
  id_DESC
  audit_ASC
  audit_DESC
  audittime_ASC
  audittime_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  cuserid_ASC
  cuserid_DESC
  d_ASC
  d_DESC
  mt_ASC
  mt_DESC
  muserid_ASC
  muserid_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
  type_ASC
  type_DESC
}

type ChongduProductAuthentdetailPreviousValues {
  id: Int!
  audit: Int
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  sort: Int
  status: Int
  title: String
  type: Int
}

type ChongduProductAuthentdetailSubscriptionPayload {
  mutation: MutationType!
  node: ChongduProductAuthentdetail
  updatedFields: [String!]
  previousValues: ChongduProductAuthentdetailPreviousValues
}

input ChongduProductAuthentdetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduProductAuthentdetailWhereInput
  AND: [ChongduProductAuthentdetailSubscriptionWhereInput!]
  OR: [ChongduProductAuthentdetailSubscriptionWhereInput!]
  NOT: [ChongduProductAuthentdetailSubscriptionWhereInput!]
}

input ChongduProductAuthentdetailUpdateInput {
  audit: Int
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  productId: ChongduProductUpdateOneInput
  sort: Int
  status: Int
  title: String
  type: Int
  userid: ChongduUserUpdateOneInput
}

input ChongduProductAuthentdetailUpdateManyMutationInput {
  audit: Int
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  sort: Int
  status: Int
  title: String
  type: Int
}

input ChongduProductAuthentdetailWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  audit: Int
  audit_not: Int
  audit_in: [Int!]
  audit_not_in: [Int!]
  audit_lt: Int
  audit_lte: Int
  audit_gt: Int
  audit_gte: Int
  audittime: String
  audittime_not: String
  audittime_in: [String!]
  audittime_not_in: [String!]
  audittime_lt: String
  audittime_lte: String
  audittime_gt: String
  audittime_gte: String
  audittime_contains: String
  audittime_not_contains: String
  audittime_starts_with: String
  audittime_not_starts_with: String
  audittime_ends_with: String
  audittime_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserid: String
  cuserid_not: String
  cuserid_in: [String!]
  cuserid_not_in: [String!]
  cuserid_lt: String
  cuserid_lte: String
  cuserid_gt: String
  cuserid_gte: String
  cuserid_contains: String
  cuserid_not_contains: String
  cuserid_starts_with: String
  cuserid_not_starts_with: String
  cuserid_ends_with: String
  cuserid_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserid: String
  muserid_not: String
  muserid_in: [String!]
  muserid_not_in: [String!]
  muserid_lt: String
  muserid_lte: String
  muserid_gt: String
  muserid_gte: String
  muserid_contains: String
  muserid_not_contains: String
  muserid_starts_with: String
  muserid_not_starts_with: String
  muserid_ends_with: String
  muserid_not_ends_with: String
  productId: ChongduProductWhereInput
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userid: ChongduUserWhereInput
  AND: [ChongduProductAuthentdetailWhereInput!]
  OR: [ChongduProductAuthentdetailWhereInput!]
  NOT: [ChongduProductAuthentdetailWhereInput!]
}

input ChongduProductAuthentdetailWhereUniqueInput {
  id: Int
}

type ChongduProductauthentLog {
  id: Int!
  productauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdmin
  ct: String
  d: Int
}

type ChongduProductauthentLogConnection {
  pageInfo: PageInfo!
  edges: [ChongduProductauthentLogEdge]!
  aggregate: AggregateChongduProductauthentLog!
}

input ChongduProductauthentLogCreateInput {
  id: Int
  productauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdminCreateOneInput
  ct: String
  d: Int
}

type ChongduProductauthentLogEdge {
  node: ChongduProductauthentLog!
  cursor: String!
}

enum ChongduProductauthentLogOrderByInput {
  id_ASC
  id_DESC
  productauthentId_ASC
  productauthentId_DESC
  status_ASC
  status_DESC
  remark_ASC
  remark_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
}

type ChongduProductauthentLogPreviousValues {
  id: Int!
  productauthentId: String
  status: Int
  remark: String
  ct: String
  d: Int
}

type ChongduProductauthentLogSubscriptionPayload {
  mutation: MutationType!
  node: ChongduProductauthentLog
  updatedFields: [String!]
  previousValues: ChongduProductauthentLogPreviousValues
}

input ChongduProductauthentLogSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduProductauthentLogWhereInput
  AND: [ChongduProductauthentLogSubscriptionWhereInput!]
  OR: [ChongduProductauthentLogSubscriptionWhereInput!]
  NOT: [ChongduProductauthentLogSubscriptionWhereInput!]
}

input ChongduProductauthentLogUpdateInput {
  productauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdminUpdateOneInput
  ct: String
  d: Int
}

input ChongduProductauthentLogUpdateManyMutationInput {
  productauthentId: String
  status: Int
  remark: String
  ct: String
  d: Int
}

input ChongduProductauthentLogWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  productauthentId: String
  productauthentId_not: String
  productauthentId_in: [String!]
  productauthentId_not_in: [String!]
  productauthentId_lt: String
  productauthentId_lte: String
  productauthentId_gt: String
  productauthentId_gte: String
  productauthentId_contains: String
  productauthentId_not_contains: String
  productauthentId_starts_with: String
  productauthentId_not_starts_with: String
  productauthentId_ends_with: String
  productauthentId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  remark: String
  remark_not: String
  remark_in: [String!]
  remark_not_in: [String!]
  remark_lt: String
  remark_lte: String
  remark_gt: String
  remark_gte: String
  remark_contains: String
  remark_not_contains: String
  remark_starts_with: String
  remark_not_starts_with: String
  remark_ends_with: String
  remark_not_ends_with: String
  cadminId: ChongduAdminWhereInput
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  AND: [ChongduProductauthentLogWhereInput!]
  OR: [ChongduProductauthentLogWhereInput!]
  NOT: [ChongduProductauthentLogWhereInput!]
}

input ChongduProductauthentLogWhereUniqueInput {
  id: Int
}

type ChongduProductBrand {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  firstLetter: String
  logoImg: String
  mt: String
  muserId: String
  name: String
  status: Int
  type: Int
}

type ChongduProductBrandConnection {
  pageInfo: PageInfo!
  edges: [ChongduProductBrandEdge]!
  aggregate: AggregateChongduProductBrand!
}

input ChongduProductBrandCreateInput {
  id: Int
  ct: String
  cuserId: String
  d: Int
  firstLetter: String
  logoImg: String
  mt: String
  muserId: String
  name: String
  status: Int
  type: Int
}

input ChongduProductBrandCreateOneInput {
  create: ChongduProductBrandCreateInput
  connect: ChongduProductBrandWhereUniqueInput
}

type ChongduProductBrandEdge {
  node: ChongduProductBrand!
  cursor: String!
}

enum ChongduProductBrandOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  firstLetter_ASC
  firstLetter_DESC
  logoImg_ASC
  logoImg_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  name_ASC
  name_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
}

type ChongduProductBrandPreviousValues {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  firstLetter: String
  logoImg: String
  mt: String
  muserId: String
  name: String
  status: Int
  type: Int
}

type ChongduProductBrandSubscriptionPayload {
  mutation: MutationType!
  node: ChongduProductBrand
  updatedFields: [String!]
  previousValues: ChongduProductBrandPreviousValues
}

input ChongduProductBrandSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduProductBrandWhereInput
  AND: [ChongduProductBrandSubscriptionWhereInput!]
  OR: [ChongduProductBrandSubscriptionWhereInput!]
  NOT: [ChongduProductBrandSubscriptionWhereInput!]
}

input ChongduProductBrandUpdateDataInput {
  ct: String
  cuserId: String
  d: Int
  firstLetter: String
  logoImg: String
  mt: String
  muserId: String
  name: String
  status: Int
  type: Int
}

input ChongduProductBrandUpdateInput {
  ct: String
  cuserId: String
  d: Int
  firstLetter: String
  logoImg: String
  mt: String
  muserId: String
  name: String
  status: Int
  type: Int
}

input ChongduProductBrandUpdateManyMutationInput {
  ct: String
  cuserId: String
  d: Int
  firstLetter: String
  logoImg: String
  mt: String
  muserId: String
  name: String
  status: Int
  type: Int
}

input ChongduProductBrandUpdateOneInput {
  create: ChongduProductBrandCreateInput
  update: ChongduProductBrandUpdateDataInput
  upsert: ChongduProductBrandUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduProductBrandWhereUniqueInput
}

input ChongduProductBrandUpsertNestedInput {
  update: ChongduProductBrandUpdateDataInput!
  create: ChongduProductBrandCreateInput!
}

input ChongduProductBrandWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  firstLetter: String
  firstLetter_not: String
  firstLetter_in: [String!]
  firstLetter_not_in: [String!]
  firstLetter_lt: String
  firstLetter_lte: String
  firstLetter_gt: String
  firstLetter_gte: String
  firstLetter_contains: String
  firstLetter_not_contains: String
  firstLetter_starts_with: String
  firstLetter_not_starts_with: String
  firstLetter_ends_with: String
  firstLetter_not_ends_with: String
  logoImg: String
  logoImg_not: String
  logoImg_in: [String!]
  logoImg_not_in: [String!]
  logoImg_lt: String
  logoImg_lte: String
  logoImg_gt: String
  logoImg_gte: String
  logoImg_contains: String
  logoImg_not_contains: String
  logoImg_starts_with: String
  logoImg_not_starts_with: String
  logoImg_ends_with: String
  logoImg_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  AND: [ChongduProductBrandWhereInput!]
  OR: [ChongduProductBrandWhereInput!]
  NOT: [ChongduProductBrandWhereInput!]
}

input ChongduProductBrandWhereUniqueInput {
  id: Int
}

type ChongduProductConnection {
  pageInfo: PageInfo!
  edges: [ChongduProductEdge]!
  aggregate: AggregateChongduProduct!
}

input ChongduProductCreateInput {
  id: ID
  brandId: ChongduProductBrandCreateOneInput
  browser: Int
  content: String
  ct: String
  d: Int
  icon: String
  merchantId: ChongduMerchantCreateOneInput
  mt: String
  name: String
  price: Float
  promotionPrice: Float
  sale: Int
  shareCount: Int
  status: Int
  stock: Int
  title: String
  typeId: ChongduProductTypeCreateOneInput
  userId: String
}

input ChongduProductCreateOneInput {
  create: ChongduProductCreateInput
  connect: ChongduProductWhereUniqueInput
}

type ChongduProductEdge {
  node: ChongduProduct!
  cursor: String!
}

type ChongduProductImg {
  id: ID!
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  productId: String
  status: Int
  type: Int
  userId: String
}

type ChongduProductImgConnection {
  pageInfo: PageInfo!
  edges: [ChongduProductImgEdge]!
  aggregate: AggregateChongduProductImg!
}

input ChongduProductImgCreateInput {
  id: ID
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  productId: String
  status: Int
  type: Int
  userId: String
}

type ChongduProductImgEdge {
  node: ChongduProductImg!
  cursor: String!
}

enum ChongduProductImgOrderByInput {
  id_ASC
  id_DESC
  addr_ASC
  addr_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  imgType_ASC
  imgType_DESC
  mt_ASC
  mt_DESC
  productId_ASC
  productId_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduProductImgPreviousValues {
  id: ID!
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  productId: String
  status: Int
  type: Int
  userId: String
}

type ChongduProductImgSubscriptionPayload {
  mutation: MutationType!
  node: ChongduProductImg
  updatedFields: [String!]
  previousValues: ChongduProductImgPreviousValues
}

input ChongduProductImgSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduProductImgWhereInput
  AND: [ChongduProductImgSubscriptionWhereInput!]
  OR: [ChongduProductImgSubscriptionWhereInput!]
  NOT: [ChongduProductImgSubscriptionWhereInput!]
}

input ChongduProductImgUpdateInput {
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  productId: String
  status: Int
  type: Int
  userId: String
}

input ChongduProductImgUpdateManyMutationInput {
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  productId: String
  status: Int
  type: Int
  userId: String
}

input ChongduProductImgWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  addr: String
  addr_not: String
  addr_in: [String!]
  addr_not_in: [String!]
  addr_lt: String
  addr_lte: String
  addr_gt: String
  addr_gte: String
  addr_contains: String
  addr_not_contains: String
  addr_starts_with: String
  addr_not_starts_with: String
  addr_ends_with: String
  addr_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  imgType: Int
  imgType_not: Int
  imgType_in: [Int!]
  imgType_not_in: [Int!]
  imgType_lt: Int
  imgType_lte: Int
  imgType_gt: Int
  imgType_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  productId: String
  productId_not: String
  productId_in: [String!]
  productId_not_in: [String!]
  productId_lt: String
  productId_lte: String
  productId_gt: String
  productId_gte: String
  productId_contains: String
  productId_not_contains: String
  productId_starts_with: String
  productId_not_starts_with: String
  productId_ends_with: String
  productId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduProductImgWhereInput!]
  OR: [ChongduProductImgWhereInput!]
  NOT: [ChongduProductImgWhereInput!]
}

input ChongduProductImgWhereUniqueInput {
  id: ID
}

enum ChongduProductOrderByInput {
  id_ASC
  id_DESC
  browser_ASC
  browser_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  icon_ASC
  icon_DESC
  mt_ASC
  mt_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  promotionPrice_ASC
  promotionPrice_DESC
  sale_ASC
  sale_DESC
  shareCount_ASC
  shareCount_DESC
  status_ASC
  status_DESC
  stock_ASC
  stock_DESC
  title_ASC
  title_DESC
  userId_ASC
  userId_DESC
}

type ChongduProductPettype {
  id: Int!
  ct: String
  d: Int
  level: Int
  petTypeId: Int
  petTypeName: String
  productId: String
}

type ChongduProductPettypeConnection {
  pageInfo: PageInfo!
  edges: [ChongduProductPettypeEdge]!
  aggregate: AggregateChongduProductPettype!
}

input ChongduProductPettypeCreateInput {
  id: Int
  ct: String
  d: Int
  level: Int
  petTypeId: Int
  petTypeName: String
  productId: String
}

type ChongduProductPettypeEdge {
  node: ChongduProductPettype!
  cursor: String!
}

enum ChongduProductPettypeOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  level_ASC
  level_DESC
  petTypeId_ASC
  petTypeId_DESC
  petTypeName_ASC
  petTypeName_DESC
  productId_ASC
  productId_DESC
}

type ChongduProductPettypePreviousValues {
  id: Int!
  ct: String
  d: Int
  level: Int
  petTypeId: Int
  petTypeName: String
  productId: String
}

type ChongduProductPettypeSubscriptionPayload {
  mutation: MutationType!
  node: ChongduProductPettype
  updatedFields: [String!]
  previousValues: ChongduProductPettypePreviousValues
}

input ChongduProductPettypeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduProductPettypeWhereInput
  AND: [ChongduProductPettypeSubscriptionWhereInput!]
  OR: [ChongduProductPettypeSubscriptionWhereInput!]
  NOT: [ChongduProductPettypeSubscriptionWhereInput!]
}

input ChongduProductPettypeUpdateInput {
  ct: String
  d: Int
  level: Int
  petTypeId: Int
  petTypeName: String
  productId: String
}

input ChongduProductPettypeUpdateManyMutationInput {
  ct: String
  d: Int
  level: Int
  petTypeId: Int
  petTypeName: String
  productId: String
}

input ChongduProductPettypeWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  level: Int
  level_not: Int
  level_in: [Int!]
  level_not_in: [Int!]
  level_lt: Int
  level_lte: Int
  level_gt: Int
  level_gte: Int
  petTypeId: Int
  petTypeId_not: Int
  petTypeId_in: [Int!]
  petTypeId_not_in: [Int!]
  petTypeId_lt: Int
  petTypeId_lte: Int
  petTypeId_gt: Int
  petTypeId_gte: Int
  petTypeName: String
  petTypeName_not: String
  petTypeName_in: [String!]
  petTypeName_not_in: [String!]
  petTypeName_lt: String
  petTypeName_lte: String
  petTypeName_gt: String
  petTypeName_gte: String
  petTypeName_contains: String
  petTypeName_not_contains: String
  petTypeName_starts_with: String
  petTypeName_not_starts_with: String
  petTypeName_ends_with: String
  petTypeName_not_ends_with: String
  productId: String
  productId_not: String
  productId_in: [String!]
  productId_not_in: [String!]
  productId_lt: String
  productId_lte: String
  productId_gt: String
  productId_gte: String
  productId_contains: String
  productId_not_contains: String
  productId_starts_with: String
  productId_not_starts_with: String
  productId_ends_with: String
  productId_not_ends_with: String
  AND: [ChongduProductPettypeWhereInput!]
  OR: [ChongduProductPettypeWhereInput!]
  NOT: [ChongduProductPettypeWhereInput!]
}

input ChongduProductPettypeWhereUniqueInput {
  id: Int
}

type ChongduProductPreviousValues {
  id: ID!
  browser: Int
  content: String
  ct: String
  d: Int
  icon: String
  mt: String
  name: String
  price: Float
  promotionPrice: Float
  sale: Int
  shareCount: Int
  status: Int
  stock: Int
  title: String
  userId: String
}

type ChongduProductRecommend {
  id: Int!
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  productId: String
  sort: Int
  starttime: String
  status: Int
  userid: String
  username: String
}

type ChongduProductRecommendConnection {
  pageInfo: PageInfo!
  edges: [ChongduProductRecommendEdge]!
  aggregate: AggregateChongduProductRecommend!
}

input ChongduProductRecommendCreateInput {
  id: Int
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  productId: String
  sort: Int
  starttime: String
  status: Int
  userid: String
  username: String
}

type ChongduProductRecommendEdge {
  node: ChongduProductRecommend!
  cursor: String!
}

enum ChongduProductRecommendOrderByInput {
  id_ASC
  id_DESC
  citycode_ASC
  citycode_DESC
  ct_ASC
  ct_DESC
  cuserid_ASC
  cuserid_DESC
  d_ASC
  d_DESC
  deviceid_ASC
  deviceid_DESC
  devicename_ASC
  devicename_DESC
  devicetype_ASC
  devicetype_DESC
  endtime_ASC
  endtime_DESC
  mt_ASC
  mt_DESC
  muserid_ASC
  muserid_DESC
  name_ASC
  name_DESC
  productId_ASC
  productId_DESC
  sort_ASC
  sort_DESC
  starttime_ASC
  starttime_DESC
  status_ASC
  status_DESC
  userid_ASC
  userid_DESC
  username_ASC
  username_DESC
}

type ChongduProductRecommendPreviousValues {
  id: Int!
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  productId: String
  sort: Int
  starttime: String
  status: Int
  userid: String
  username: String
}

type ChongduProductRecommendSubscriptionPayload {
  mutation: MutationType!
  node: ChongduProductRecommend
  updatedFields: [String!]
  previousValues: ChongduProductRecommendPreviousValues
}

input ChongduProductRecommendSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduProductRecommendWhereInput
  AND: [ChongduProductRecommendSubscriptionWhereInput!]
  OR: [ChongduProductRecommendSubscriptionWhereInput!]
  NOT: [ChongduProductRecommendSubscriptionWhereInput!]
}

input ChongduProductRecommendUpdateInput {
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  productId: String
  sort: Int
  starttime: String
  status: Int
  userid: String
  username: String
}

input ChongduProductRecommendUpdateManyMutationInput {
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  productId: String
  sort: Int
  starttime: String
  status: Int
  userid: String
  username: String
}

input ChongduProductRecommendWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  citycode: String
  citycode_not: String
  citycode_in: [String!]
  citycode_not_in: [String!]
  citycode_lt: String
  citycode_lte: String
  citycode_gt: String
  citycode_gte: String
  citycode_contains: String
  citycode_not_contains: String
  citycode_starts_with: String
  citycode_not_starts_with: String
  citycode_ends_with: String
  citycode_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserid: String
  cuserid_not: String
  cuserid_in: [String!]
  cuserid_not_in: [String!]
  cuserid_lt: String
  cuserid_lte: String
  cuserid_gt: String
  cuserid_gte: String
  cuserid_contains: String
  cuserid_not_contains: String
  cuserid_starts_with: String
  cuserid_not_starts_with: String
  cuserid_ends_with: String
  cuserid_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  deviceid: String
  deviceid_not: String
  deviceid_in: [String!]
  deviceid_not_in: [String!]
  deviceid_lt: String
  deviceid_lte: String
  deviceid_gt: String
  deviceid_gte: String
  deviceid_contains: String
  deviceid_not_contains: String
  deviceid_starts_with: String
  deviceid_not_starts_with: String
  deviceid_ends_with: String
  deviceid_not_ends_with: String
  devicename: String
  devicename_not: String
  devicename_in: [String!]
  devicename_not_in: [String!]
  devicename_lt: String
  devicename_lte: String
  devicename_gt: String
  devicename_gte: String
  devicename_contains: String
  devicename_not_contains: String
  devicename_starts_with: String
  devicename_not_starts_with: String
  devicename_ends_with: String
  devicename_not_ends_with: String
  devicetype: Int
  devicetype_not: Int
  devicetype_in: [Int!]
  devicetype_not_in: [Int!]
  devicetype_lt: Int
  devicetype_lte: Int
  devicetype_gt: Int
  devicetype_gte: Int
  endtime: String
  endtime_not: String
  endtime_in: [String!]
  endtime_not_in: [String!]
  endtime_lt: String
  endtime_lte: String
  endtime_gt: String
  endtime_gte: String
  endtime_contains: String
  endtime_not_contains: String
  endtime_starts_with: String
  endtime_not_starts_with: String
  endtime_ends_with: String
  endtime_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserid: String
  muserid_not: String
  muserid_in: [String!]
  muserid_not_in: [String!]
  muserid_lt: String
  muserid_lte: String
  muserid_gt: String
  muserid_gte: String
  muserid_contains: String
  muserid_not_contains: String
  muserid_starts_with: String
  muserid_not_starts_with: String
  muserid_ends_with: String
  muserid_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  productId: String
  productId_not: String
  productId_in: [String!]
  productId_not_in: [String!]
  productId_lt: String
  productId_lte: String
  productId_gt: String
  productId_gte: String
  productId_contains: String
  productId_not_contains: String
  productId_starts_with: String
  productId_not_starts_with: String
  productId_ends_with: String
  productId_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  starttime: String
  starttime_not: String
  starttime_in: [String!]
  starttime_not_in: [String!]
  starttime_lt: String
  starttime_lte: String
  starttime_gt: String
  starttime_gte: String
  starttime_contains: String
  starttime_not_contains: String
  starttime_starts_with: String
  starttime_not_starts_with: String
  starttime_ends_with: String
  starttime_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  userid: String
  userid_not: String
  userid_in: [String!]
  userid_not_in: [String!]
  userid_lt: String
  userid_lte: String
  userid_gt: String
  userid_gte: String
  userid_contains: String
  userid_not_contains: String
  userid_starts_with: String
  userid_not_starts_with: String
  userid_ends_with: String
  userid_not_ends_with: String
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  AND: [ChongduProductRecommendWhereInput!]
  OR: [ChongduProductRecommendWhereInput!]
  NOT: [ChongduProductRecommendWhereInput!]
}

input ChongduProductRecommendWhereUniqueInput {
  id: Int
}

type ChongduProductSku {
  id: Int!
  attribute: String
  d: Int
  lockStock: Int
  lowStock: Int
  num: Int
  price: Float
  productId: String
  salesVolume: Int
  skuCode: String
  status: Int
}

type ChongduProductSkuConnection {
  pageInfo: PageInfo!
  edges: [ChongduProductSkuEdge]!
  aggregate: AggregateChongduProductSku!
}

input ChongduProductSkuCreateInput {
  id: Int
  attribute: String
  d: Int
  lockStock: Int
  lowStock: Int
  num: Int
  price: Float
  productId: String
  salesVolume: Int
  skuCode: String
  status: Int
}

type ChongduProductSkuEdge {
  node: ChongduProductSku!
  cursor: String!
}

enum ChongduProductSkuOrderByInput {
  id_ASC
  id_DESC
  attribute_ASC
  attribute_DESC
  d_ASC
  d_DESC
  lockStock_ASC
  lockStock_DESC
  lowStock_ASC
  lowStock_DESC
  num_ASC
  num_DESC
  price_ASC
  price_DESC
  productId_ASC
  productId_DESC
  salesVolume_ASC
  salesVolume_DESC
  skuCode_ASC
  skuCode_DESC
  status_ASC
  status_DESC
}

type ChongduProductSkuPreviousValues {
  id: Int!
  attribute: String
  d: Int
  lockStock: Int
  lowStock: Int
  num: Int
  price: Float
  productId: String
  salesVolume: Int
  skuCode: String
  status: Int
}

type ChongduProductSkuSubscriptionPayload {
  mutation: MutationType!
  node: ChongduProductSku
  updatedFields: [String!]
  previousValues: ChongduProductSkuPreviousValues
}

input ChongduProductSkuSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduProductSkuWhereInput
  AND: [ChongduProductSkuSubscriptionWhereInput!]
  OR: [ChongduProductSkuSubscriptionWhereInput!]
  NOT: [ChongduProductSkuSubscriptionWhereInput!]
}

input ChongduProductSkuUpdateInput {
  attribute: String
  d: Int
  lockStock: Int
  lowStock: Int
  num: Int
  price: Float
  productId: String
  salesVolume: Int
  skuCode: String
  status: Int
}

input ChongduProductSkuUpdateManyMutationInput {
  attribute: String
  d: Int
  lockStock: Int
  lowStock: Int
  num: Int
  price: Float
  productId: String
  salesVolume: Int
  skuCode: String
  status: Int
}

input ChongduProductSkuWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  attribute: String
  attribute_not: String
  attribute_in: [String!]
  attribute_not_in: [String!]
  attribute_lt: String
  attribute_lte: String
  attribute_gt: String
  attribute_gte: String
  attribute_contains: String
  attribute_not_contains: String
  attribute_starts_with: String
  attribute_not_starts_with: String
  attribute_ends_with: String
  attribute_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  lockStock: Int
  lockStock_not: Int
  lockStock_in: [Int!]
  lockStock_not_in: [Int!]
  lockStock_lt: Int
  lockStock_lte: Int
  lockStock_gt: Int
  lockStock_gte: Int
  lowStock: Int
  lowStock_not: Int
  lowStock_in: [Int!]
  lowStock_not_in: [Int!]
  lowStock_lt: Int
  lowStock_lte: Int
  lowStock_gt: Int
  lowStock_gte: Int
  num: Int
  num_not: Int
  num_in: [Int!]
  num_not_in: [Int!]
  num_lt: Int
  num_lte: Int
  num_gt: Int
  num_gte: Int
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  productId: String
  productId_not: String
  productId_in: [String!]
  productId_not_in: [String!]
  productId_lt: String
  productId_lte: String
  productId_gt: String
  productId_gte: String
  productId_contains: String
  productId_not_contains: String
  productId_starts_with: String
  productId_not_starts_with: String
  productId_ends_with: String
  productId_not_ends_with: String
  salesVolume: Int
  salesVolume_not: Int
  salesVolume_in: [Int!]
  salesVolume_not_in: [Int!]
  salesVolume_lt: Int
  salesVolume_lte: Int
  salesVolume_gt: Int
  salesVolume_gte: Int
  skuCode: String
  skuCode_not: String
  skuCode_in: [String!]
  skuCode_not_in: [String!]
  skuCode_lt: String
  skuCode_lte: String
  skuCode_gt: String
  skuCode_gte: String
  skuCode_contains: String
  skuCode_not_contains: String
  skuCode_starts_with: String
  skuCode_not_starts_with: String
  skuCode_ends_with: String
  skuCode_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  AND: [ChongduProductSkuWhereInput!]
  OR: [ChongduProductSkuWhereInput!]
  NOT: [ChongduProductSkuWhereInput!]
}

input ChongduProductSkuWhereUniqueInput {
  id: Int
}

type ChongduProductSubscriptionPayload {
  mutation: MutationType!
  node: ChongduProduct
  updatedFields: [String!]
  previousValues: ChongduProductPreviousValues
}

input ChongduProductSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduProductWhereInput
  AND: [ChongduProductSubscriptionWhereInput!]
  OR: [ChongduProductSubscriptionWhereInput!]
  NOT: [ChongduProductSubscriptionWhereInput!]
}

type ChongduProductType {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pettypeId: String
  pid: Int
  sort: Int
  status: Int
}

type ChongduProductTypeConnection {
  pageInfo: PageInfo!
  edges: [ChongduProductTypeEdge]!
  aggregate: AggregateChongduProductType!
}

input ChongduProductTypeCreateInput {
  id: Int
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pettypeId: String
  pid: Int
  sort: Int
  status: Int
}

input ChongduProductTypeCreateOneInput {
  create: ChongduProductTypeCreateInput
  connect: ChongduProductTypeWhereUniqueInput
}

type ChongduProductTypeEdge {
  node: ChongduProductType!
  cursor: String!
}

enum ChongduProductTypeOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  img_ASC
  img_DESC
  level_ASC
  level_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  name_ASC
  name_DESC
  pettypeId_ASC
  pettypeId_DESC
  pid_ASC
  pid_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
}

type ChongduProductTypePreviousValues {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pettypeId: String
  pid: Int
  sort: Int
  status: Int
}

type ChongduProductTypeSubscriptionPayload {
  mutation: MutationType!
  node: ChongduProductType
  updatedFields: [String!]
  previousValues: ChongduProductTypePreviousValues
}

input ChongduProductTypeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduProductTypeWhereInput
  AND: [ChongduProductTypeSubscriptionWhereInput!]
  OR: [ChongduProductTypeSubscriptionWhereInput!]
  NOT: [ChongduProductTypeSubscriptionWhereInput!]
}

input ChongduProductTypeUpdateDataInput {
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pettypeId: String
  pid: Int
  sort: Int
  status: Int
}

input ChongduProductTypeUpdateInput {
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pettypeId: String
  pid: Int
  sort: Int
  status: Int
}

input ChongduProductTypeUpdateManyMutationInput {
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pettypeId: String
  pid: Int
  sort: Int
  status: Int
}

input ChongduProductTypeUpdateOneInput {
  create: ChongduProductTypeCreateInput
  update: ChongduProductTypeUpdateDataInput
  upsert: ChongduProductTypeUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduProductTypeWhereUniqueInput
}

input ChongduProductTypeUpsertNestedInput {
  update: ChongduProductTypeUpdateDataInput!
  create: ChongduProductTypeCreateInput!
}

input ChongduProductTypeWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  level: Int
  level_not: Int
  level_in: [Int!]
  level_not_in: [Int!]
  level_lt: Int
  level_lte: Int
  level_gt: Int
  level_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  pettypeId: String
  pettypeId_not: String
  pettypeId_in: [String!]
  pettypeId_not_in: [String!]
  pettypeId_lt: String
  pettypeId_lte: String
  pettypeId_gt: String
  pettypeId_gte: String
  pettypeId_contains: String
  pettypeId_not_contains: String
  pettypeId_starts_with: String
  pettypeId_not_starts_with: String
  pettypeId_ends_with: String
  pettypeId_not_ends_with: String
  pid: Int
  pid_not: Int
  pid_in: [Int!]
  pid_not_in: [Int!]
  pid_lt: Int
  pid_lte: Int
  pid_gt: Int
  pid_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  AND: [ChongduProductTypeWhereInput!]
  OR: [ChongduProductTypeWhereInput!]
  NOT: [ChongduProductTypeWhereInput!]
}

input ChongduProductTypeWhereUniqueInput {
  id: Int
}

input ChongduProductUpdateDataInput {
  brandId: ChongduProductBrandUpdateOneInput
  browser: Int
  content: String
  ct: String
  d: Int
  icon: String
  merchantId: ChongduMerchantUpdateOneInput
  mt: String
  name: String
  price: Float
  promotionPrice: Float
  sale: Int
  shareCount: Int
  status: Int
  stock: Int
  title: String
  typeId: ChongduProductTypeUpdateOneInput
  userId: String
}

input ChongduProductUpdateInput {
  brandId: ChongduProductBrandUpdateOneInput
  browser: Int
  content: String
  ct: String
  d: Int
  icon: String
  merchantId: ChongduMerchantUpdateOneInput
  mt: String
  name: String
  price: Float
  promotionPrice: Float
  sale: Int
  shareCount: Int
  status: Int
  stock: Int
  title: String
  typeId: ChongduProductTypeUpdateOneInput
  userId: String
}

input ChongduProductUpdateManyMutationInput {
  browser: Int
  content: String
  ct: String
  d: Int
  icon: String
  mt: String
  name: String
  price: Float
  promotionPrice: Float
  sale: Int
  shareCount: Int
  status: Int
  stock: Int
  title: String
  userId: String
}

input ChongduProductUpdateOneInput {
  create: ChongduProductCreateInput
  update: ChongduProductUpdateDataInput
  upsert: ChongduProductUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduProductWhereUniqueInput
}

input ChongduProductUpsertNestedInput {
  update: ChongduProductUpdateDataInput!
  create: ChongduProductCreateInput!
}

input ChongduProductWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  brandId: ChongduProductBrandWhereInput
  browser: Int
  browser_not: Int
  browser_in: [Int!]
  browser_not_in: [Int!]
  browser_lt: Int
  browser_lte: Int
  browser_gt: Int
  browser_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  merchantId: ChongduMerchantWhereInput
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  promotionPrice: Float
  promotionPrice_not: Float
  promotionPrice_in: [Float!]
  promotionPrice_not_in: [Float!]
  promotionPrice_lt: Float
  promotionPrice_lte: Float
  promotionPrice_gt: Float
  promotionPrice_gte: Float
  sale: Int
  sale_not: Int
  sale_in: [Int!]
  sale_not_in: [Int!]
  sale_lt: Int
  sale_lte: Int
  sale_gt: Int
  sale_gte: Int
  shareCount: Int
  shareCount_not: Int
  shareCount_in: [Int!]
  shareCount_not_in: [Int!]
  shareCount_lt: Int
  shareCount_lte: Int
  shareCount_gt: Int
  shareCount_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  stock: Int
  stock_not: Int
  stock_in: [Int!]
  stock_not_in: [Int!]
  stock_lt: Int
  stock_lte: Int
  stock_gt: Int
  stock_gte: Int
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  typeId: ChongduProductTypeWhereInput
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduProductWhereInput!]
  OR: [ChongduProductWhereInput!]
  NOT: [ChongduProductWhereInput!]
}

input ChongduProductWhereUniqueInput {
  id: ID
}

type ChongduRecommend {
  id: Int!
  cityCode: String
  ct: String
  cuserId: ChongduAdmin
  d: Int
  deviceId: String
  deviceName: String
  deviceType: Int
  endTime: String
  mt: String
  muserId: ChongduAdmin
  name: String
  relateId: String
  relateType: Int
  sort: Int
  startTime: String
  status: Int
  type: Int
  userId: ChongduUser
  userName: String
}

type ChongduRecommendConnection {
  pageInfo: PageInfo!
  edges: [ChongduRecommendEdge]!
  aggregate: AggregateChongduRecommend!
}

input ChongduRecommendCreateInput {
  id: Int
  cityCode: String
  ct: String
  cuserId: ChongduAdminCreateOneInput
  d: Int
  deviceId: String
  deviceName: String
  deviceType: Int
  endTime: String
  mt: String
  muserId: ChongduAdminCreateOneInput
  name: String
  relateId: String
  relateType: Int
  sort: Int
  startTime: String
  status: Int
  type: Int
  userId: ChongduUserCreateOneInput
  userName: String
}

type ChongduRecommendEdge {
  node: ChongduRecommend!
  cursor: String!
}

enum ChongduRecommendOrderByInput {
  id_ASC
  id_DESC
  cityCode_ASC
  cityCode_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  deviceId_ASC
  deviceId_DESC
  deviceName_ASC
  deviceName_DESC
  deviceType_ASC
  deviceType_DESC
  endTime_ASC
  endTime_DESC
  mt_ASC
  mt_DESC
  name_ASC
  name_DESC
  relateId_ASC
  relateId_DESC
  relateType_ASC
  relateType_DESC
  sort_ASC
  sort_DESC
  startTime_ASC
  startTime_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  userName_ASC
  userName_DESC
}

type ChongduRecommendPreviousValues {
  id: Int!
  cityCode: String
  ct: String
  d: Int
  deviceId: String
  deviceName: String
  deviceType: Int
  endTime: String
  mt: String
  name: String
  relateId: String
  relateType: Int
  sort: Int
  startTime: String
  status: Int
  type: Int
  userName: String
}

type ChongduRecommendSubscriptionPayload {
  mutation: MutationType!
  node: ChongduRecommend
  updatedFields: [String!]
  previousValues: ChongduRecommendPreviousValues
}

input ChongduRecommendSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduRecommendWhereInput
  AND: [ChongduRecommendSubscriptionWhereInput!]
  OR: [ChongduRecommendSubscriptionWhereInput!]
  NOT: [ChongduRecommendSubscriptionWhereInput!]
}

input ChongduRecommendUpdateInput {
  cityCode: String
  ct: String
  cuserId: ChongduAdminUpdateOneInput
  d: Int
  deviceId: String
  deviceName: String
  deviceType: Int
  endTime: String
  mt: String
  muserId: ChongduAdminUpdateOneInput
  name: String
  relateId: String
  relateType: Int
  sort: Int
  startTime: String
  status: Int
  type: Int
  userId: ChongduUserUpdateOneInput
  userName: String
}

input ChongduRecommendUpdateManyMutationInput {
  cityCode: String
  ct: String
  d: Int
  deviceId: String
  deviceName: String
  deviceType: Int
  endTime: String
  mt: String
  name: String
  relateId: String
  relateType: Int
  sort: Int
  startTime: String
  status: Int
  type: Int
  userName: String
}

input ChongduRecommendWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  cityCode: String
  cityCode_not: String
  cityCode_in: [String!]
  cityCode_not_in: [String!]
  cityCode_lt: String
  cityCode_lte: String
  cityCode_gt: String
  cityCode_gte: String
  cityCode_contains: String
  cityCode_not_contains: String
  cityCode_starts_with: String
  cityCode_not_starts_with: String
  cityCode_ends_with: String
  cityCode_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: ChongduAdminWhereInput
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  deviceId: String
  deviceId_not: String
  deviceId_in: [String!]
  deviceId_not_in: [String!]
  deviceId_lt: String
  deviceId_lte: String
  deviceId_gt: String
  deviceId_gte: String
  deviceId_contains: String
  deviceId_not_contains: String
  deviceId_starts_with: String
  deviceId_not_starts_with: String
  deviceId_ends_with: String
  deviceId_not_ends_with: String
  deviceName: String
  deviceName_not: String
  deviceName_in: [String!]
  deviceName_not_in: [String!]
  deviceName_lt: String
  deviceName_lte: String
  deviceName_gt: String
  deviceName_gte: String
  deviceName_contains: String
  deviceName_not_contains: String
  deviceName_starts_with: String
  deviceName_not_starts_with: String
  deviceName_ends_with: String
  deviceName_not_ends_with: String
  deviceType: Int
  deviceType_not: Int
  deviceType_in: [Int!]
  deviceType_not_in: [Int!]
  deviceType_lt: Int
  deviceType_lte: Int
  deviceType_gt: Int
  deviceType_gte: Int
  endTime: String
  endTime_not: String
  endTime_in: [String!]
  endTime_not_in: [String!]
  endTime_lt: String
  endTime_lte: String
  endTime_gt: String
  endTime_gte: String
  endTime_contains: String
  endTime_not_contains: String
  endTime_starts_with: String
  endTime_not_starts_with: String
  endTime_ends_with: String
  endTime_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: ChongduAdminWhereInput
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  relateId: String
  relateId_not: String
  relateId_in: [String!]
  relateId_not_in: [String!]
  relateId_lt: String
  relateId_lte: String
  relateId_gt: String
  relateId_gte: String
  relateId_contains: String
  relateId_not_contains: String
  relateId_starts_with: String
  relateId_not_starts_with: String
  relateId_ends_with: String
  relateId_not_ends_with: String
  relateType: Int
  relateType_not: Int
  relateType_in: [Int!]
  relateType_not_in: [Int!]
  relateType_lt: Int
  relateType_lte: Int
  relateType_gt: Int
  relateType_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  startTime: String
  startTime_not: String
  startTime_in: [String!]
  startTime_not_in: [String!]
  startTime_lt: String
  startTime_lte: String
  startTime_gt: String
  startTime_gte: String
  startTime_contains: String
  startTime_not_contains: String
  startTime_starts_with: String
  startTime_not_starts_with: String
  startTime_ends_with: String
  startTime_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: ChongduUserWhereInput
  userName: String
  userName_not: String
  userName_in: [String!]
  userName_not_in: [String!]
  userName_lt: String
  userName_lte: String
  userName_gt: String
  userName_gte: String
  userName_contains: String
  userName_not_contains: String
  userName_starts_with: String
  userName_not_starts_with: String
  userName_ends_with: String
  userName_not_ends_with: String
  AND: [ChongduRecommendWhereInput!]
  OR: [ChongduRecommendWhereInput!]
  NOT: [ChongduRecommendWhereInput!]
}

input ChongduRecommendWhereUniqueInput {
  id: Int
}

type ChongduRefresh {
  id: Int!
  businessId: Int
  ct: String
  petId: String
  productId: String
  refreshType: Int
  serviceId: Int
  type: Int
}

type ChongduRefreshConnection {
  pageInfo: PageInfo!
  edges: [ChongduRefreshEdge]!
  aggregate: AggregateChongduRefresh!
}

input ChongduRefreshCreateInput {
  id: Int
  businessId: Int
  ct: String
  petId: String
  productId: String
  refreshType: Int
  serviceId: Int
  type: Int
}

type ChongduRefreshEdge {
  node: ChongduRefresh!
  cursor: String!
}

enum ChongduRefreshOrderByInput {
  id_ASC
  id_DESC
  businessId_ASC
  businessId_DESC
  ct_ASC
  ct_DESC
  petId_ASC
  petId_DESC
  productId_ASC
  productId_DESC
  refreshType_ASC
  refreshType_DESC
  serviceId_ASC
  serviceId_DESC
  type_ASC
  type_DESC
}

type ChongduRefreshPreviousValues {
  id: Int!
  businessId: Int
  ct: String
  petId: String
  productId: String
  refreshType: Int
  serviceId: Int
  type: Int
}

type ChongduRefreshSubscriptionPayload {
  mutation: MutationType!
  node: ChongduRefresh
  updatedFields: [String!]
  previousValues: ChongduRefreshPreviousValues
}

input ChongduRefreshSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduRefreshWhereInput
  AND: [ChongduRefreshSubscriptionWhereInput!]
  OR: [ChongduRefreshSubscriptionWhereInput!]
  NOT: [ChongduRefreshSubscriptionWhereInput!]
}

input ChongduRefreshUpdateInput {
  businessId: Int
  ct: String
  petId: String
  productId: String
  refreshType: Int
  serviceId: Int
  type: Int
}

input ChongduRefreshUpdateManyMutationInput {
  businessId: Int
  ct: String
  petId: String
  productId: String
  refreshType: Int
  serviceId: Int
  type: Int
}

input ChongduRefreshWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  businessId: Int
  businessId_not: Int
  businessId_in: [Int!]
  businessId_not_in: [Int!]
  businessId_lt: Int
  businessId_lte: Int
  businessId_gt: Int
  businessId_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  petId: String
  petId_not: String
  petId_in: [String!]
  petId_not_in: [String!]
  petId_lt: String
  petId_lte: String
  petId_gt: String
  petId_gte: String
  petId_contains: String
  petId_not_contains: String
  petId_starts_with: String
  petId_not_starts_with: String
  petId_ends_with: String
  petId_not_ends_with: String
  productId: String
  productId_not: String
  productId_in: [String!]
  productId_not_in: [String!]
  productId_lt: String
  productId_lte: String
  productId_gt: String
  productId_gte: String
  productId_contains: String
  productId_not_contains: String
  productId_starts_with: String
  productId_not_starts_with: String
  productId_ends_with: String
  productId_not_ends_with: String
  refreshType: Int
  refreshType_not: Int
  refreshType_in: [Int!]
  refreshType_not_in: [Int!]
  refreshType_lt: Int
  refreshType_lte: Int
  refreshType_gt: Int
  refreshType_gte: Int
  serviceId: Int
  serviceId_not: Int
  serviceId_in: [Int!]
  serviceId_not_in: [Int!]
  serviceId_lt: Int
  serviceId_lte: Int
  serviceId_gt: Int
  serviceId_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  AND: [ChongduRefreshWhereInput!]
  OR: [ChongduRefreshWhereInput!]
  NOT: [ChongduRefreshWhereInput!]
}

input ChongduRefreshWhereUniqueInput {
  id: Int
}

type ChongduRepellent {
  id: Int!
  brandId: Int
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  indexNum: Int
  mt: String
  petId: String
  status: Int
  street: String
  time: String
  userId: String
}

type ChongduRepellentConnection {
  pageInfo: PageInfo!
  edges: [ChongduRepellentEdge]!
  aggregate: AggregateChongduRepellent!
}

input ChongduRepellentCreateInput {
  id: Int
  brandId: Int
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  indexNum: Int
  mt: String
  petId: String
  status: Int
  street: String
  time: String
  userId: String
}

type ChongduRepellentEdge {
  node: ChongduRepellent!
  cursor: String!
}

enum ChongduRepellentOrderByInput {
  id_ASC
  id_DESC
  brandId_ASC
  brandId_DESC
  cityCode_ASC
  cityCode_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  image_ASC
  image_DESC
  indexNum_ASC
  indexNum_DESC
  mt_ASC
  mt_DESC
  petId_ASC
  petId_DESC
  status_ASC
  status_DESC
  street_ASC
  street_DESC
  time_ASC
  time_DESC
  userId_ASC
  userId_DESC
}

type ChongduRepellentPreviousValues {
  id: Int!
  brandId: Int
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  indexNum: Int
  mt: String
  petId: String
  status: Int
  street: String
  time: String
  userId: String
}

type ChongduRepellentSubscriptionPayload {
  mutation: MutationType!
  node: ChongduRepellent
  updatedFields: [String!]
  previousValues: ChongduRepellentPreviousValues
}

input ChongduRepellentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduRepellentWhereInput
  AND: [ChongduRepellentSubscriptionWhereInput!]
  OR: [ChongduRepellentSubscriptionWhereInput!]
  NOT: [ChongduRepellentSubscriptionWhereInput!]
}

input ChongduRepellentUpdateInput {
  brandId: Int
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  indexNum: Int
  mt: String
  petId: String
  status: Int
  street: String
  time: String
  userId: String
}

input ChongduRepellentUpdateManyMutationInput {
  brandId: Int
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  indexNum: Int
  mt: String
  petId: String
  status: Int
  street: String
  time: String
  userId: String
}

input ChongduRepellentWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  brandId: Int
  brandId_not: Int
  brandId_in: [Int!]
  brandId_not_in: [Int!]
  brandId_lt: Int
  brandId_lte: Int
  brandId_gt: Int
  brandId_gte: Int
  cityCode: String
  cityCode_not: String
  cityCode_in: [String!]
  cityCode_not_in: [String!]
  cityCode_lt: String
  cityCode_lte: String
  cityCode_gt: String
  cityCode_gte: String
  cityCode_contains: String
  cityCode_not_contains: String
  cityCode_starts_with: String
  cityCode_not_starts_with: String
  cityCode_ends_with: String
  cityCode_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  indexNum: Int
  indexNum_not: Int
  indexNum_in: [Int!]
  indexNum_not_in: [Int!]
  indexNum_lt: Int
  indexNum_lte: Int
  indexNum_gt: Int
  indexNum_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  petId: String
  petId_not: String
  petId_in: [String!]
  petId_not_in: [String!]
  petId_lt: String
  petId_lte: String
  petId_gt: String
  petId_gte: String
  petId_contains: String
  petId_not_contains: String
  petId_starts_with: String
  petId_not_starts_with: String
  petId_ends_with: String
  petId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  street: String
  street_not: String
  street_in: [String!]
  street_not_in: [String!]
  street_lt: String
  street_lte: String
  street_gt: String
  street_gte: String
  street_contains: String
  street_not_contains: String
  street_starts_with: String
  street_not_starts_with: String
  street_ends_with: String
  street_not_ends_with: String
  time: String
  time_not: String
  time_in: [String!]
  time_not_in: [String!]
  time_lt: String
  time_lte: String
  time_gt: String
  time_gte: String
  time_contains: String
  time_not_contains: String
  time_starts_with: String
  time_not_starts_with: String
  time_ends_with: String
  time_not_ends_with: String
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduRepellentWhereInput!]
  OR: [ChongduRepellentWhereInput!]
  NOT: [ChongduRepellentWhereInput!]
}

input ChongduRepellentWhereUniqueInput {
  id: Int
}

type ChongduRole {
  id: ID!
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  name: String
  status: Int
}

type ChongduRoleAuth {
  id: Int!
  userId: String
  action: String
  method: String
  operationName: String
}

type ChongduRoleAuthConnection {
  pageInfo: PageInfo!
  edges: [ChongduRoleAuthEdge]!
  aggregate: AggregateChongduRoleAuth!
}

input ChongduRoleAuthCreateInput {
  id: Int
  userId: String
  action: String
  method: String
  operationName: String
}

type ChongduRoleAuthEdge {
  node: ChongduRoleAuth!
  cursor: String!
}

enum ChongduRoleAuthOrderByInput {
  id_ASC
  id_DESC
  userId_ASC
  userId_DESC
  action_ASC
  action_DESC
  method_ASC
  method_DESC
  operationName_ASC
  operationName_DESC
}

type ChongduRoleAuthPreviousValues {
  id: Int!
  userId: String
  action: String
  method: String
  operationName: String
}

type ChongduRoleAuthSubscriptionPayload {
  mutation: MutationType!
  node: ChongduRoleAuth
  updatedFields: [String!]
  previousValues: ChongduRoleAuthPreviousValues
}

input ChongduRoleAuthSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduRoleAuthWhereInput
  AND: [ChongduRoleAuthSubscriptionWhereInput!]
  OR: [ChongduRoleAuthSubscriptionWhereInput!]
  NOT: [ChongduRoleAuthSubscriptionWhereInput!]
}

input ChongduRoleAuthUpdateInput {
  userId: String
  action: String
  method: String
  operationName: String
}

input ChongduRoleAuthUpdateManyMutationInput {
  userId: String
  action: String
  method: String
  operationName: String
}

input ChongduRoleAuthWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  action: String
  action_not: String
  action_in: [String!]
  action_not_in: [String!]
  action_lt: String
  action_lte: String
  action_gt: String
  action_gte: String
  action_contains: String
  action_not_contains: String
  action_starts_with: String
  action_not_starts_with: String
  action_ends_with: String
  action_not_ends_with: String
  method: String
  method_not: String
  method_in: [String!]
  method_not_in: [String!]
  method_lt: String
  method_lte: String
  method_gt: String
  method_gte: String
  method_contains: String
  method_not_contains: String
  method_starts_with: String
  method_not_starts_with: String
  method_ends_with: String
  method_not_ends_with: String
  operationName: String
  operationName_not: String
  operationName_in: [String!]
  operationName_not_in: [String!]
  operationName_lt: String
  operationName_lte: String
  operationName_gt: String
  operationName_gte: String
  operationName_contains: String
  operationName_not_contains: String
  operationName_starts_with: String
  operationName_not_starts_with: String
  operationName_ends_with: String
  operationName_not_ends_with: String
  AND: [ChongduRoleAuthWhereInput!]
  OR: [ChongduRoleAuthWhereInput!]
  NOT: [ChongduRoleAuthWhereInput!]
}

input ChongduRoleAuthWhereUniqueInput {
  id: Int
}

type ChongduRoleConnection {
  pageInfo: PageInfo!
  edges: [ChongduRoleEdge]!
  aggregate: AggregateChongduRole!
}

input ChongduRoleCreateInput {
  id: ID
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  name: String
  status: Int
}

type ChongduRoleDetail {
  id: ID!
  ct: String
  cuserId: String
  d: Int
  modeldetailId: String
  mt: String
  muserId: String
  roleId: String
  status: Int
}

type ChongduRoleDetailConnection {
  pageInfo: PageInfo!
  edges: [ChongduRoleDetailEdge]!
  aggregate: AggregateChongduRoleDetail!
}

input ChongduRoleDetailCreateInput {
  id: ID
  ct: String
  cuserId: String
  d: Int
  modeldetailId: String
  mt: String
  muserId: String
  roleId: String
  status: Int
}

type ChongduRoleDetailEdge {
  node: ChongduRoleDetail!
  cursor: String!
}

enum ChongduRoleDetailOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  modeldetailId_ASC
  modeldetailId_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  roleId_ASC
  roleId_DESC
  status_ASC
  status_DESC
}

type ChongduRoleDetailPreviousValues {
  id: ID!
  ct: String
  cuserId: String
  d: Int
  modeldetailId: String
  mt: String
  muserId: String
  roleId: String
  status: Int
}

type ChongduRoleDetailSubscriptionPayload {
  mutation: MutationType!
  node: ChongduRoleDetail
  updatedFields: [String!]
  previousValues: ChongduRoleDetailPreviousValues
}

input ChongduRoleDetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduRoleDetailWhereInput
  AND: [ChongduRoleDetailSubscriptionWhereInput!]
  OR: [ChongduRoleDetailSubscriptionWhereInput!]
  NOT: [ChongduRoleDetailSubscriptionWhereInput!]
}

input ChongduRoleDetailUpdateInput {
  ct: String
  cuserId: String
  d: Int
  modeldetailId: String
  mt: String
  muserId: String
  roleId: String
  status: Int
}

input ChongduRoleDetailUpdateManyMutationInput {
  ct: String
  cuserId: String
  d: Int
  modeldetailId: String
  mt: String
  muserId: String
  roleId: String
  status: Int
}

input ChongduRoleDetailWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  modeldetailId: String
  modeldetailId_not: String
  modeldetailId_in: [String!]
  modeldetailId_not_in: [String!]
  modeldetailId_lt: String
  modeldetailId_lte: String
  modeldetailId_gt: String
  modeldetailId_gte: String
  modeldetailId_contains: String
  modeldetailId_not_contains: String
  modeldetailId_starts_with: String
  modeldetailId_not_starts_with: String
  modeldetailId_ends_with: String
  modeldetailId_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  roleId: String
  roleId_not: String
  roleId_in: [String!]
  roleId_not_in: [String!]
  roleId_lt: String
  roleId_lte: String
  roleId_gt: String
  roleId_gte: String
  roleId_contains: String
  roleId_not_contains: String
  roleId_starts_with: String
  roleId_not_starts_with: String
  roleId_ends_with: String
  roleId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  AND: [ChongduRoleDetailWhereInput!]
  OR: [ChongduRoleDetailWhereInput!]
  NOT: [ChongduRoleDetailWhereInput!]
}

input ChongduRoleDetailWhereUniqueInput {
  id: ID
}

type ChongduRoleEdge {
  node: ChongduRole!
  cursor: String!
}

type ChongduRoleGroup {
  id: Int!
  userId: String
  roleName: String
  cuserId: String
  muserId: String
}

type ChongduRoleGroupConnection {
  pageInfo: PageInfo!
  edges: [ChongduRoleGroupEdge]!
  aggregate: AggregateChongduRoleGroup!
}

input ChongduRoleGroupCreateInput {
  id: Int
  userId: String
  roleName: String
  cuserId: String
  muserId: String
}

input ChongduRoleGroupCreateOneInput {
  create: ChongduRoleGroupCreateInput
  connect: ChongduRoleGroupWhereUniqueInput
}

type ChongduRoleGroupEdge {
  node: ChongduRoleGroup!
  cursor: String!
}

enum ChongduRoleGroupOrderByInput {
  id_ASC
  id_DESC
  userId_ASC
  userId_DESC
  roleName_ASC
  roleName_DESC
  cuserId_ASC
  cuserId_DESC
  muserId_ASC
  muserId_DESC
}

type ChongduRoleGroupPreviousValues {
  id: Int!
  userId: String
  roleName: String
  cuserId: String
  muserId: String
}

type ChongduRoleGroupSubscriptionPayload {
  mutation: MutationType!
  node: ChongduRoleGroup
  updatedFields: [String!]
  previousValues: ChongduRoleGroupPreviousValues
}

input ChongduRoleGroupSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduRoleGroupWhereInput
  AND: [ChongduRoleGroupSubscriptionWhereInput!]
  OR: [ChongduRoleGroupSubscriptionWhereInput!]
  NOT: [ChongduRoleGroupSubscriptionWhereInput!]
}

input ChongduRoleGroupUpdateDataInput {
  userId: String
  roleName: String
  cuserId: String
  muserId: String
}

input ChongduRoleGroupUpdateInput {
  userId: String
  roleName: String
  cuserId: String
  muserId: String
}

input ChongduRoleGroupUpdateManyMutationInput {
  userId: String
  roleName: String
  cuserId: String
  muserId: String
}

input ChongduRoleGroupUpdateOneInput {
  create: ChongduRoleGroupCreateInput
  update: ChongduRoleGroupUpdateDataInput
  upsert: ChongduRoleGroupUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduRoleGroupWhereUniqueInput
}

input ChongduRoleGroupUpsertNestedInput {
  update: ChongduRoleGroupUpdateDataInput!
  create: ChongduRoleGroupCreateInput!
}

input ChongduRoleGroupWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  roleName: String
  roleName_not: String
  roleName_in: [String!]
  roleName_not_in: [String!]
  roleName_lt: String
  roleName_lte: String
  roleName_gt: String
  roleName_gte: String
  roleName_contains: String
  roleName_not_contains: String
  roleName_starts_with: String
  roleName_not_starts_with: String
  roleName_ends_with: String
  roleName_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  AND: [ChongduRoleGroupWhereInput!]
  OR: [ChongduRoleGroupWhereInput!]
  NOT: [ChongduRoleGroupWhereInput!]
}

input ChongduRoleGroupWhereUniqueInput {
  id: Int
}

type ChongduRoleMenu {
  id: Int!
  menuName: String
  menuUrl: String
  menuChildrenId: String
  roleGroupId: ChongduRoleGroup
}

type ChongduRoleMenuChildren {
  id: Int!
  menuId: ChongduRoleMenu
  action: String
  authName: String
  menuUrlName: String
}

type ChongduRoleMenuChildrenConnection {
  pageInfo: PageInfo!
  edges: [ChongduRoleMenuChildrenEdge]!
  aggregate: AggregateChongduRoleMenuChildren!
}

input ChongduRoleMenuChildrenCreateInput {
  id: Int
  menuId: ChongduRoleMenuCreateOneInput
  action: String
  authName: String
  menuUrlName: String
}

type ChongduRoleMenuChildrenEdge {
  node: ChongduRoleMenuChildren!
  cursor: String!
}

enum ChongduRoleMenuChildrenOrderByInput {
  id_ASC
  id_DESC
  action_ASC
  action_DESC
  authName_ASC
  authName_DESC
  menuUrlName_ASC
  menuUrlName_DESC
}

type ChongduRoleMenuChildrenPreviousValues {
  id: Int!
  action: String
  authName: String
  menuUrlName: String
}

type ChongduRoleMenuChildrenSubscriptionPayload {
  mutation: MutationType!
  node: ChongduRoleMenuChildren
  updatedFields: [String!]
  previousValues: ChongduRoleMenuChildrenPreviousValues
}

input ChongduRoleMenuChildrenSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduRoleMenuChildrenWhereInput
  AND: [ChongduRoleMenuChildrenSubscriptionWhereInput!]
  OR: [ChongduRoleMenuChildrenSubscriptionWhereInput!]
  NOT: [ChongduRoleMenuChildrenSubscriptionWhereInput!]
}

input ChongduRoleMenuChildrenUpdateInput {
  menuId: ChongduRoleMenuUpdateOneInput
  action: String
  authName: String
  menuUrlName: String
}

input ChongduRoleMenuChildrenUpdateManyMutationInput {
  action: String
  authName: String
  menuUrlName: String
}

input ChongduRoleMenuChildrenWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  menuId: ChongduRoleMenuWhereInput
  action: String
  action_not: String
  action_in: [String!]
  action_not_in: [String!]
  action_lt: String
  action_lte: String
  action_gt: String
  action_gte: String
  action_contains: String
  action_not_contains: String
  action_starts_with: String
  action_not_starts_with: String
  action_ends_with: String
  action_not_ends_with: String
  authName: String
  authName_not: String
  authName_in: [String!]
  authName_not_in: [String!]
  authName_lt: String
  authName_lte: String
  authName_gt: String
  authName_gte: String
  authName_contains: String
  authName_not_contains: String
  authName_starts_with: String
  authName_not_starts_with: String
  authName_ends_with: String
  authName_not_ends_with: String
  menuUrlName: String
  menuUrlName_not: String
  menuUrlName_in: [String!]
  menuUrlName_not_in: [String!]
  menuUrlName_lt: String
  menuUrlName_lte: String
  menuUrlName_gt: String
  menuUrlName_gte: String
  menuUrlName_contains: String
  menuUrlName_not_contains: String
  menuUrlName_starts_with: String
  menuUrlName_not_starts_with: String
  menuUrlName_ends_with: String
  menuUrlName_not_ends_with: String
  AND: [ChongduRoleMenuChildrenWhereInput!]
  OR: [ChongduRoleMenuChildrenWhereInput!]
  NOT: [ChongduRoleMenuChildrenWhereInput!]
}

input ChongduRoleMenuChildrenWhereUniqueInput {
  id: Int
}

type ChongduRoleMenuConnection {
  pageInfo: PageInfo!
  edges: [ChongduRoleMenuEdge]!
  aggregate: AggregateChongduRoleMenu!
}

input ChongduRoleMenuCreateInput {
  id: Int
  menuName: String
  menuUrl: String
  menuChildrenId: String
  roleGroupId: ChongduRoleGroupCreateOneInput
}

input ChongduRoleMenuCreateOneInput {
  create: ChongduRoleMenuCreateInput
  connect: ChongduRoleMenuWhereUniqueInput
}

type ChongduRoleMenuEdge {
  node: ChongduRoleMenu!
  cursor: String!
}

enum ChongduRoleMenuOrderByInput {
  id_ASC
  id_DESC
  menuName_ASC
  menuName_DESC
  menuUrl_ASC
  menuUrl_DESC
  menuChildrenId_ASC
  menuChildrenId_DESC
}

type ChongduRoleMenuPreviousValues {
  id: Int!
  menuName: String
  menuUrl: String
  menuChildrenId: String
}

type ChongduRoleMenuSubscriptionPayload {
  mutation: MutationType!
  node: ChongduRoleMenu
  updatedFields: [String!]
  previousValues: ChongduRoleMenuPreviousValues
}

input ChongduRoleMenuSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduRoleMenuWhereInput
  AND: [ChongduRoleMenuSubscriptionWhereInput!]
  OR: [ChongduRoleMenuSubscriptionWhereInput!]
  NOT: [ChongduRoleMenuSubscriptionWhereInput!]
}

input ChongduRoleMenuUpdateDataInput {
  menuName: String
  menuUrl: String
  menuChildrenId: String
  roleGroupId: ChongduRoleGroupUpdateOneInput
}

input ChongduRoleMenuUpdateInput {
  menuName: String
  menuUrl: String
  menuChildrenId: String
  roleGroupId: ChongduRoleGroupUpdateOneInput
}

input ChongduRoleMenuUpdateManyMutationInput {
  menuName: String
  menuUrl: String
  menuChildrenId: String
}

input ChongduRoleMenuUpdateOneInput {
  create: ChongduRoleMenuCreateInput
  update: ChongduRoleMenuUpdateDataInput
  upsert: ChongduRoleMenuUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduRoleMenuWhereUniqueInput
}

input ChongduRoleMenuUpsertNestedInput {
  update: ChongduRoleMenuUpdateDataInput!
  create: ChongduRoleMenuCreateInput!
}

input ChongduRoleMenuWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  menuName: String
  menuName_not: String
  menuName_in: [String!]
  menuName_not_in: [String!]
  menuName_lt: String
  menuName_lte: String
  menuName_gt: String
  menuName_gte: String
  menuName_contains: String
  menuName_not_contains: String
  menuName_starts_with: String
  menuName_not_starts_with: String
  menuName_ends_with: String
  menuName_not_ends_with: String
  menuUrl: String
  menuUrl_not: String
  menuUrl_in: [String!]
  menuUrl_not_in: [String!]
  menuUrl_lt: String
  menuUrl_lte: String
  menuUrl_gt: String
  menuUrl_gte: String
  menuUrl_contains: String
  menuUrl_not_contains: String
  menuUrl_starts_with: String
  menuUrl_not_starts_with: String
  menuUrl_ends_with: String
  menuUrl_not_ends_with: String
  menuChildrenId: String
  menuChildrenId_not: String
  menuChildrenId_in: [String!]
  menuChildrenId_not_in: [String!]
  menuChildrenId_lt: String
  menuChildrenId_lte: String
  menuChildrenId_gt: String
  menuChildrenId_gte: String
  menuChildrenId_contains: String
  menuChildrenId_not_contains: String
  menuChildrenId_starts_with: String
  menuChildrenId_not_starts_with: String
  menuChildrenId_ends_with: String
  menuChildrenId_not_ends_with: String
  roleGroupId: ChongduRoleGroupWhereInput
  AND: [ChongduRoleMenuWhereInput!]
  OR: [ChongduRoleMenuWhereInput!]
  NOT: [ChongduRoleMenuWhereInput!]
}

input ChongduRoleMenuWhereUniqueInput {
  id: Int
}

enum ChongduRoleOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  name_ASC
  name_DESC
  status_ASC
  status_DESC
}

type ChongduRolePreviousValues {
  id: ID!
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  name: String
  status: Int
}

type ChongduRoleSubscriptionPayload {
  mutation: MutationType!
  node: ChongduRole
  updatedFields: [String!]
  previousValues: ChongduRolePreviousValues
}

input ChongduRoleSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduRoleWhereInput
  AND: [ChongduRoleSubscriptionWhereInput!]
  OR: [ChongduRoleSubscriptionWhereInput!]
  NOT: [ChongduRoleSubscriptionWhereInput!]
}

input ChongduRoleUpdateInput {
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  name: String
  status: Int
}

input ChongduRoleUpdateManyMutationInput {
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  name: String
  status: Int
}

input ChongduRoleWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  AND: [ChongduRoleWhereInput!]
  OR: [ChongduRoleWhereInput!]
  NOT: [ChongduRoleWhereInput!]
}

input ChongduRoleWhereUniqueInput {
  id: ID
}

type ChongduSearchthink {
  id: Int!
  ct: String
  d: Int
  hot: Int
  mt: String
  name: String
  sort: Int
  status: Int
}

type ChongduSearchthinkConnection {
  pageInfo: PageInfo!
  edges: [ChongduSearchthinkEdge]!
  aggregate: AggregateChongduSearchthink!
}

input ChongduSearchthinkCreateInput {
  id: Int
  ct: String
  d: Int
  hot: Int
  mt: String
  name: String
  sort: Int
  status: Int
}

type ChongduSearchthinkEdge {
  node: ChongduSearchthink!
  cursor: String!
}

enum ChongduSearchthinkOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  hot_ASC
  hot_DESC
  mt_ASC
  mt_DESC
  name_ASC
  name_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
}

type ChongduSearchthinkPreviousValues {
  id: Int!
  ct: String
  d: Int
  hot: Int
  mt: String
  name: String
  sort: Int
  status: Int
}

type ChongduSearchthinkSubscriptionPayload {
  mutation: MutationType!
  node: ChongduSearchthink
  updatedFields: [String!]
  previousValues: ChongduSearchthinkPreviousValues
}

input ChongduSearchthinkSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduSearchthinkWhereInput
  AND: [ChongduSearchthinkSubscriptionWhereInput!]
  OR: [ChongduSearchthinkSubscriptionWhereInput!]
  NOT: [ChongduSearchthinkSubscriptionWhereInput!]
}

input ChongduSearchthinkUpdateInput {
  ct: String
  d: Int
  hot: Int
  mt: String
  name: String
  sort: Int
  status: Int
}

input ChongduSearchthinkUpdateManyMutationInput {
  ct: String
  d: Int
  hot: Int
  mt: String
  name: String
  sort: Int
  status: Int
}

input ChongduSearchthinkWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  hot: Int
  hot_not: Int
  hot_in: [Int!]
  hot_not_in: [Int!]
  hot_lt: Int
  hot_lte: Int
  hot_gt: Int
  hot_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  AND: [ChongduSearchthinkWhereInput!]
  OR: [ChongduSearchthinkWhereInput!]
  NOT: [ChongduSearchthinkWhereInput!]
}

input ChongduSearchthinkWhereUniqueInput {
  id: Int
}

type ChongduService {
  id: ID!
  area: String
  browser: Int
  content: String
  ct: String
  d: Int
  endtime: String
  icon: String
  merchantId: ChongduMerchant
  mt: String
  name: String
  price: Float
  sale: Int
  shareCount: Int
  starttime: String
  status: Int
  title: String
  typeId: ChongduServiceType
  userId: ChongduUser
}

type ChongduServiceAuthentdetail {
  id: Int!
  audit: Int
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  serviceId: String
  sort: Int
  status: Int
  title: String
  type: Int
  userid: String
}

type ChongduServiceAuthentdetailConnection {
  pageInfo: PageInfo!
  edges: [ChongduServiceAuthentdetailEdge]!
  aggregate: AggregateChongduServiceAuthentdetail!
}

input ChongduServiceAuthentdetailCreateInput {
  id: Int
  audit: Int
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  serviceId: String
  sort: Int
  status: Int
  title: String
  type: Int
  userid: String
}

type ChongduServiceAuthentdetailEdge {
  node: ChongduServiceAuthentdetail!
  cursor: String!
}

enum ChongduServiceAuthentdetailOrderByInput {
  id_ASC
  id_DESC
  audit_ASC
  audit_DESC
  audittime_ASC
  audittime_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  cuserid_ASC
  cuserid_DESC
  d_ASC
  d_DESC
  mt_ASC
  mt_DESC
  muserid_ASC
  muserid_DESC
  serviceId_ASC
  serviceId_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
  type_ASC
  type_DESC
  userid_ASC
  userid_DESC
}

type ChongduServiceAuthentdetailPreviousValues {
  id: Int!
  audit: Int
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  serviceId: String
  sort: Int
  status: Int
  title: String
  type: Int
  userid: String
}

type ChongduServiceAuthentdetailSubscriptionPayload {
  mutation: MutationType!
  node: ChongduServiceAuthentdetail
  updatedFields: [String!]
  previousValues: ChongduServiceAuthentdetailPreviousValues
}

input ChongduServiceAuthentdetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduServiceAuthentdetailWhereInput
  AND: [ChongduServiceAuthentdetailSubscriptionWhereInput!]
  OR: [ChongduServiceAuthentdetailSubscriptionWhereInput!]
  NOT: [ChongduServiceAuthentdetailSubscriptionWhereInput!]
}

input ChongduServiceAuthentdetailUpdateInput {
  audit: Int
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  serviceId: String
  sort: Int
  status: Int
  title: String
  type: Int
  userid: String
}

input ChongduServiceAuthentdetailUpdateManyMutationInput {
  audit: Int
  audittime: String
  content: String
  ct: String
  cuserid: String
  d: Int
  mt: String
  muserid: String
  serviceId: String
  sort: Int
  status: Int
  title: String
  type: Int
  userid: String
}

input ChongduServiceAuthentdetailWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  audit: Int
  audit_not: Int
  audit_in: [Int!]
  audit_not_in: [Int!]
  audit_lt: Int
  audit_lte: Int
  audit_gt: Int
  audit_gte: Int
  audittime: String
  audittime_not: String
  audittime_in: [String!]
  audittime_not_in: [String!]
  audittime_lt: String
  audittime_lte: String
  audittime_gt: String
  audittime_gte: String
  audittime_contains: String
  audittime_not_contains: String
  audittime_starts_with: String
  audittime_not_starts_with: String
  audittime_ends_with: String
  audittime_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserid: String
  cuserid_not: String
  cuserid_in: [String!]
  cuserid_not_in: [String!]
  cuserid_lt: String
  cuserid_lte: String
  cuserid_gt: String
  cuserid_gte: String
  cuserid_contains: String
  cuserid_not_contains: String
  cuserid_starts_with: String
  cuserid_not_starts_with: String
  cuserid_ends_with: String
  cuserid_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserid: String
  muserid_not: String
  muserid_in: [String!]
  muserid_not_in: [String!]
  muserid_lt: String
  muserid_lte: String
  muserid_gt: String
  muserid_gte: String
  muserid_contains: String
  muserid_not_contains: String
  muserid_starts_with: String
  muserid_not_starts_with: String
  muserid_ends_with: String
  muserid_not_ends_with: String
  serviceId: String
  serviceId_not: String
  serviceId_in: [String!]
  serviceId_not_in: [String!]
  serviceId_lt: String
  serviceId_lte: String
  serviceId_gt: String
  serviceId_gte: String
  serviceId_contains: String
  serviceId_not_contains: String
  serviceId_starts_with: String
  serviceId_not_starts_with: String
  serviceId_ends_with: String
  serviceId_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userid: String
  userid_not: String
  userid_in: [String!]
  userid_not_in: [String!]
  userid_lt: String
  userid_lte: String
  userid_gt: String
  userid_gte: String
  userid_contains: String
  userid_not_contains: String
  userid_starts_with: String
  userid_not_starts_with: String
  userid_ends_with: String
  userid_not_ends_with: String
  AND: [ChongduServiceAuthentdetailWhereInput!]
  OR: [ChongduServiceAuthentdetailWhereInput!]
  NOT: [ChongduServiceAuthentdetailWhereInput!]
}

input ChongduServiceAuthentdetailWhereUniqueInput {
  id: Int
}

type ChongduServiceauthentLog {
  id: Int!
  serviceauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdmin
  ct: String
  d: Int
}

type ChongduServiceauthentLogConnection {
  pageInfo: PageInfo!
  edges: [ChongduServiceauthentLogEdge]!
  aggregate: AggregateChongduServiceauthentLog!
}

input ChongduServiceauthentLogCreateInput {
  id: Int
  serviceauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdminCreateOneInput
  ct: String
  d: Int
}

type ChongduServiceauthentLogEdge {
  node: ChongduServiceauthentLog!
  cursor: String!
}

enum ChongduServiceauthentLogOrderByInput {
  id_ASC
  id_DESC
  serviceauthentId_ASC
  serviceauthentId_DESC
  status_ASC
  status_DESC
  remark_ASC
  remark_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
}

type ChongduServiceauthentLogPreviousValues {
  id: Int!
  serviceauthentId: String
  status: Int
  remark: String
  ct: String
  d: Int
}

type ChongduServiceauthentLogSubscriptionPayload {
  mutation: MutationType!
  node: ChongduServiceauthentLog
  updatedFields: [String!]
  previousValues: ChongduServiceauthentLogPreviousValues
}

input ChongduServiceauthentLogSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduServiceauthentLogWhereInput
  AND: [ChongduServiceauthentLogSubscriptionWhereInput!]
  OR: [ChongduServiceauthentLogSubscriptionWhereInput!]
  NOT: [ChongduServiceauthentLogSubscriptionWhereInput!]
}

input ChongduServiceauthentLogUpdateInput {
  serviceauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdminUpdateOneInput
  ct: String
  d: Int
}

input ChongduServiceauthentLogUpdateManyMutationInput {
  serviceauthentId: String
  status: Int
  remark: String
  ct: String
  d: Int
}

input ChongduServiceauthentLogWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  serviceauthentId: String
  serviceauthentId_not: String
  serviceauthentId_in: [String!]
  serviceauthentId_not_in: [String!]
  serviceauthentId_lt: String
  serviceauthentId_lte: String
  serviceauthentId_gt: String
  serviceauthentId_gte: String
  serviceauthentId_contains: String
  serviceauthentId_not_contains: String
  serviceauthentId_starts_with: String
  serviceauthentId_not_starts_with: String
  serviceauthentId_ends_with: String
  serviceauthentId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  remark: String
  remark_not: String
  remark_in: [String!]
  remark_not_in: [String!]
  remark_lt: String
  remark_lte: String
  remark_gt: String
  remark_gte: String
  remark_contains: String
  remark_not_contains: String
  remark_starts_with: String
  remark_not_starts_with: String
  remark_ends_with: String
  remark_not_ends_with: String
  cadminId: ChongduAdminWhereInput
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  AND: [ChongduServiceauthentLogWhereInput!]
  OR: [ChongduServiceauthentLogWhereInput!]
  NOT: [ChongduServiceauthentLogWhereInput!]
}

input ChongduServiceauthentLogWhereUniqueInput {
  id: Int
}

type ChongduServiceConnection {
  pageInfo: PageInfo!
  edges: [ChongduServiceEdge]!
  aggregate: AggregateChongduService!
}

input ChongduServiceCreateInput {
  id: ID
  area: String
  browser: Int
  content: String
  ct: String
  d: Int
  endtime: String
  icon: String
  merchantId: ChongduMerchantCreateOneInput
  mt: String
  name: String
  price: Float
  sale: Int
  shareCount: Int
  starttime: String
  status: Int
  title: String
  typeId: ChongduServiceTypeCreateOneInput
  userId: ChongduUserCreateOneInput
}

type ChongduServiceEdge {
  node: ChongduService!
  cursor: String!
}

type ChongduServiceImg {
  id: ID!
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  serviceId: String
  status: Int
  type: Int
  userId: String
}

type ChongduServiceImgConnection {
  pageInfo: PageInfo!
  edges: [ChongduServiceImgEdge]!
  aggregate: AggregateChongduServiceImg!
}

input ChongduServiceImgCreateInput {
  id: ID
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  serviceId: String
  status: Int
  type: Int
  userId: String
}

type ChongduServiceImgEdge {
  node: ChongduServiceImg!
  cursor: String!
}

enum ChongduServiceImgOrderByInput {
  id_ASC
  id_DESC
  addr_ASC
  addr_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  imgType_ASC
  imgType_DESC
  mt_ASC
  mt_DESC
  serviceId_ASC
  serviceId_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduServiceImgPreviousValues {
  id: ID!
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  serviceId: String
  status: Int
  type: Int
  userId: String
}

type ChongduServiceImgSubscriptionPayload {
  mutation: MutationType!
  node: ChongduServiceImg
  updatedFields: [String!]
  previousValues: ChongduServiceImgPreviousValues
}

input ChongduServiceImgSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduServiceImgWhereInput
  AND: [ChongduServiceImgSubscriptionWhereInput!]
  OR: [ChongduServiceImgSubscriptionWhereInput!]
  NOT: [ChongduServiceImgSubscriptionWhereInput!]
}

input ChongduServiceImgUpdateInput {
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  serviceId: String
  status: Int
  type: Int
  userId: String
}

input ChongduServiceImgUpdateManyMutationInput {
  addr: String
  ct: String
  d: Int
  imgType: Int
  mt: String
  serviceId: String
  status: Int
  type: Int
  userId: String
}

input ChongduServiceImgWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  addr: String
  addr_not: String
  addr_in: [String!]
  addr_not_in: [String!]
  addr_lt: String
  addr_lte: String
  addr_gt: String
  addr_gte: String
  addr_contains: String
  addr_not_contains: String
  addr_starts_with: String
  addr_not_starts_with: String
  addr_ends_with: String
  addr_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  imgType: Int
  imgType_not: Int
  imgType_in: [Int!]
  imgType_not_in: [Int!]
  imgType_lt: Int
  imgType_lte: Int
  imgType_gt: Int
  imgType_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  serviceId: String
  serviceId_not: String
  serviceId_in: [String!]
  serviceId_not_in: [String!]
  serviceId_lt: String
  serviceId_lte: String
  serviceId_gt: String
  serviceId_gte: String
  serviceId_contains: String
  serviceId_not_contains: String
  serviceId_starts_with: String
  serviceId_not_starts_with: String
  serviceId_ends_with: String
  serviceId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduServiceImgWhereInput!]
  OR: [ChongduServiceImgWhereInput!]
  NOT: [ChongduServiceImgWhereInput!]
}

input ChongduServiceImgWhereUniqueInput {
  id: ID
}

enum ChongduServiceOrderByInput {
  id_ASC
  id_DESC
  area_ASC
  area_DESC
  browser_ASC
  browser_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  endtime_ASC
  endtime_DESC
  icon_ASC
  icon_DESC
  mt_ASC
  mt_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  sale_ASC
  sale_DESC
  shareCount_ASC
  shareCount_DESC
  starttime_ASC
  starttime_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
}

type ChongduServicePettype {
  id: Int!
  ct: String
  d: Int
  level: Int
  petTypeId: Int
  petTypeName: String
  serviceId: String
}

type ChongduServicePettypeConnection {
  pageInfo: PageInfo!
  edges: [ChongduServicePettypeEdge]!
  aggregate: AggregateChongduServicePettype!
}

input ChongduServicePettypeCreateInput {
  id: Int
  ct: String
  d: Int
  level: Int
  petTypeId: Int
  petTypeName: String
  serviceId: String
}

type ChongduServicePettypeEdge {
  node: ChongduServicePettype!
  cursor: String!
}

enum ChongduServicePettypeOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  level_ASC
  level_DESC
  petTypeId_ASC
  petTypeId_DESC
  petTypeName_ASC
  petTypeName_DESC
  serviceId_ASC
  serviceId_DESC
}

type ChongduServicePettypePreviousValues {
  id: Int!
  ct: String
  d: Int
  level: Int
  petTypeId: Int
  petTypeName: String
  serviceId: String
}

type ChongduServicePettypeSubscriptionPayload {
  mutation: MutationType!
  node: ChongduServicePettype
  updatedFields: [String!]
  previousValues: ChongduServicePettypePreviousValues
}

input ChongduServicePettypeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduServicePettypeWhereInput
  AND: [ChongduServicePettypeSubscriptionWhereInput!]
  OR: [ChongduServicePettypeSubscriptionWhereInput!]
  NOT: [ChongduServicePettypeSubscriptionWhereInput!]
}

input ChongduServicePettypeUpdateInput {
  ct: String
  d: Int
  level: Int
  petTypeId: Int
  petTypeName: String
  serviceId: String
}

input ChongduServicePettypeUpdateManyMutationInput {
  ct: String
  d: Int
  level: Int
  petTypeId: Int
  petTypeName: String
  serviceId: String
}

input ChongduServicePettypeWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  level: Int
  level_not: Int
  level_in: [Int!]
  level_not_in: [Int!]
  level_lt: Int
  level_lte: Int
  level_gt: Int
  level_gte: Int
  petTypeId: Int
  petTypeId_not: Int
  petTypeId_in: [Int!]
  petTypeId_not_in: [Int!]
  petTypeId_lt: Int
  petTypeId_lte: Int
  petTypeId_gt: Int
  petTypeId_gte: Int
  petTypeName: String
  petTypeName_not: String
  petTypeName_in: [String!]
  petTypeName_not_in: [String!]
  petTypeName_lt: String
  petTypeName_lte: String
  petTypeName_gt: String
  petTypeName_gte: String
  petTypeName_contains: String
  petTypeName_not_contains: String
  petTypeName_starts_with: String
  petTypeName_not_starts_with: String
  petTypeName_ends_with: String
  petTypeName_not_ends_with: String
  serviceId: String
  serviceId_not: String
  serviceId_in: [String!]
  serviceId_not_in: [String!]
  serviceId_lt: String
  serviceId_lte: String
  serviceId_gt: String
  serviceId_gte: String
  serviceId_contains: String
  serviceId_not_contains: String
  serviceId_starts_with: String
  serviceId_not_starts_with: String
  serviceId_ends_with: String
  serviceId_not_ends_with: String
  AND: [ChongduServicePettypeWhereInput!]
  OR: [ChongduServicePettypeWhereInput!]
  NOT: [ChongduServicePettypeWhereInput!]
}

input ChongduServicePettypeWhereUniqueInput {
  id: Int
}

type ChongduServicePreviousValues {
  id: ID!
  area: String
  browser: Int
  content: String
  ct: String
  d: Int
  endtime: String
  icon: String
  mt: String
  name: String
  price: Float
  sale: Int
  shareCount: Int
  starttime: String
  status: Int
  title: String
}

type ChongduServiceRecommend {
  id: Int!
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  s: Int
  serviceId: String
  sort: Int
  starttime: String
  userid: String
  username: String
}

type ChongduServiceRecommendConnection {
  pageInfo: PageInfo!
  edges: [ChongduServiceRecommendEdge]!
  aggregate: AggregateChongduServiceRecommend!
}

input ChongduServiceRecommendCreateInput {
  id: Int
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  s: Int
  serviceId: String
  sort: Int
  starttime: String
  userid: String
  username: String
}

type ChongduServiceRecommendEdge {
  node: ChongduServiceRecommend!
  cursor: String!
}

enum ChongduServiceRecommendOrderByInput {
  id_ASC
  id_DESC
  citycode_ASC
  citycode_DESC
  ct_ASC
  ct_DESC
  cuserid_ASC
  cuserid_DESC
  d_ASC
  d_DESC
  deviceid_ASC
  deviceid_DESC
  devicename_ASC
  devicename_DESC
  devicetype_ASC
  devicetype_DESC
  endtime_ASC
  endtime_DESC
  mt_ASC
  mt_DESC
  muserid_ASC
  muserid_DESC
  name_ASC
  name_DESC
  s_ASC
  s_DESC
  serviceId_ASC
  serviceId_DESC
  sort_ASC
  sort_DESC
  starttime_ASC
  starttime_DESC
  userid_ASC
  userid_DESC
  username_ASC
  username_DESC
}

type ChongduServiceRecommendPreviousValues {
  id: Int!
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  s: Int
  serviceId: String
  sort: Int
  starttime: String
  userid: String
  username: String
}

type ChongduServiceRecommendSubscriptionPayload {
  mutation: MutationType!
  node: ChongduServiceRecommend
  updatedFields: [String!]
  previousValues: ChongduServiceRecommendPreviousValues
}

input ChongduServiceRecommendSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduServiceRecommendWhereInput
  AND: [ChongduServiceRecommendSubscriptionWhereInput!]
  OR: [ChongduServiceRecommendSubscriptionWhereInput!]
  NOT: [ChongduServiceRecommendSubscriptionWhereInput!]
}

input ChongduServiceRecommendUpdateInput {
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  s: Int
  serviceId: String
  sort: Int
  starttime: String
  userid: String
  username: String
}

input ChongduServiceRecommendUpdateManyMutationInput {
  citycode: String
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  endtime: String
  mt: String
  muserid: String
  name: String
  s: Int
  serviceId: String
  sort: Int
  starttime: String
  userid: String
  username: String
}

input ChongduServiceRecommendWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  citycode: String
  citycode_not: String
  citycode_in: [String!]
  citycode_not_in: [String!]
  citycode_lt: String
  citycode_lte: String
  citycode_gt: String
  citycode_gte: String
  citycode_contains: String
  citycode_not_contains: String
  citycode_starts_with: String
  citycode_not_starts_with: String
  citycode_ends_with: String
  citycode_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserid: String
  cuserid_not: String
  cuserid_in: [String!]
  cuserid_not_in: [String!]
  cuserid_lt: String
  cuserid_lte: String
  cuserid_gt: String
  cuserid_gte: String
  cuserid_contains: String
  cuserid_not_contains: String
  cuserid_starts_with: String
  cuserid_not_starts_with: String
  cuserid_ends_with: String
  cuserid_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  deviceid: String
  deviceid_not: String
  deviceid_in: [String!]
  deviceid_not_in: [String!]
  deviceid_lt: String
  deviceid_lte: String
  deviceid_gt: String
  deviceid_gte: String
  deviceid_contains: String
  deviceid_not_contains: String
  deviceid_starts_with: String
  deviceid_not_starts_with: String
  deviceid_ends_with: String
  deviceid_not_ends_with: String
  devicename: String
  devicename_not: String
  devicename_in: [String!]
  devicename_not_in: [String!]
  devicename_lt: String
  devicename_lte: String
  devicename_gt: String
  devicename_gte: String
  devicename_contains: String
  devicename_not_contains: String
  devicename_starts_with: String
  devicename_not_starts_with: String
  devicename_ends_with: String
  devicename_not_ends_with: String
  devicetype: Int
  devicetype_not: Int
  devicetype_in: [Int!]
  devicetype_not_in: [Int!]
  devicetype_lt: Int
  devicetype_lte: Int
  devicetype_gt: Int
  devicetype_gte: Int
  endtime: String
  endtime_not: String
  endtime_in: [String!]
  endtime_not_in: [String!]
  endtime_lt: String
  endtime_lte: String
  endtime_gt: String
  endtime_gte: String
  endtime_contains: String
  endtime_not_contains: String
  endtime_starts_with: String
  endtime_not_starts_with: String
  endtime_ends_with: String
  endtime_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserid: String
  muserid_not: String
  muserid_in: [String!]
  muserid_not_in: [String!]
  muserid_lt: String
  muserid_lte: String
  muserid_gt: String
  muserid_gte: String
  muserid_contains: String
  muserid_not_contains: String
  muserid_starts_with: String
  muserid_not_starts_with: String
  muserid_ends_with: String
  muserid_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  s: Int
  s_not: Int
  s_in: [Int!]
  s_not_in: [Int!]
  s_lt: Int
  s_lte: Int
  s_gt: Int
  s_gte: Int
  serviceId: String
  serviceId_not: String
  serviceId_in: [String!]
  serviceId_not_in: [String!]
  serviceId_lt: String
  serviceId_lte: String
  serviceId_gt: String
  serviceId_gte: String
  serviceId_contains: String
  serviceId_not_contains: String
  serviceId_starts_with: String
  serviceId_not_starts_with: String
  serviceId_ends_with: String
  serviceId_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  starttime: String
  starttime_not: String
  starttime_in: [String!]
  starttime_not_in: [String!]
  starttime_lt: String
  starttime_lte: String
  starttime_gt: String
  starttime_gte: String
  starttime_contains: String
  starttime_not_contains: String
  starttime_starts_with: String
  starttime_not_starts_with: String
  starttime_ends_with: String
  starttime_not_ends_with: String
  userid: String
  userid_not: String
  userid_in: [String!]
  userid_not_in: [String!]
  userid_lt: String
  userid_lte: String
  userid_gt: String
  userid_gte: String
  userid_contains: String
  userid_not_contains: String
  userid_starts_with: String
  userid_not_starts_with: String
  userid_ends_with: String
  userid_not_ends_with: String
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  AND: [ChongduServiceRecommendWhereInput!]
  OR: [ChongduServiceRecommendWhereInput!]
  NOT: [ChongduServiceRecommendWhereInput!]
}

input ChongduServiceRecommendWhereUniqueInput {
  id: Int
}

type ChongduServiceSubscriptionPayload {
  mutation: MutationType!
  node: ChongduService
  updatedFields: [String!]
  previousValues: ChongduServicePreviousValues
}

input ChongduServiceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduServiceWhereInput
  AND: [ChongduServiceSubscriptionWhereInput!]
  OR: [ChongduServiceSubscriptionWhereInput!]
  NOT: [ChongduServiceSubscriptionWhereInput!]
}

type ChongduServiceType {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pid: Int
  sort: Int
  status: Int
}

type ChongduServiceTypeConnection {
  pageInfo: PageInfo!
  edges: [ChongduServiceTypeEdge]!
  aggregate: AggregateChongduServiceType!
}

input ChongduServiceTypeCreateInput {
  id: Int
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pid: Int
  sort: Int
  status: Int
}

input ChongduServiceTypeCreateOneInput {
  create: ChongduServiceTypeCreateInput
  connect: ChongduServiceTypeWhereUniqueInput
}

type ChongduServiceTypeEdge {
  node: ChongduServiceType!
  cursor: String!
}

enum ChongduServiceTypeOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  img_ASC
  img_DESC
  level_ASC
  level_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  name_ASC
  name_DESC
  pid_ASC
  pid_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
}

type ChongduServiceTypePreviousValues {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pid: Int
  sort: Int
  status: Int
}

type ChongduServiceTypeSubscriptionPayload {
  mutation: MutationType!
  node: ChongduServiceType
  updatedFields: [String!]
  previousValues: ChongduServiceTypePreviousValues
}

input ChongduServiceTypeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduServiceTypeWhereInput
  AND: [ChongduServiceTypeSubscriptionWhereInput!]
  OR: [ChongduServiceTypeSubscriptionWhereInput!]
  NOT: [ChongduServiceTypeSubscriptionWhereInput!]
}

input ChongduServiceTypeUpdateDataInput {
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pid: Int
  sort: Int
  status: Int
}

input ChongduServiceTypeUpdateInput {
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pid: Int
  sort: Int
  status: Int
}

input ChongduServiceTypeUpdateManyMutationInput {
  ct: String
  cuserId: String
  d: Int
  img: String
  level: Int
  mt: String
  muserId: String
  name: String
  pid: Int
  sort: Int
  status: Int
}

input ChongduServiceTypeUpdateOneInput {
  create: ChongduServiceTypeCreateInput
  update: ChongduServiceTypeUpdateDataInput
  upsert: ChongduServiceTypeUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduServiceTypeWhereUniqueInput
}

input ChongduServiceTypeUpsertNestedInput {
  update: ChongduServiceTypeUpdateDataInput!
  create: ChongduServiceTypeCreateInput!
}

input ChongduServiceTypeWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  level: Int
  level_not: Int
  level_in: [Int!]
  level_not_in: [Int!]
  level_lt: Int
  level_lte: Int
  level_gt: Int
  level_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  pid: Int
  pid_not: Int
  pid_in: [Int!]
  pid_not_in: [Int!]
  pid_lt: Int
  pid_lte: Int
  pid_gt: Int
  pid_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  AND: [ChongduServiceTypeWhereInput!]
  OR: [ChongduServiceTypeWhereInput!]
  NOT: [ChongduServiceTypeWhereInput!]
}

input ChongduServiceTypeWhereUniqueInput {
  id: Int
}

input ChongduServiceUpdateInput {
  area: String
  browser: Int
  content: String
  ct: String
  d: Int
  endtime: String
  icon: String
  merchantId: ChongduMerchantUpdateOneInput
  mt: String
  name: String
  price: Float
  sale: Int
  shareCount: Int
  starttime: String
  status: Int
  title: String
  typeId: ChongduServiceTypeUpdateOneInput
  userId: ChongduUserUpdateOneInput
}

input ChongduServiceUpdateManyMutationInput {
  area: String
  browser: Int
  content: String
  ct: String
  d: Int
  endtime: String
  icon: String
  mt: String
  name: String
  price: Float
  sale: Int
  shareCount: Int
  starttime: String
  status: Int
  title: String
}

input ChongduServiceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  area: String
  area_not: String
  area_in: [String!]
  area_not_in: [String!]
  area_lt: String
  area_lte: String
  area_gt: String
  area_gte: String
  area_contains: String
  area_not_contains: String
  area_starts_with: String
  area_not_starts_with: String
  area_ends_with: String
  area_not_ends_with: String
  browser: Int
  browser_not: Int
  browser_in: [Int!]
  browser_not_in: [Int!]
  browser_lt: Int
  browser_lte: Int
  browser_gt: Int
  browser_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  endtime: String
  endtime_not: String
  endtime_in: [String!]
  endtime_not_in: [String!]
  endtime_lt: String
  endtime_lte: String
  endtime_gt: String
  endtime_gte: String
  endtime_contains: String
  endtime_not_contains: String
  endtime_starts_with: String
  endtime_not_starts_with: String
  endtime_ends_with: String
  endtime_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  merchantId: ChongduMerchantWhereInput
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  sale: Int
  sale_not: Int
  sale_in: [Int!]
  sale_not_in: [Int!]
  sale_lt: Int
  sale_lte: Int
  sale_gt: Int
  sale_gte: Int
  shareCount: Int
  shareCount_not: Int
  shareCount_in: [Int!]
  shareCount_not_in: [Int!]
  shareCount_lt: Int
  shareCount_lte: Int
  shareCount_gt: Int
  shareCount_gte: Int
  starttime: String
  starttime_not: String
  starttime_in: [String!]
  starttime_not_in: [String!]
  starttime_lt: String
  starttime_lte: String
  starttime_gt: String
  starttime_gte: String
  starttime_contains: String
  starttime_not_contains: String
  starttime_starts_with: String
  starttime_not_starts_with: String
  starttime_ends_with: String
  starttime_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  typeId: ChongduServiceTypeWhereInput
  userId: ChongduUserWhereInput
  AND: [ChongduServiceWhereInput!]
  OR: [ChongduServiceWhereInput!]
  NOT: [ChongduServiceWhereInput!]
}

input ChongduServiceWhereUniqueInput {
  id: ID
}

type ChongduStat {
  id: ID!
  agentId: String
  citycode: String
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  num: Int
  satus: Int
  sort: Int
  type: Int
}

type ChongduStatConnection {
  pageInfo: PageInfo!
  edges: [ChongduStatEdge]!
  aggregate: AggregateChongduStat!
}

input ChongduStatCreateInput {
  id: ID
  agentId: String
  citycode: String
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  num: Int
  satus: Int
  sort: Int
  type: Int
}

type ChongduStatEdge {
  node: ChongduStat!
  cursor: String!
}

enum ChongduStatOrderByInput {
  id_ASC
  id_DESC
  agentId_ASC
  agentId_DESC
  citycode_ASC
  citycode_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  num_ASC
  num_DESC
  satus_ASC
  satus_DESC
  sort_ASC
  sort_DESC
  type_ASC
  type_DESC
}

type ChongduStatPreviousValues {
  id: ID!
  agentId: String
  citycode: String
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  num: Int
  satus: Int
  sort: Int
  type: Int
}

type ChongduStatSubscriptionPayload {
  mutation: MutationType!
  node: ChongduStat
  updatedFields: [String!]
  previousValues: ChongduStatPreviousValues
}

input ChongduStatSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduStatWhereInput
  AND: [ChongduStatSubscriptionWhereInput!]
  OR: [ChongduStatSubscriptionWhereInput!]
  NOT: [ChongduStatSubscriptionWhereInput!]
}

input ChongduStatUpdateInput {
  agentId: String
  citycode: String
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  num: Int
  satus: Int
  sort: Int
  type: Int
}

input ChongduStatUpdateManyMutationInput {
  agentId: String
  citycode: String
  ct: String
  cuserId: String
  d: Int
  mt: String
  muserId: String
  num: Int
  satus: Int
  sort: Int
  type: Int
}

input ChongduStatWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  agentId: String
  agentId_not: String
  agentId_in: [String!]
  agentId_not_in: [String!]
  agentId_lt: String
  agentId_lte: String
  agentId_gt: String
  agentId_gte: String
  agentId_contains: String
  agentId_not_contains: String
  agentId_starts_with: String
  agentId_not_starts_with: String
  agentId_ends_with: String
  agentId_not_ends_with: String
  citycode: String
  citycode_not: String
  citycode_in: [String!]
  citycode_not_in: [String!]
  citycode_lt: String
  citycode_lte: String
  citycode_gt: String
  citycode_gte: String
  citycode_contains: String
  citycode_not_contains: String
  citycode_starts_with: String
  citycode_not_starts_with: String
  citycode_ends_with: String
  citycode_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  num: Int
  num_not: Int
  num_in: [Int!]
  num_not_in: [Int!]
  num_lt: Int
  num_lte: Int
  num_gt: Int
  num_gte: Int
  satus: Int
  satus_not: Int
  satus_in: [Int!]
  satus_not_in: [Int!]
  satus_lt: Int
  satus_lte: Int
  satus_gt: Int
  satus_gte: Int
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  AND: [ChongduStatWhereInput!]
  OR: [ChongduStatWhereInput!]
  NOT: [ChongduStatWhereInput!]
}

input ChongduStatWhereUniqueInput {
  id: ID
}

type ChongduTag {
  id: Int!
  content: String
  ct: String
  d: Int
  petCardId: Int
  type: Int
  userId: String
  worldId: Int
}

type ChongduTagConnection {
  pageInfo: PageInfo!
  edges: [ChongduTagEdge]!
  aggregate: AggregateChongduTag!
}

input ChongduTagCreateInput {
  id: Int
  content: String
  ct: String
  d: Int
  petCardId: Int
  type: Int
  userId: String
  worldId: Int
}

type ChongduTagDetail {
  id: Int!
  ct: String
  d: Int
  petCardId: Int
  tagId: Int
  worldId: Int
}

type ChongduTagDetailConnection {
  pageInfo: PageInfo!
  edges: [ChongduTagDetailEdge]!
  aggregate: AggregateChongduTagDetail!
}

input ChongduTagDetailCreateInput {
  id: Int
  ct: String
  d: Int
  petCardId: Int
  tagId: Int
  worldId: Int
}

type ChongduTagDetailEdge {
  node: ChongduTagDetail!
  cursor: String!
}

enum ChongduTagDetailOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  petCardId_ASC
  petCardId_DESC
  tagId_ASC
  tagId_DESC
  worldId_ASC
  worldId_DESC
}

type ChongduTagDetailPreviousValues {
  id: Int!
  ct: String
  d: Int
  petCardId: Int
  tagId: Int
  worldId: Int
}

type ChongduTagDetailSubscriptionPayload {
  mutation: MutationType!
  node: ChongduTagDetail
  updatedFields: [String!]
  previousValues: ChongduTagDetailPreviousValues
}

input ChongduTagDetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduTagDetailWhereInput
  AND: [ChongduTagDetailSubscriptionWhereInput!]
  OR: [ChongduTagDetailSubscriptionWhereInput!]
  NOT: [ChongduTagDetailSubscriptionWhereInput!]
}

input ChongduTagDetailUpdateInput {
  ct: String
  d: Int
  petCardId: Int
  tagId: Int
  worldId: Int
}

input ChongduTagDetailUpdateManyMutationInput {
  ct: String
  d: Int
  petCardId: Int
  tagId: Int
  worldId: Int
}

input ChongduTagDetailWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  petCardId: Int
  petCardId_not: Int
  petCardId_in: [Int!]
  petCardId_not_in: [Int!]
  petCardId_lt: Int
  petCardId_lte: Int
  petCardId_gt: Int
  petCardId_gte: Int
  tagId: Int
  tagId_not: Int
  tagId_in: [Int!]
  tagId_not_in: [Int!]
  tagId_lt: Int
  tagId_lte: Int
  tagId_gt: Int
  tagId_gte: Int
  worldId: Int
  worldId_not: Int
  worldId_in: [Int!]
  worldId_not_in: [Int!]
  worldId_lt: Int
  worldId_lte: Int
  worldId_gt: Int
  worldId_gte: Int
  AND: [ChongduTagDetailWhereInput!]
  OR: [ChongduTagDetailWhereInput!]
  NOT: [ChongduTagDetailWhereInput!]
}

input ChongduTagDetailWhereUniqueInput {
  id: Int
}

type ChongduTagEdge {
  node: ChongduTag!
  cursor: String!
}

enum ChongduTagOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  petCardId_ASC
  petCardId_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
  worldId_ASC
  worldId_DESC
}

type ChongduTagPreviousValues {
  id: Int!
  content: String
  ct: String
  d: Int
  petCardId: Int
  type: Int
  userId: String
  worldId: Int
}

type ChongduTagSubscriptionPayload {
  mutation: MutationType!
  node: ChongduTag
  updatedFields: [String!]
  previousValues: ChongduTagPreviousValues
}

input ChongduTagSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduTagWhereInput
  AND: [ChongduTagSubscriptionWhereInput!]
  OR: [ChongduTagSubscriptionWhereInput!]
  NOT: [ChongduTagSubscriptionWhereInput!]
}

input ChongduTagUpdateInput {
  content: String
  ct: String
  d: Int
  petCardId: Int
  type: Int
  userId: String
  worldId: Int
}

input ChongduTagUpdateManyMutationInput {
  content: String
  ct: String
  d: Int
  petCardId: Int
  type: Int
  userId: String
  worldId: Int
}

input ChongduTagWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  petCardId: Int
  petCardId_not: Int
  petCardId_in: [Int!]
  petCardId_not_in: [Int!]
  petCardId_lt: Int
  petCardId_lte: Int
  petCardId_gt: Int
  petCardId_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  worldId: Int
  worldId_not: Int
  worldId_in: [Int!]
  worldId_not_in: [Int!]
  worldId_lt: Int
  worldId_lte: Int
  worldId_gt: Int
  worldId_gte: Int
  AND: [ChongduTagWhereInput!]
  OR: [ChongduTagWhereInput!]
  NOT: [ChongduTagWhereInput!]
}

input ChongduTagWhereUniqueInput {
  id: Int
}

type ChongduTradingArea {
  id: Int!
  pCityCode: Int
  cityCode: String
  cityName: String
  tradingAreaName: String
  latitude: String
  longitude: String
  distance: Float
  cuserId: String
  muserId: String
  ct: String
  mt: String
}

type ChongduTradingAreaConnection {
  pageInfo: PageInfo!
  edges: [ChongduTradingAreaEdge]!
  aggregate: AggregateChongduTradingArea!
}

input ChongduTradingAreaCreateInput {
  id: Int
  pCityCode: Int
  cityCode: String
  cityName: String
  tradingAreaName: String
  latitude: String
  longitude: String
  distance: Float
  cuserId: String
  muserId: String
  ct: String
  mt: String
}

type ChongduTradingAreaEdge {
  node: ChongduTradingArea!
  cursor: String!
}

enum ChongduTradingAreaOrderByInput {
  id_ASC
  id_DESC
  pCityCode_ASC
  pCityCode_DESC
  cityCode_ASC
  cityCode_DESC
  cityName_ASC
  cityName_DESC
  tradingAreaName_ASC
  tradingAreaName_DESC
  latitude_ASC
  latitude_DESC
  longitude_ASC
  longitude_DESC
  distance_ASC
  distance_DESC
  cuserId_ASC
  cuserId_DESC
  muserId_ASC
  muserId_DESC
  ct_ASC
  ct_DESC
  mt_ASC
  mt_DESC
}

type ChongduTradingAreaPreviousValues {
  id: Int!
  pCityCode: Int
  cityCode: String
  cityName: String
  tradingAreaName: String
  latitude: String
  longitude: String
  distance: Float
  cuserId: String
  muserId: String
  ct: String
  mt: String
}

type ChongduTradingAreaSubscriptionPayload {
  mutation: MutationType!
  node: ChongduTradingArea
  updatedFields: [String!]
  previousValues: ChongduTradingAreaPreviousValues
}

input ChongduTradingAreaSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduTradingAreaWhereInput
  AND: [ChongduTradingAreaSubscriptionWhereInput!]
  OR: [ChongduTradingAreaSubscriptionWhereInput!]
  NOT: [ChongduTradingAreaSubscriptionWhereInput!]
}

input ChongduTradingAreaUpdateInput {
  pCityCode: Int
  cityCode: String
  cityName: String
  tradingAreaName: String
  latitude: String
  longitude: String
  distance: Float
  cuserId: String
  muserId: String
  ct: String
  mt: String
}

input ChongduTradingAreaUpdateManyMutationInput {
  pCityCode: Int
  cityCode: String
  cityName: String
  tradingAreaName: String
  latitude: String
  longitude: String
  distance: Float
  cuserId: String
  muserId: String
  ct: String
  mt: String
}

input ChongduTradingAreaWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  pCityCode: Int
  pCityCode_not: Int
  pCityCode_in: [Int!]
  pCityCode_not_in: [Int!]
  pCityCode_lt: Int
  pCityCode_lte: Int
  pCityCode_gt: Int
  pCityCode_gte: Int
  cityCode: String
  cityCode_not: String
  cityCode_in: [String!]
  cityCode_not_in: [String!]
  cityCode_lt: String
  cityCode_lte: String
  cityCode_gt: String
  cityCode_gte: String
  cityCode_contains: String
  cityCode_not_contains: String
  cityCode_starts_with: String
  cityCode_not_starts_with: String
  cityCode_ends_with: String
  cityCode_not_ends_with: String
  cityName: String
  cityName_not: String
  cityName_in: [String!]
  cityName_not_in: [String!]
  cityName_lt: String
  cityName_lte: String
  cityName_gt: String
  cityName_gte: String
  cityName_contains: String
  cityName_not_contains: String
  cityName_starts_with: String
  cityName_not_starts_with: String
  cityName_ends_with: String
  cityName_not_ends_with: String
  tradingAreaName: String
  tradingAreaName_not: String
  tradingAreaName_in: [String!]
  tradingAreaName_not_in: [String!]
  tradingAreaName_lt: String
  tradingAreaName_lte: String
  tradingAreaName_gt: String
  tradingAreaName_gte: String
  tradingAreaName_contains: String
  tradingAreaName_not_contains: String
  tradingAreaName_starts_with: String
  tradingAreaName_not_starts_with: String
  tradingAreaName_ends_with: String
  tradingAreaName_not_ends_with: String
  latitude: String
  latitude_not: String
  latitude_in: [String!]
  latitude_not_in: [String!]
  latitude_lt: String
  latitude_lte: String
  latitude_gt: String
  latitude_gte: String
  latitude_contains: String
  latitude_not_contains: String
  latitude_starts_with: String
  latitude_not_starts_with: String
  latitude_ends_with: String
  latitude_not_ends_with: String
  longitude: String
  longitude_not: String
  longitude_in: [String!]
  longitude_not_in: [String!]
  longitude_lt: String
  longitude_lte: String
  longitude_gt: String
  longitude_gte: String
  longitude_contains: String
  longitude_not_contains: String
  longitude_starts_with: String
  longitude_not_starts_with: String
  longitude_ends_with: String
  longitude_not_ends_with: String
  distance: Float
  distance_not: Float
  distance_in: [Float!]
  distance_not_in: [Float!]
  distance_lt: Float
  distance_lte: Float
  distance_gt: Float
  distance_gte: Float
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  AND: [ChongduTradingAreaWhereInput!]
  OR: [ChongduTradingAreaWhereInput!]
  NOT: [ChongduTradingAreaWhereInput!]
}

input ChongduTradingAreaWhereUniqueInput {
  id: Int
}

type ChongduUser {
  id: ID!
  balance: Float
  ct: String
  d: Int
  hash: String
  icon: String
  ip: String
  isaudit: Int
  isauthent: Int
  lastlogintime: String
  mail: String
  mt: String
  nickname: String
  openidDy: String
  openidQq: String
  openidWx: String
  phone: String
  regeistType: Int
  regtime: String
  salt: String
  sort: Int
  status: Int
  type: Int
  updateBy: String
  username: String
  vip: Int
}

type ChongduUserauthent {
  id: ID!
  authtime: String
  backPhoto: String
  beginTime: String
  birthday: String
  cardAddress: String
  cardNum: String
  citycode: String
  ct: String
  d: Int
  endTime: String
  frontPhoto: String
  handPhoto: String
  nation: String
  realName: String
  sex: Int
  signFrom: String
  status: Int
  userId: ChongduUser
}

type ChongduUserauthentConnection {
  pageInfo: PageInfo!
  edges: [ChongduUserauthentEdge]!
  aggregate: AggregateChongduUserauthent!
}

input ChongduUserauthentCreateInput {
  id: ID
  authtime: String
  backPhoto: String
  beginTime: String
  birthday: String
  cardAddress: String
  cardNum: String
  citycode: String
  ct: String
  d: Int
  endTime: String
  frontPhoto: String
  handPhoto: String
  nation: String
  realName: String
  sex: Int
  signFrom: String
  status: Int
  userId: ChongduUserCreateOneInput
}

type ChongduUserauthentEdge {
  node: ChongduUserauthent!
  cursor: String!
}

type ChongduUserauthentLog {
  id: Int!
  userauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdmin
  ct: String
  d: Int
}

type ChongduUserauthentLogConnection {
  pageInfo: PageInfo!
  edges: [ChongduUserauthentLogEdge]!
  aggregate: AggregateChongduUserauthentLog!
}

input ChongduUserauthentLogCreateInput {
  id: Int
  userauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdminCreateOneInput
  ct: String
  d: Int
}

type ChongduUserauthentLogEdge {
  node: ChongduUserauthentLog!
  cursor: String!
}

enum ChongduUserauthentLogOrderByInput {
  id_ASC
  id_DESC
  userauthentId_ASC
  userauthentId_DESC
  status_ASC
  status_DESC
  remark_ASC
  remark_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
}

type ChongduUserauthentLogPreviousValues {
  id: Int!
  userauthentId: String
  status: Int
  remark: String
  ct: String
  d: Int
}

type ChongduUserauthentLogSubscriptionPayload {
  mutation: MutationType!
  node: ChongduUserauthentLog
  updatedFields: [String!]
  previousValues: ChongduUserauthentLogPreviousValues
}

input ChongduUserauthentLogSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduUserauthentLogWhereInput
  AND: [ChongduUserauthentLogSubscriptionWhereInput!]
  OR: [ChongduUserauthentLogSubscriptionWhereInput!]
  NOT: [ChongduUserauthentLogSubscriptionWhereInput!]
}

input ChongduUserauthentLogUpdateInput {
  userauthentId: String
  status: Int
  remark: String
  cadminId: ChongduAdminUpdateOneInput
  ct: String
  d: Int
}

input ChongduUserauthentLogUpdateManyMutationInput {
  userauthentId: String
  status: Int
  remark: String
  ct: String
  d: Int
}

input ChongduUserauthentLogWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  userauthentId: String
  userauthentId_not: String
  userauthentId_in: [String!]
  userauthentId_not_in: [String!]
  userauthentId_lt: String
  userauthentId_lte: String
  userauthentId_gt: String
  userauthentId_gte: String
  userauthentId_contains: String
  userauthentId_not_contains: String
  userauthentId_starts_with: String
  userauthentId_not_starts_with: String
  userauthentId_ends_with: String
  userauthentId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  remark: String
  remark_not: String
  remark_in: [String!]
  remark_not_in: [String!]
  remark_lt: String
  remark_lte: String
  remark_gt: String
  remark_gte: String
  remark_contains: String
  remark_not_contains: String
  remark_starts_with: String
  remark_not_starts_with: String
  remark_ends_with: String
  remark_not_ends_with: String
  cadminId: ChongduAdminWhereInput
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  AND: [ChongduUserauthentLogWhereInput!]
  OR: [ChongduUserauthentLogWhereInput!]
  NOT: [ChongduUserauthentLogWhereInput!]
}

input ChongduUserauthentLogWhereUniqueInput {
  id: Int
}

enum ChongduUserauthentOrderByInput {
  id_ASC
  id_DESC
  authtime_ASC
  authtime_DESC
  backPhoto_ASC
  backPhoto_DESC
  beginTime_ASC
  beginTime_DESC
  birthday_ASC
  birthday_DESC
  cardAddress_ASC
  cardAddress_DESC
  cardNum_ASC
  cardNum_DESC
  citycode_ASC
  citycode_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  endTime_ASC
  endTime_DESC
  frontPhoto_ASC
  frontPhoto_DESC
  handPhoto_ASC
  handPhoto_DESC
  nation_ASC
  nation_DESC
  realName_ASC
  realName_DESC
  sex_ASC
  sex_DESC
  signFrom_ASC
  signFrom_DESC
  status_ASC
  status_DESC
}

type ChongduUserauthentPreviousValues {
  id: ID!
  authtime: String
  backPhoto: String
  beginTime: String
  birthday: String
  cardAddress: String
  cardNum: String
  citycode: String
  ct: String
  d: Int
  endTime: String
  frontPhoto: String
  handPhoto: String
  nation: String
  realName: String
  sex: Int
  signFrom: String
  status: Int
}

type ChongduUserauthentSubscriptionPayload {
  mutation: MutationType!
  node: ChongduUserauthent
  updatedFields: [String!]
  previousValues: ChongduUserauthentPreviousValues
}

input ChongduUserauthentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduUserauthentWhereInput
  AND: [ChongduUserauthentSubscriptionWhereInput!]
  OR: [ChongduUserauthentSubscriptionWhereInput!]
  NOT: [ChongduUserauthentSubscriptionWhereInput!]
}

input ChongduUserauthentUpdateInput {
  authtime: String
  backPhoto: String
  beginTime: String
  birthday: String
  cardAddress: String
  cardNum: String
  citycode: String
  ct: String
  d: Int
  endTime: String
  frontPhoto: String
  handPhoto: String
  nation: String
  realName: String
  sex: Int
  signFrom: String
  status: Int
  userId: ChongduUserUpdateOneInput
}

input ChongduUserauthentUpdateManyMutationInput {
  authtime: String
  backPhoto: String
  beginTime: String
  birthday: String
  cardAddress: String
  cardNum: String
  citycode: String
  ct: String
  d: Int
  endTime: String
  frontPhoto: String
  handPhoto: String
  nation: String
  realName: String
  sex: Int
  signFrom: String
  status: Int
}

input ChongduUserauthentWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  authtime: String
  authtime_not: String
  authtime_in: [String!]
  authtime_not_in: [String!]
  authtime_lt: String
  authtime_lte: String
  authtime_gt: String
  authtime_gte: String
  authtime_contains: String
  authtime_not_contains: String
  authtime_starts_with: String
  authtime_not_starts_with: String
  authtime_ends_with: String
  authtime_not_ends_with: String
  backPhoto: String
  backPhoto_not: String
  backPhoto_in: [String!]
  backPhoto_not_in: [String!]
  backPhoto_lt: String
  backPhoto_lte: String
  backPhoto_gt: String
  backPhoto_gte: String
  backPhoto_contains: String
  backPhoto_not_contains: String
  backPhoto_starts_with: String
  backPhoto_not_starts_with: String
  backPhoto_ends_with: String
  backPhoto_not_ends_with: String
  beginTime: String
  beginTime_not: String
  beginTime_in: [String!]
  beginTime_not_in: [String!]
  beginTime_lt: String
  beginTime_lte: String
  beginTime_gt: String
  beginTime_gte: String
  beginTime_contains: String
  beginTime_not_contains: String
  beginTime_starts_with: String
  beginTime_not_starts_with: String
  beginTime_ends_with: String
  beginTime_not_ends_with: String
  birthday: String
  birthday_not: String
  birthday_in: [String!]
  birthday_not_in: [String!]
  birthday_lt: String
  birthday_lte: String
  birthday_gt: String
  birthday_gte: String
  birthday_contains: String
  birthday_not_contains: String
  birthday_starts_with: String
  birthday_not_starts_with: String
  birthday_ends_with: String
  birthday_not_ends_with: String
  cardAddress: String
  cardAddress_not: String
  cardAddress_in: [String!]
  cardAddress_not_in: [String!]
  cardAddress_lt: String
  cardAddress_lte: String
  cardAddress_gt: String
  cardAddress_gte: String
  cardAddress_contains: String
  cardAddress_not_contains: String
  cardAddress_starts_with: String
  cardAddress_not_starts_with: String
  cardAddress_ends_with: String
  cardAddress_not_ends_with: String
  cardNum: String
  cardNum_not: String
  cardNum_in: [String!]
  cardNum_not_in: [String!]
  cardNum_lt: String
  cardNum_lte: String
  cardNum_gt: String
  cardNum_gte: String
  cardNum_contains: String
  cardNum_not_contains: String
  cardNum_starts_with: String
  cardNum_not_starts_with: String
  cardNum_ends_with: String
  cardNum_not_ends_with: String
  citycode: String
  citycode_not: String
  citycode_in: [String!]
  citycode_not_in: [String!]
  citycode_lt: String
  citycode_lte: String
  citycode_gt: String
  citycode_gte: String
  citycode_contains: String
  citycode_not_contains: String
  citycode_starts_with: String
  citycode_not_starts_with: String
  citycode_ends_with: String
  citycode_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  endTime: String
  endTime_not: String
  endTime_in: [String!]
  endTime_not_in: [String!]
  endTime_lt: String
  endTime_lte: String
  endTime_gt: String
  endTime_gte: String
  endTime_contains: String
  endTime_not_contains: String
  endTime_starts_with: String
  endTime_not_starts_with: String
  endTime_ends_with: String
  endTime_not_ends_with: String
  frontPhoto: String
  frontPhoto_not: String
  frontPhoto_in: [String!]
  frontPhoto_not_in: [String!]
  frontPhoto_lt: String
  frontPhoto_lte: String
  frontPhoto_gt: String
  frontPhoto_gte: String
  frontPhoto_contains: String
  frontPhoto_not_contains: String
  frontPhoto_starts_with: String
  frontPhoto_not_starts_with: String
  frontPhoto_ends_with: String
  frontPhoto_not_ends_with: String
  handPhoto: String
  handPhoto_not: String
  handPhoto_in: [String!]
  handPhoto_not_in: [String!]
  handPhoto_lt: String
  handPhoto_lte: String
  handPhoto_gt: String
  handPhoto_gte: String
  handPhoto_contains: String
  handPhoto_not_contains: String
  handPhoto_starts_with: String
  handPhoto_not_starts_with: String
  handPhoto_ends_with: String
  handPhoto_not_ends_with: String
  nation: String
  nation_not: String
  nation_in: [String!]
  nation_not_in: [String!]
  nation_lt: String
  nation_lte: String
  nation_gt: String
  nation_gte: String
  nation_contains: String
  nation_not_contains: String
  nation_starts_with: String
  nation_not_starts_with: String
  nation_ends_with: String
  nation_not_ends_with: String
  realName: String
  realName_not: String
  realName_in: [String!]
  realName_not_in: [String!]
  realName_lt: String
  realName_lte: String
  realName_gt: String
  realName_gte: String
  realName_contains: String
  realName_not_contains: String
  realName_starts_with: String
  realName_not_starts_with: String
  realName_ends_with: String
  realName_not_ends_with: String
  sex: Int
  sex_not: Int
  sex_in: [Int!]
  sex_not_in: [Int!]
  sex_lt: Int
  sex_lte: Int
  sex_gt: Int
  sex_gte: Int
  signFrom: String
  signFrom_not: String
  signFrom_in: [String!]
  signFrom_not_in: [String!]
  signFrom_lt: String
  signFrom_lte: String
  signFrom_gt: String
  signFrom_gte: String
  signFrom_contains: String
  signFrom_not_contains: String
  signFrom_starts_with: String
  signFrom_not_starts_with: String
  signFrom_ends_with: String
  signFrom_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  userId: ChongduUserWhereInput
  AND: [ChongduUserauthentWhereInput!]
  OR: [ChongduUserauthentWhereInput!]
  NOT: [ChongduUserauthentWhereInput!]
}

input ChongduUserauthentWhereUniqueInput {
  id: ID
}

type ChongduUserbind {
  id: Int!
  bindtime: String
  content: String
  ct: String
  cuserId: String
  d: Int
  mail: String
  mt: String
  muserId: String
  sort: Int
  status: Int
  tel: String
  type: Int
  userId: String
}

type ChongduUserbindConnection {
  pageInfo: PageInfo!
  edges: [ChongduUserbindEdge]!
  aggregate: AggregateChongduUserbind!
}

input ChongduUserbindCreateInput {
  id: Int
  bindtime: String
  content: String
  ct: String
  cuserId: String
  d: Int
  mail: String
  mt: String
  muserId: String
  sort: Int
  status: Int
  tel: String
  type: Int
  userId: String
}

type ChongduUserbindEdge {
  node: ChongduUserbind!
  cursor: String!
}

enum ChongduUserbindOrderByInput {
  id_ASC
  id_DESC
  bindtime_ASC
  bindtime_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  mail_ASC
  mail_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  tel_ASC
  tel_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduUserbindPreviousValues {
  id: Int!
  bindtime: String
  content: String
  ct: String
  cuserId: String
  d: Int
  mail: String
  mt: String
  muserId: String
  sort: Int
  status: Int
  tel: String
  type: Int
  userId: String
}

type ChongduUserbindSubscriptionPayload {
  mutation: MutationType!
  node: ChongduUserbind
  updatedFields: [String!]
  previousValues: ChongduUserbindPreviousValues
}

input ChongduUserbindSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduUserbindWhereInput
  AND: [ChongduUserbindSubscriptionWhereInput!]
  OR: [ChongduUserbindSubscriptionWhereInput!]
  NOT: [ChongduUserbindSubscriptionWhereInput!]
}

input ChongduUserbindUpdateInput {
  bindtime: String
  content: String
  ct: String
  cuserId: String
  d: Int
  mail: String
  mt: String
  muserId: String
  sort: Int
  status: Int
  tel: String
  type: Int
  userId: String
}

input ChongduUserbindUpdateManyMutationInput {
  bindtime: String
  content: String
  ct: String
  cuserId: String
  d: Int
  mail: String
  mt: String
  muserId: String
  sort: Int
  status: Int
  tel: String
  type: Int
  userId: String
}

input ChongduUserbindWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  bindtime: String
  bindtime_not: String
  bindtime_in: [String!]
  bindtime_not_in: [String!]
  bindtime_lt: String
  bindtime_lte: String
  bindtime_gt: String
  bindtime_gte: String
  bindtime_contains: String
  bindtime_not_contains: String
  bindtime_starts_with: String
  bindtime_not_starts_with: String
  bindtime_ends_with: String
  bindtime_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  mail: String
  mail_not: String
  mail_in: [String!]
  mail_not_in: [String!]
  mail_lt: String
  mail_lte: String
  mail_gt: String
  mail_gte: String
  mail_contains: String
  mail_not_contains: String
  mail_starts_with: String
  mail_not_starts_with: String
  mail_ends_with: String
  mail_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  tel: String
  tel_not: String
  tel_in: [String!]
  tel_not_in: [String!]
  tel_lt: String
  tel_lte: String
  tel_gt: String
  tel_gte: String
  tel_contains: String
  tel_not_contains: String
  tel_starts_with: String
  tel_not_starts_with: String
  tel_ends_with: String
  tel_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduUserbindWhereInput!]
  OR: [ChongduUserbindWhereInput!]
  NOT: [ChongduUserbindWhereInput!]
}

input ChongduUserbindWhereUniqueInput {
  id: Int
}

type ChongduUserConnection {
  pageInfo: PageInfo!
  edges: [ChongduUserEdge]!
  aggregate: AggregateChongduUser!
}

input ChongduUserCreateInput {
  id: ID
  balance: Float
  ct: String
  d: Int
  hash: String
  icon: String
  ip: String
  isaudit: Int
  isauthent: Int
  lastlogintime: String
  mail: String
  mt: String
  nickname: String
  openidDy: String
  openidQq: String
  openidWx: String
  phone: String
  regeistType: Int
  regtime: String
  salt: String
  sort: Int
  status: Int
  type: Int
  updateBy: String
  username: String
  vip: Int
}

input ChongduUserCreateOneInput {
  create: ChongduUserCreateInput
  connect: ChongduUserWhereUniqueInput
}

type ChongduUserdetail {
  id: Int!
  deviceCode: String
  deviceName: String
  type: Int
  userId: String
}

type ChongduUserdetailConnection {
  pageInfo: PageInfo!
  edges: [ChongduUserdetailEdge]!
  aggregate: AggregateChongduUserdetail!
}

input ChongduUserdetailCreateInput {
  id: Int
  deviceCode: String
  deviceName: String
  type: Int
  userId: String
}

type ChongduUserdetailEdge {
  node: ChongduUserdetail!
  cursor: String!
}

enum ChongduUserdetailOrderByInput {
  id_ASC
  id_DESC
  deviceCode_ASC
  deviceCode_DESC
  deviceName_ASC
  deviceName_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduUserdetailPreviousValues {
  id: Int!
  deviceCode: String
  deviceName: String
  type: Int
  userId: String
}

type ChongduUserdetailSubscriptionPayload {
  mutation: MutationType!
  node: ChongduUserdetail
  updatedFields: [String!]
  previousValues: ChongduUserdetailPreviousValues
}

input ChongduUserdetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduUserdetailWhereInput
  AND: [ChongduUserdetailSubscriptionWhereInput!]
  OR: [ChongduUserdetailSubscriptionWhereInput!]
  NOT: [ChongduUserdetailSubscriptionWhereInput!]
}

input ChongduUserdetailUpdateInput {
  deviceCode: String
  deviceName: String
  type: Int
  userId: String
}

input ChongduUserdetailUpdateManyMutationInput {
  deviceCode: String
  deviceName: String
  type: Int
  userId: String
}

input ChongduUserdetailWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  deviceCode: String
  deviceCode_not: String
  deviceCode_in: [String!]
  deviceCode_not_in: [String!]
  deviceCode_lt: String
  deviceCode_lte: String
  deviceCode_gt: String
  deviceCode_gte: String
  deviceCode_contains: String
  deviceCode_not_contains: String
  deviceCode_starts_with: String
  deviceCode_not_starts_with: String
  deviceCode_ends_with: String
  deviceCode_not_ends_with: String
  deviceName: String
  deviceName_not: String
  deviceName_in: [String!]
  deviceName_not_in: [String!]
  deviceName_lt: String
  deviceName_lte: String
  deviceName_gt: String
  deviceName_gte: String
  deviceName_contains: String
  deviceName_not_contains: String
  deviceName_starts_with: String
  deviceName_not_starts_with: String
  deviceName_ends_with: String
  deviceName_not_ends_with: String
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduUserdetailWhereInput!]
  OR: [ChongduUserdetailWhereInput!]
  NOT: [ChongduUserdetailWhereInput!]
}

input ChongduUserdetailWhereUniqueInput {
  id: Int
}

type ChongduUserEdge {
  node: ChongduUser!
  cursor: String!
}

type ChongduUserFavourite {
  id: Int!
  ct: String
  d: Int
  relateId: String
  relateType: Int
  status: Int
  userId: String
}

type ChongduUserFavouriteConnection {
  pageInfo: PageInfo!
  edges: [ChongduUserFavouriteEdge]!
  aggregate: AggregateChongduUserFavourite!
}

input ChongduUserFavouriteCreateInput {
  id: Int
  ct: String
  d: Int
  relateId: String
  relateType: Int
  status: Int
  userId: String
}

type ChongduUserFavouriteEdge {
  node: ChongduUserFavourite!
  cursor: String!
}

enum ChongduUserFavouriteOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  relateId_ASC
  relateId_DESC
  relateType_ASC
  relateType_DESC
  status_ASC
  status_DESC
  userId_ASC
  userId_DESC
}

type ChongduUserFavouritePreviousValues {
  id: Int!
  ct: String
  d: Int
  relateId: String
  relateType: Int
  status: Int
  userId: String
}

type ChongduUserFavouriteSubscriptionPayload {
  mutation: MutationType!
  node: ChongduUserFavourite
  updatedFields: [String!]
  previousValues: ChongduUserFavouritePreviousValues
}

input ChongduUserFavouriteSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduUserFavouriteWhereInput
  AND: [ChongduUserFavouriteSubscriptionWhereInput!]
  OR: [ChongduUserFavouriteSubscriptionWhereInput!]
  NOT: [ChongduUserFavouriteSubscriptionWhereInput!]
}

input ChongduUserFavouriteUpdateInput {
  ct: String
  d: Int
  relateId: String
  relateType: Int
  status: Int
  userId: String
}

input ChongduUserFavouriteUpdateManyMutationInput {
  ct: String
  d: Int
  relateId: String
  relateType: Int
  status: Int
  userId: String
}

input ChongduUserFavouriteWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  relateId: String
  relateId_not: String
  relateId_in: [String!]
  relateId_not_in: [String!]
  relateId_lt: String
  relateId_lte: String
  relateId_gt: String
  relateId_gte: String
  relateId_contains: String
  relateId_not_contains: String
  relateId_starts_with: String
  relateId_not_starts_with: String
  relateId_ends_with: String
  relateId_not_ends_with: String
  relateType: Int
  relateType_not: Int
  relateType_in: [Int!]
  relateType_not_in: [Int!]
  relateType_lt: Int
  relateType_lte: Int
  relateType_gt: Int
  relateType_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduUserFavouriteWhereInput!]
  OR: [ChongduUserFavouriteWhereInput!]
  NOT: [ChongduUserFavouriteWhereInput!]
}

input ChongduUserFavouriteWhereUniqueInput {
  id: Int
}

enum ChongduUserOrderByInput {
  id_ASC
  id_DESC
  balance_ASC
  balance_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  hash_ASC
  hash_DESC
  icon_ASC
  icon_DESC
  ip_ASC
  ip_DESC
  isaudit_ASC
  isaudit_DESC
  isauthent_ASC
  isauthent_DESC
  lastlogintime_ASC
  lastlogintime_DESC
  mail_ASC
  mail_DESC
  mt_ASC
  mt_DESC
  nickname_ASC
  nickname_DESC
  openidDy_ASC
  openidDy_DESC
  openidQq_ASC
  openidQq_DESC
  openidWx_ASC
  openidWx_DESC
  phone_ASC
  phone_DESC
  regeistType_ASC
  regeistType_DESC
  regtime_ASC
  regtime_DESC
  salt_ASC
  salt_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  updateBy_ASC
  updateBy_DESC
  username_ASC
  username_DESC
  vip_ASC
  vip_DESC
}

type ChongduUserPreviousValues {
  id: ID!
  balance: Float
  ct: String
  d: Int
  hash: String
  icon: String
  ip: String
  isaudit: Int
  isauthent: Int
  lastlogintime: String
  mail: String
  mt: String
  nickname: String
  openidDy: String
  openidQq: String
  openidWx: String
  phone: String
  regeistType: Int
  regtime: String
  salt: String
  sort: Int
  status: Int
  type: Int
  updateBy: String
  username: String
  vip: Int
}

type ChongduUserstatistic {
  id: Int!
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

type ChongduUserstatisticConnection {
  pageInfo: PageInfo!
  edges: [ChongduUserstatisticEdge]!
  aggregate: AggregateChongduUserstatistic!
}

input ChongduUserstatisticCreateInput {
  id: Int
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

type ChongduUserstatisticEdge {
  node: ChongduUserstatistic!
  cursor: String!
}

enum ChongduUserstatisticOrderByInput {
  id_ASC
  id_DESC
  count_ASC
  count_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  day_ASC
  day_DESC
  hour_ASC
  hour_DESC
  month_ASC
  month_DESC
  mt_ASC
  mt_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
  year_ASC
  year_DESC
}

type ChongduUserstatisticPreviousValues {
  id: Int!
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

type ChongduUserstatisticSubscriptionPayload {
  mutation: MutationType!
  node: ChongduUserstatistic
  updatedFields: [String!]
  previousValues: ChongduUserstatisticPreviousValues
}

input ChongduUserstatisticSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduUserstatisticWhereInput
  AND: [ChongduUserstatisticSubscriptionWhereInput!]
  OR: [ChongduUserstatisticSubscriptionWhereInput!]
  NOT: [ChongduUserstatisticSubscriptionWhereInput!]
}

input ChongduUserstatisticUpdateInput {
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

input ChongduUserstatisticUpdateManyMutationInput {
  count: Int
  ct: String
  d: Int
  day: Int
  hour: Int
  month: Int
  mt: String
  sort: Int
  status: Int
  type: Int
  year: Int
}

input ChongduUserstatisticWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  count: Int
  count_not: Int
  count_in: [Int!]
  count_not_in: [Int!]
  count_lt: Int
  count_lte: Int
  count_gt: Int
  count_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  day: Int
  day_not: Int
  day_in: [Int!]
  day_not_in: [Int!]
  day_lt: Int
  day_lte: Int
  day_gt: Int
  day_gte: Int
  hour: Int
  hour_not: Int
  hour_in: [Int!]
  hour_not_in: [Int!]
  hour_lt: Int
  hour_lte: Int
  hour_gt: Int
  hour_gte: Int
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  AND: [ChongduUserstatisticWhereInput!]
  OR: [ChongduUserstatisticWhereInput!]
  NOT: [ChongduUserstatisticWhereInput!]
}

input ChongduUserstatisticWhereUniqueInput {
  id: Int
}

type ChongduUserSubscriptionPayload {
  mutation: MutationType!
  node: ChongduUser
  updatedFields: [String!]
  previousValues: ChongduUserPreviousValues
}

input ChongduUserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduUserWhereInput
  AND: [ChongduUserSubscriptionWhereInput!]
  OR: [ChongduUserSubscriptionWhereInput!]
  NOT: [ChongduUserSubscriptionWhereInput!]
}

input ChongduUserUpdateDataInput {
  balance: Float
  ct: String
  d: Int
  hash: String
  icon: String
  ip: String
  isaudit: Int
  isauthent: Int
  lastlogintime: String
  mail: String
  mt: String
  nickname: String
  openidDy: String
  openidQq: String
  openidWx: String
  phone: String
  regeistType: Int
  regtime: String
  salt: String
  sort: Int
  status: Int
  type: Int
  updateBy: String
  username: String
  vip: Int
}

input ChongduUserUpdateInput {
  balance: Float
  ct: String
  d: Int
  hash: String
  icon: String
  ip: String
  isaudit: Int
  isauthent: Int
  lastlogintime: String
  mail: String
  mt: String
  nickname: String
  openidDy: String
  openidQq: String
  openidWx: String
  phone: String
  regeistType: Int
  regtime: String
  salt: String
  sort: Int
  status: Int
  type: Int
  updateBy: String
  username: String
  vip: Int
}

input ChongduUserUpdateManyMutationInput {
  balance: Float
  ct: String
  d: Int
  hash: String
  icon: String
  ip: String
  isaudit: Int
  isauthent: Int
  lastlogintime: String
  mail: String
  mt: String
  nickname: String
  openidDy: String
  openidQq: String
  openidWx: String
  phone: String
  regeistType: Int
  regtime: String
  salt: String
  sort: Int
  status: Int
  type: Int
  updateBy: String
  username: String
  vip: Int
}

input ChongduUserUpdateOneInput {
  create: ChongduUserCreateInput
  update: ChongduUserUpdateDataInput
  upsert: ChongduUserUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduUserWhereUniqueInput
}

input ChongduUserUpsertNestedInput {
  update: ChongduUserUpdateDataInput!
  create: ChongduUserCreateInput!
}

input ChongduUserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  balance: Float
  balance_not: Float
  balance_in: [Float!]
  balance_not_in: [Float!]
  balance_lt: Float
  balance_lte: Float
  balance_gt: Float
  balance_gte: Float
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  hash: String
  hash_not: String
  hash_in: [String!]
  hash_not_in: [String!]
  hash_lt: String
  hash_lte: String
  hash_gt: String
  hash_gte: String
  hash_contains: String
  hash_not_contains: String
  hash_starts_with: String
  hash_not_starts_with: String
  hash_ends_with: String
  hash_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  ip: String
  ip_not: String
  ip_in: [String!]
  ip_not_in: [String!]
  ip_lt: String
  ip_lte: String
  ip_gt: String
  ip_gte: String
  ip_contains: String
  ip_not_contains: String
  ip_starts_with: String
  ip_not_starts_with: String
  ip_ends_with: String
  ip_not_ends_with: String
  isaudit: Int
  isaudit_not: Int
  isaudit_in: [Int!]
  isaudit_not_in: [Int!]
  isaudit_lt: Int
  isaudit_lte: Int
  isaudit_gt: Int
  isaudit_gte: Int
  isauthent: Int
  isauthent_not: Int
  isauthent_in: [Int!]
  isauthent_not_in: [Int!]
  isauthent_lt: Int
  isauthent_lte: Int
  isauthent_gt: Int
  isauthent_gte: Int
  lastlogintime: String
  lastlogintime_not: String
  lastlogintime_in: [String!]
  lastlogintime_not_in: [String!]
  lastlogintime_lt: String
  lastlogintime_lte: String
  lastlogintime_gt: String
  lastlogintime_gte: String
  lastlogintime_contains: String
  lastlogintime_not_contains: String
  lastlogintime_starts_with: String
  lastlogintime_not_starts_with: String
  lastlogintime_ends_with: String
  lastlogintime_not_ends_with: String
  mail: String
  mail_not: String
  mail_in: [String!]
  mail_not_in: [String!]
  mail_lt: String
  mail_lte: String
  mail_gt: String
  mail_gte: String
  mail_contains: String
  mail_not_contains: String
  mail_starts_with: String
  mail_not_starts_with: String
  mail_ends_with: String
  mail_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  nickname: String
  nickname_not: String
  nickname_in: [String!]
  nickname_not_in: [String!]
  nickname_lt: String
  nickname_lte: String
  nickname_gt: String
  nickname_gte: String
  nickname_contains: String
  nickname_not_contains: String
  nickname_starts_with: String
  nickname_not_starts_with: String
  nickname_ends_with: String
  nickname_not_ends_with: String
  openidDy: String
  openidDy_not: String
  openidDy_in: [String!]
  openidDy_not_in: [String!]
  openidDy_lt: String
  openidDy_lte: String
  openidDy_gt: String
  openidDy_gte: String
  openidDy_contains: String
  openidDy_not_contains: String
  openidDy_starts_with: String
  openidDy_not_starts_with: String
  openidDy_ends_with: String
  openidDy_not_ends_with: String
  openidQq: String
  openidQq_not: String
  openidQq_in: [String!]
  openidQq_not_in: [String!]
  openidQq_lt: String
  openidQq_lte: String
  openidQq_gt: String
  openidQq_gte: String
  openidQq_contains: String
  openidQq_not_contains: String
  openidQq_starts_with: String
  openidQq_not_starts_with: String
  openidQq_ends_with: String
  openidQq_not_ends_with: String
  openidWx: String
  openidWx_not: String
  openidWx_in: [String!]
  openidWx_not_in: [String!]
  openidWx_lt: String
  openidWx_lte: String
  openidWx_gt: String
  openidWx_gte: String
  openidWx_contains: String
  openidWx_not_contains: String
  openidWx_starts_with: String
  openidWx_not_starts_with: String
  openidWx_ends_with: String
  openidWx_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  regeistType: Int
  regeistType_not: Int
  regeistType_in: [Int!]
  regeistType_not_in: [Int!]
  regeistType_lt: Int
  regeistType_lte: Int
  regeistType_gt: Int
  regeistType_gte: Int
  regtime: String
  regtime_not: String
  regtime_in: [String!]
  regtime_not_in: [String!]
  regtime_lt: String
  regtime_lte: String
  regtime_gt: String
  regtime_gte: String
  regtime_contains: String
  regtime_not_contains: String
  regtime_starts_with: String
  regtime_not_starts_with: String
  regtime_ends_with: String
  regtime_not_ends_with: String
  salt: String
  salt_not: String
  salt_in: [String!]
  salt_not_in: [String!]
  salt_lt: String
  salt_lte: String
  salt_gt: String
  salt_gte: String
  salt_contains: String
  salt_not_contains: String
  salt_starts_with: String
  salt_not_starts_with: String
  salt_ends_with: String
  salt_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  updateBy: String
  updateBy_not: String
  updateBy_in: [String!]
  updateBy_not_in: [String!]
  updateBy_lt: String
  updateBy_lte: String
  updateBy_gt: String
  updateBy_gte: String
  updateBy_contains: String
  updateBy_not_contains: String
  updateBy_starts_with: String
  updateBy_not_starts_with: String
  updateBy_ends_with: String
  updateBy_not_ends_with: String
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  vip: Int
  vip_not: Int
  vip_in: [Int!]
  vip_not_in: [Int!]
  vip_lt: Int
  vip_lte: Int
  vip_gt: Int
  vip_gte: Int
  AND: [ChongduUserWhereInput!]
  OR: [ChongduUserWhereInput!]
  NOT: [ChongduUserWhereInput!]
}

input ChongduUserWhereUniqueInput {
  id: ID
}

type ChongduVaccine {
  id: Int!
  brandId: Int
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  indexNum: Int
  mt: String
  petId: String
  status: Int
  street: String
  time: String
  userId: String
}

type ChongduVaccineBrand {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  description: String
  image: String
  name: String
  sort: Int
  type: Int
}

type ChongduVaccineBrandConnection {
  pageInfo: PageInfo!
  edges: [ChongduVaccineBrandEdge]!
  aggregate: AggregateChongduVaccineBrand!
}

input ChongduVaccineBrandCreateInput {
  id: Int
  ct: String
  cuserId: String
  d: Int
  description: String
  image: String
  name: String
  sort: Int
  type: Int
}

type ChongduVaccineBrandEdge {
  node: ChongduVaccineBrand!
  cursor: String!
}

enum ChongduVaccineBrandOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  cuserId_ASC
  cuserId_DESC
  d_ASC
  d_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  name_ASC
  name_DESC
  sort_ASC
  sort_DESC
  type_ASC
  type_DESC
}

type ChongduVaccineBrandPreviousValues {
  id: Int!
  ct: String
  cuserId: String
  d: Int
  description: String
  image: String
  name: String
  sort: Int
  type: Int
}

type ChongduVaccineBrandSubscriptionPayload {
  mutation: MutationType!
  node: ChongduVaccineBrand
  updatedFields: [String!]
  previousValues: ChongduVaccineBrandPreviousValues
}

input ChongduVaccineBrandSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduVaccineBrandWhereInput
  AND: [ChongduVaccineBrandSubscriptionWhereInput!]
  OR: [ChongduVaccineBrandSubscriptionWhereInput!]
  NOT: [ChongduVaccineBrandSubscriptionWhereInput!]
}

input ChongduVaccineBrandUpdateInput {
  ct: String
  cuserId: String
  d: Int
  description: String
  image: String
  name: String
  sort: Int
  type: Int
}

input ChongduVaccineBrandUpdateManyMutationInput {
  ct: String
  cuserId: String
  d: Int
  description: String
  image: String
  name: String
  sort: Int
  type: Int
}

input ChongduVaccineBrandWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserId: String
  cuserId_not: String
  cuserId_in: [String!]
  cuserId_not_in: [String!]
  cuserId_lt: String
  cuserId_lte: String
  cuserId_gt: String
  cuserId_gte: String
  cuserId_contains: String
  cuserId_not_contains: String
  cuserId_starts_with: String
  cuserId_not_starts_with: String
  cuserId_ends_with: String
  cuserId_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  AND: [ChongduVaccineBrandWhereInput!]
  OR: [ChongduVaccineBrandWhereInput!]
  NOT: [ChongduVaccineBrandWhereInput!]
}

input ChongduVaccineBrandWhereUniqueInput {
  id: Int
}

type ChongduVaccineConnection {
  pageInfo: PageInfo!
  edges: [ChongduVaccineEdge]!
  aggregate: AggregateChongduVaccine!
}

input ChongduVaccineCreateInput {
  id: Int
  brandId: Int
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  indexNum: Int
  mt: String
  petId: String
  status: Int
  street: String
  time: String
  userId: String
}

type ChongduVaccineEdge {
  node: ChongduVaccine!
  cursor: String!
}

enum ChongduVaccineOrderByInput {
  id_ASC
  id_DESC
  brandId_ASC
  brandId_DESC
  cityCode_ASC
  cityCode_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  image_ASC
  image_DESC
  indexNum_ASC
  indexNum_DESC
  mt_ASC
  mt_DESC
  petId_ASC
  petId_DESC
  status_ASC
  status_DESC
  street_ASC
  street_DESC
  time_ASC
  time_DESC
  userId_ASC
  userId_DESC
}

type ChongduVaccinePreviousValues {
  id: Int!
  brandId: Int
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  indexNum: Int
  mt: String
  petId: String
  status: Int
  street: String
  time: String
  userId: String
}

type ChongduVaccineSubscriptionPayload {
  mutation: MutationType!
  node: ChongduVaccine
  updatedFields: [String!]
  previousValues: ChongduVaccinePreviousValues
}

input ChongduVaccineSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduVaccineWhereInput
  AND: [ChongduVaccineSubscriptionWhereInput!]
  OR: [ChongduVaccineSubscriptionWhereInput!]
  NOT: [ChongduVaccineSubscriptionWhereInput!]
}

input ChongduVaccineUpdateInput {
  brandId: Int
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  indexNum: Int
  mt: String
  petId: String
  status: Int
  street: String
  time: String
  userId: String
}

input ChongduVaccineUpdateManyMutationInput {
  brandId: Int
  cityCode: String
  content: String
  ct: String
  d: Int
  image: String
  indexNum: Int
  mt: String
  petId: String
  status: Int
  street: String
  time: String
  userId: String
}

input ChongduVaccineWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  brandId: Int
  brandId_not: Int
  brandId_in: [Int!]
  brandId_not_in: [Int!]
  brandId_lt: Int
  brandId_lte: Int
  brandId_gt: Int
  brandId_gte: Int
  cityCode: String
  cityCode_not: String
  cityCode_in: [String!]
  cityCode_not_in: [String!]
  cityCode_lt: String
  cityCode_lte: String
  cityCode_gt: String
  cityCode_gte: String
  cityCode_contains: String
  cityCode_not_contains: String
  cityCode_starts_with: String
  cityCode_not_starts_with: String
  cityCode_ends_with: String
  cityCode_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  indexNum: Int
  indexNum_not: Int
  indexNum_in: [Int!]
  indexNum_not_in: [Int!]
  indexNum_lt: Int
  indexNum_lte: Int
  indexNum_gt: Int
  indexNum_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  petId: String
  petId_not: String
  petId_in: [String!]
  petId_not_in: [String!]
  petId_lt: String
  petId_lte: String
  petId_gt: String
  petId_gte: String
  petId_contains: String
  petId_not_contains: String
  petId_starts_with: String
  petId_not_starts_with: String
  petId_ends_with: String
  petId_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  street: String
  street_not: String
  street_in: [String!]
  street_not_in: [String!]
  street_lt: String
  street_lte: String
  street_gt: String
  street_gte: String
  street_contains: String
  street_not_contains: String
  street_starts_with: String
  street_not_starts_with: String
  street_ends_with: String
  street_not_ends_with: String
  time: String
  time_not: String
  time_in: [String!]
  time_not_in: [String!]
  time_lt: String
  time_lte: String
  time_gt: String
  time_gte: String
  time_contains: String
  time_not_contains: String
  time_starts_with: String
  time_not_starts_with: String
  time_ends_with: String
  time_not_ends_with: String
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduVaccineWhereInput!]
  OR: [ChongduVaccineWhereInput!]
  NOT: [ChongduVaccineWhereInput!]
}

input ChongduVaccineWhereUniqueInput {
  id: Int
}

type ChongduValidate {
  id: Int!
  code: String
  ct: String
  d: Int
  mt: String
  phone: String
  sort: Int
  status: Int
  type: Int
}

type ChongduValidateConnection {
  pageInfo: PageInfo!
  edges: [ChongduValidateEdge]!
  aggregate: AggregateChongduValidate!
}

input ChongduValidateCreateInput {
  id: Int
  code: String
  ct: String
  d: Int
  mt: String
  phone: String
  sort: Int
  status: Int
  type: Int
}

type ChongduValidateEdge {
  node: ChongduValidate!
  cursor: String!
}

enum ChongduValidateOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  mt_ASC
  mt_DESC
  phone_ASC
  phone_DESC
  sort_ASC
  sort_DESC
  status_ASC
  status_DESC
  type_ASC
  type_DESC
}

type ChongduValidatePreviousValues {
  id: Int!
  code: String
  ct: String
  d: Int
  mt: String
  phone: String
  sort: Int
  status: Int
  type: Int
}

type ChongduValidateSubscriptionPayload {
  mutation: MutationType!
  node: ChongduValidate
  updatedFields: [String!]
  previousValues: ChongduValidatePreviousValues
}

input ChongduValidateSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduValidateWhereInput
  AND: [ChongduValidateSubscriptionWhereInput!]
  OR: [ChongduValidateSubscriptionWhereInput!]
  NOT: [ChongduValidateSubscriptionWhereInput!]
}

input ChongduValidateUpdateInput {
  code: String
  ct: String
  d: Int
  mt: String
  phone: String
  sort: Int
  status: Int
  type: Int
}

input ChongduValidateUpdateManyMutationInput {
  code: String
  ct: String
  d: Int
  mt: String
  phone: String
  sort: Int
  status: Int
  type: Int
}

input ChongduValidateWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  sort: Int
  sort_not: Int
  sort_in: [Int!]
  sort_not_in: [Int!]
  sort_lt: Int
  sort_lte: Int
  sort_gt: Int
  sort_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  AND: [ChongduValidateWhereInput!]
  OR: [ChongduValidateWhereInput!]
  NOT: [ChongduValidateWhereInput!]
}

input ChongduValidateWhereUniqueInput {
  id: Int
}

type ChongduVersion {
  id: Int!
  ip: String
  mac: String
  mt: String
  muserId: String
  name: String
  tyep: Int
  versionCode: String
}

type ChongduVersionConnection {
  pageInfo: PageInfo!
  edges: [ChongduVersionEdge]!
  aggregate: AggregateChongduVersion!
}

input ChongduVersionCreateInput {
  id: Int
  ip: String
  mac: String
  mt: String
  muserId: String
  name: String
  tyep: Int
  versionCode: String
}

type ChongduVersionEdge {
  node: ChongduVersion!
  cursor: String!
}

enum ChongduVersionOrderByInput {
  id_ASC
  id_DESC
  ip_ASC
  ip_DESC
  mac_ASC
  mac_DESC
  mt_ASC
  mt_DESC
  muserId_ASC
  muserId_DESC
  name_ASC
  name_DESC
  tyep_ASC
  tyep_DESC
  versionCode_ASC
  versionCode_DESC
}

type ChongduVersionPreviousValues {
  id: Int!
  ip: String
  mac: String
  mt: String
  muserId: String
  name: String
  tyep: Int
  versionCode: String
}

type ChongduVersionSubscriptionPayload {
  mutation: MutationType!
  node: ChongduVersion
  updatedFields: [String!]
  previousValues: ChongduVersionPreviousValues
}

input ChongduVersionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduVersionWhereInput
  AND: [ChongduVersionSubscriptionWhereInput!]
  OR: [ChongduVersionSubscriptionWhereInput!]
  NOT: [ChongduVersionSubscriptionWhereInput!]
}

input ChongduVersionUpdateInput {
  ip: String
  mac: String
  mt: String
  muserId: String
  name: String
  tyep: Int
  versionCode: String
}

input ChongduVersionUpdateManyMutationInput {
  ip: String
  mac: String
  mt: String
  muserId: String
  name: String
  tyep: Int
  versionCode: String
}

input ChongduVersionWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ip: String
  ip_not: String
  ip_in: [String!]
  ip_not_in: [String!]
  ip_lt: String
  ip_lte: String
  ip_gt: String
  ip_gte: String
  ip_contains: String
  ip_not_contains: String
  ip_starts_with: String
  ip_not_starts_with: String
  ip_ends_with: String
  ip_not_ends_with: String
  mac: String
  mac_not: String
  mac_in: [String!]
  mac_not_in: [String!]
  mac_lt: String
  mac_lte: String
  mac_gt: String
  mac_gte: String
  mac_contains: String
  mac_not_contains: String
  mac_starts_with: String
  mac_not_starts_with: String
  mac_ends_with: String
  mac_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserId: String
  muserId_not: String
  muserId_in: [String!]
  muserId_not_in: [String!]
  muserId_lt: String
  muserId_lte: String
  muserId_gt: String
  muserId_gte: String
  muserId_contains: String
  muserId_not_contains: String
  muserId_starts_with: String
  muserId_not_starts_with: String
  muserId_ends_with: String
  muserId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  tyep: Int
  tyep_not: Int
  tyep_in: [Int!]
  tyep_not_in: [Int!]
  tyep_lt: Int
  tyep_lte: Int
  tyep_gt: Int
  tyep_gte: Int
  versionCode: String
  versionCode_not: String
  versionCode_in: [String!]
  versionCode_not_in: [String!]
  versionCode_lt: String
  versionCode_lte: String
  versionCode_gt: String
  versionCode_gte: String
  versionCode_contains: String
  versionCode_not_contains: String
  versionCode_starts_with: String
  versionCode_not_starts_with: String
  versionCode_ends_with: String
  versionCode_not_ends_with: String
  AND: [ChongduVersionWhereInput!]
  OR: [ChongduVersionWhereInput!]
  NOT: [ChongduVersionWhereInput!]
}

input ChongduVersionWhereUniqueInput {
  id: Int
}

type ChongduViewcount {
  id: Int!
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  ip: String
  mt: String
  muserid: String
  pid: String
  s: Int
  type: Int
  userid: String
  xu: Int
}

type ChongduViewcountConnection {
  pageInfo: PageInfo!
  edges: [ChongduViewcountEdge]!
  aggregate: AggregateChongduViewcount!
}

input ChongduViewcountCreateInput {
  id: Int
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  ip: String
  mt: String
  muserid: String
  pid: String
  s: Int
  type: Int
  userid: String
  xu: Int
}

type ChongduViewcountEdge {
  node: ChongduViewcount!
  cursor: String!
}

enum ChongduViewcountOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  cuserid_ASC
  cuserid_DESC
  d_ASC
  d_DESC
  deviceid_ASC
  deviceid_DESC
  devicename_ASC
  devicename_DESC
  devicetype_ASC
  devicetype_DESC
  ip_ASC
  ip_DESC
  mt_ASC
  mt_DESC
  muserid_ASC
  muserid_DESC
  pid_ASC
  pid_DESC
  s_ASC
  s_DESC
  type_ASC
  type_DESC
  userid_ASC
  userid_DESC
  xu_ASC
  xu_DESC
}

type ChongduViewcountPreviousValues {
  id: Int!
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  ip: String
  mt: String
  muserid: String
  pid: String
  s: Int
  type: Int
  userid: String
  xu: Int
}

type ChongduViewcountSubscriptionPayload {
  mutation: MutationType!
  node: ChongduViewcount
  updatedFields: [String!]
  previousValues: ChongduViewcountPreviousValues
}

input ChongduViewcountSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduViewcountWhereInput
  AND: [ChongduViewcountSubscriptionWhereInput!]
  OR: [ChongduViewcountSubscriptionWhereInput!]
  NOT: [ChongduViewcountSubscriptionWhereInput!]
}

input ChongduViewcountUpdateInput {
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  ip: String
  mt: String
  muserid: String
  pid: String
  s: Int
  type: Int
  userid: String
  xu: Int
}

input ChongduViewcountUpdateManyMutationInput {
  ct: String
  cuserid: String
  d: Int
  deviceid: String
  devicename: String
  devicetype: Int
  ip: String
  mt: String
  muserid: String
  pid: String
  s: Int
  type: Int
  userid: String
  xu: Int
}

input ChongduViewcountWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  cuserid: String
  cuserid_not: String
  cuserid_in: [String!]
  cuserid_not_in: [String!]
  cuserid_lt: String
  cuserid_lte: String
  cuserid_gt: String
  cuserid_gte: String
  cuserid_contains: String
  cuserid_not_contains: String
  cuserid_starts_with: String
  cuserid_not_starts_with: String
  cuserid_ends_with: String
  cuserid_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  deviceid: String
  deviceid_not: String
  deviceid_in: [String!]
  deviceid_not_in: [String!]
  deviceid_lt: String
  deviceid_lte: String
  deviceid_gt: String
  deviceid_gte: String
  deviceid_contains: String
  deviceid_not_contains: String
  deviceid_starts_with: String
  deviceid_not_starts_with: String
  deviceid_ends_with: String
  deviceid_not_ends_with: String
  devicename: String
  devicename_not: String
  devicename_in: [String!]
  devicename_not_in: [String!]
  devicename_lt: String
  devicename_lte: String
  devicename_gt: String
  devicename_gte: String
  devicename_contains: String
  devicename_not_contains: String
  devicename_starts_with: String
  devicename_not_starts_with: String
  devicename_ends_with: String
  devicename_not_ends_with: String
  devicetype: Int
  devicetype_not: Int
  devicetype_in: [Int!]
  devicetype_not_in: [Int!]
  devicetype_lt: Int
  devicetype_lte: Int
  devicetype_gt: Int
  devicetype_gte: Int
  ip: String
  ip_not: String
  ip_in: [String!]
  ip_not_in: [String!]
  ip_lt: String
  ip_lte: String
  ip_gt: String
  ip_gte: String
  ip_contains: String
  ip_not_contains: String
  ip_starts_with: String
  ip_not_starts_with: String
  ip_ends_with: String
  ip_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  muserid: String
  muserid_not: String
  muserid_in: [String!]
  muserid_not_in: [String!]
  muserid_lt: String
  muserid_lte: String
  muserid_gt: String
  muserid_gte: String
  muserid_contains: String
  muserid_not_contains: String
  muserid_starts_with: String
  muserid_not_starts_with: String
  muserid_ends_with: String
  muserid_not_ends_with: String
  pid: String
  pid_not: String
  pid_in: [String!]
  pid_not_in: [String!]
  pid_lt: String
  pid_lte: String
  pid_gt: String
  pid_gte: String
  pid_contains: String
  pid_not_contains: String
  pid_starts_with: String
  pid_not_starts_with: String
  pid_ends_with: String
  pid_not_ends_with: String
  s: Int
  s_not: Int
  s_in: [Int!]
  s_not_in: [Int!]
  s_lt: Int
  s_lte: Int
  s_gt: Int
  s_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userid: String
  userid_not: String
  userid_in: [String!]
  userid_not_in: [String!]
  userid_lt: String
  userid_lte: String
  userid_gt: String
  userid_gte: String
  userid_contains: String
  userid_not_contains: String
  userid_starts_with: String
  userid_not_starts_with: String
  userid_ends_with: String
  userid_not_ends_with: String
  xu: Int
  xu_not: Int
  xu_in: [Int!]
  xu_not_in: [Int!]
  xu_lt: Int
  xu_lte: Int
  xu_gt: Int
  xu_gte: Int
  AND: [ChongduViewcountWhereInput!]
  OR: [ChongduViewcountWhereInput!]
  NOT: [ChongduViewcountWhereInput!]
}

input ChongduViewcountWhereUniqueInput {
  id: Int
}

type ChongduWorld {
  id: Int!
  activityName: String
  commentStatus: Int
  ct: String
  d: Int
  description: String
  gif: String
  height: Float
  image: String
  joinCount: Int
  latitude: String
  longitude: String
  praiseCount: Int
  shareCount: Int
  type: Int
  userId: ChongduUser
  video: String
  viewCount: Int
  width: Float
}

type ChongduWorldComment {
  id: Int!
  content: String
  ct: String
  d: Int
  praiseCount: Int
  status: Int
  userId: String
  worldId: Int
}

type ChongduWorldCommentConnection {
  pageInfo: PageInfo!
  edges: [ChongduWorldCommentEdge]!
  aggregate: AggregateChongduWorldComment!
}

input ChongduWorldCommentCreateInput {
  id: Int
  content: String
  ct: String
  d: Int
  praiseCount: Int
  status: Int
  userId: String
  worldId: Int
}

type ChongduWorldCommentEdge {
  node: ChongduWorldComment!
  cursor: String!
}

enum ChongduWorldCommentOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  praiseCount_ASC
  praiseCount_DESC
  status_ASC
  status_DESC
  userId_ASC
  userId_DESC
  worldId_ASC
  worldId_DESC
}

type ChongduWorldCommentPreviousValues {
  id: Int!
  content: String
  ct: String
  d: Int
  praiseCount: Int
  status: Int
  userId: String
  worldId: Int
}

type ChongduWorldCommentSubscriptionPayload {
  mutation: MutationType!
  node: ChongduWorldComment
  updatedFields: [String!]
  previousValues: ChongduWorldCommentPreviousValues
}

input ChongduWorldCommentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduWorldCommentWhereInput
  AND: [ChongduWorldCommentSubscriptionWhereInput!]
  OR: [ChongduWorldCommentSubscriptionWhereInput!]
  NOT: [ChongduWorldCommentSubscriptionWhereInput!]
}

input ChongduWorldCommentUpdateInput {
  content: String
  ct: String
  d: Int
  praiseCount: Int
  status: Int
  userId: String
  worldId: Int
}

input ChongduWorldCommentUpdateManyMutationInput {
  content: String
  ct: String
  d: Int
  praiseCount: Int
  status: Int
  userId: String
  worldId: Int
}

input ChongduWorldCommentWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  praiseCount: Int
  praiseCount_not: Int
  praiseCount_in: [Int!]
  praiseCount_not_in: [Int!]
  praiseCount_lt: Int
  praiseCount_lte: Int
  praiseCount_gt: Int
  praiseCount_gte: Int
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  worldId: Int
  worldId_not: Int
  worldId_in: [Int!]
  worldId_not_in: [Int!]
  worldId_lt: Int
  worldId_lte: Int
  worldId_gt: Int
  worldId_gte: Int
  AND: [ChongduWorldCommentWhereInput!]
  OR: [ChongduWorldCommentWhereInput!]
  NOT: [ChongduWorldCommentWhereInput!]
}

input ChongduWorldCommentWhereUniqueInput {
  id: Int
}

type ChongduWorldConnection {
  pageInfo: PageInfo!
  edges: [ChongduWorldEdge]!
  aggregate: AggregateChongduWorld!
}

input ChongduWorldCreateInput {
  id: Int
  activityName: String
  commentStatus: Int
  ct: String
  d: Int
  description: String
  gif: String
  height: Float
  image: String
  joinCount: Int
  latitude: String
  longitude: String
  praiseCount: Int
  shareCount: Int
  type: Int
  userId: ChongduUserCreateOneInput
  video: String
  viewCount: Int
  width: Float
}

input ChongduWorldCreateOneInput {
  create: ChongduWorldCreateInput
  connect: ChongduWorldWhereUniqueInput
}

type ChongduWorldEdge {
  node: ChongduWorld!
  cursor: String!
}

type ChongduWorldJoin {
  id: Int!
  ct: String
  d: Int
  type: Int
  userId: String
  worldId: Int
}

type ChongduWorldJoinConnection {
  pageInfo: PageInfo!
  edges: [ChongduWorldJoinEdge]!
  aggregate: AggregateChongduWorldJoin!
}

input ChongduWorldJoinCreateInput {
  id: Int
  ct: String
  d: Int
  type: Int
  userId: String
  worldId: Int
}

type ChongduWorldJoinEdge {
  node: ChongduWorldJoin!
  cursor: String!
}

enum ChongduWorldJoinOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
  worldId_ASC
  worldId_DESC
}

type ChongduWorldJoinPreviousValues {
  id: Int!
  ct: String
  d: Int
  type: Int
  userId: String
  worldId: Int
}

type ChongduWorldJoinSubscriptionPayload {
  mutation: MutationType!
  node: ChongduWorldJoin
  updatedFields: [String!]
  previousValues: ChongduWorldJoinPreviousValues
}

input ChongduWorldJoinSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduWorldJoinWhereInput
  AND: [ChongduWorldJoinSubscriptionWhereInput!]
  OR: [ChongduWorldJoinSubscriptionWhereInput!]
  NOT: [ChongduWorldJoinSubscriptionWhereInput!]
}

input ChongduWorldJoinUpdateInput {
  ct: String
  d: Int
  type: Int
  userId: String
  worldId: Int
}

input ChongduWorldJoinUpdateManyMutationInput {
  ct: String
  d: Int
  type: Int
  userId: String
  worldId: Int
}

input ChongduWorldJoinWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  worldId: Int
  worldId_not: Int
  worldId_in: [Int!]
  worldId_not_in: [Int!]
  worldId_lt: Int
  worldId_lte: Int
  worldId_gt: Int
  worldId_gte: Int
  AND: [ChongduWorldJoinWhereInput!]
  OR: [ChongduWorldJoinWhereInput!]
  NOT: [ChongduWorldJoinWhereInput!]
}

input ChongduWorldJoinWhereUniqueInput {
  id: Int
}

type ChongduWorldLike {
  id: Int!
  ct: String
  d: Int
  relateId: Int
  type: Int
  userId: String
}

type ChongduWorldLikeConnection {
  pageInfo: PageInfo!
  edges: [ChongduWorldLikeEdge]!
  aggregate: AggregateChongduWorldLike!
}

input ChongduWorldLikeCreateInput {
  id: Int
  ct: String
  d: Int
  relateId: Int
  type: Int
  userId: String
}

type ChongduWorldLikeEdge {
  node: ChongduWorldLike!
  cursor: String!
}

enum ChongduWorldLikeOrderByInput {
  id_ASC
  id_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  relateId_ASC
  relateId_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
}

type ChongduWorldLikePreviousValues {
  id: Int!
  ct: String
  d: Int
  relateId: Int
  type: Int
  userId: String
}

type ChongduWorldLikeSubscriptionPayload {
  mutation: MutationType!
  node: ChongduWorldLike
  updatedFields: [String!]
  previousValues: ChongduWorldLikePreviousValues
}

input ChongduWorldLikeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduWorldLikeWhereInput
  AND: [ChongduWorldLikeSubscriptionWhereInput!]
  OR: [ChongduWorldLikeSubscriptionWhereInput!]
  NOT: [ChongduWorldLikeSubscriptionWhereInput!]
}

input ChongduWorldLikeUpdateInput {
  ct: String
  d: Int
  relateId: Int
  type: Int
  userId: String
}

input ChongduWorldLikeUpdateManyMutationInput {
  ct: String
  d: Int
  relateId: Int
  type: Int
  userId: String
}

input ChongduWorldLikeWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  relateId: Int
  relateId_not: Int
  relateId_in: [Int!]
  relateId_not_in: [Int!]
  relateId_lt: Int
  relateId_lte: Int
  relateId_gt: Int
  relateId_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduWorldLikeWhereInput!]
  OR: [ChongduWorldLikeWhereInput!]
  NOT: [ChongduWorldLikeWhereInput!]
}

input ChongduWorldLikeWhereUniqueInput {
  id: Int
}

enum ChongduWorldOrderByInput {
  id_ASC
  id_DESC
  activityName_ASC
  activityName_DESC
  commentStatus_ASC
  commentStatus_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  description_ASC
  description_DESC
  gif_ASC
  gif_DESC
  height_ASC
  height_DESC
  image_ASC
  image_DESC
  joinCount_ASC
  joinCount_DESC
  latitude_ASC
  latitude_DESC
  longitude_ASC
  longitude_DESC
  praiseCount_ASC
  praiseCount_DESC
  shareCount_ASC
  shareCount_DESC
  type_ASC
  type_DESC
  video_ASC
  video_DESC
  viewCount_ASC
  viewCount_DESC
  width_ASC
  width_DESC
}

type ChongduWorldPreviousValues {
  id: Int!
  activityName: String
  commentStatus: Int
  ct: String
  d: Int
  description: String
  gif: String
  height: Float
  image: String
  joinCount: Int
  latitude: String
  longitude: String
  praiseCount: Int
  shareCount: Int
  type: Int
  video: String
  viewCount: Int
  width: Float
}

type ChongduWorldReply {
  id: Int!
  commentId: Int
  content: String
  ct: String
  d: Int
  praiseCount: Int
  replyuserId: String
  userId: String
}

type ChongduWorldReplyConnection {
  pageInfo: PageInfo!
  edges: [ChongduWorldReplyEdge]!
  aggregate: AggregateChongduWorldReply!
}

input ChongduWorldReplyCreateInput {
  id: Int
  commentId: Int
  content: String
  ct: String
  d: Int
  praiseCount: Int
  replyuserId: String
  userId: String
}

type ChongduWorldReplyEdge {
  node: ChongduWorldReply!
  cursor: String!
}

enum ChongduWorldReplyOrderByInput {
  id_ASC
  id_DESC
  commentId_ASC
  commentId_DESC
  content_ASC
  content_DESC
  ct_ASC
  ct_DESC
  d_ASC
  d_DESC
  praiseCount_ASC
  praiseCount_DESC
  replyuserId_ASC
  replyuserId_DESC
  userId_ASC
  userId_DESC
}

type ChongduWorldReplyPreviousValues {
  id: Int!
  commentId: Int
  content: String
  ct: String
  d: Int
  praiseCount: Int
  replyuserId: String
  userId: String
}

type ChongduWorldReplySubscriptionPayload {
  mutation: MutationType!
  node: ChongduWorldReply
  updatedFields: [String!]
  previousValues: ChongduWorldReplyPreviousValues
}

input ChongduWorldReplySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduWorldReplyWhereInput
  AND: [ChongduWorldReplySubscriptionWhereInput!]
  OR: [ChongduWorldReplySubscriptionWhereInput!]
  NOT: [ChongduWorldReplySubscriptionWhereInput!]
}

input ChongduWorldReplyUpdateInput {
  commentId: Int
  content: String
  ct: String
  d: Int
  praiseCount: Int
  replyuserId: String
  userId: String
}

input ChongduWorldReplyUpdateManyMutationInput {
  commentId: Int
  content: String
  ct: String
  d: Int
  praiseCount: Int
  replyuserId: String
  userId: String
}

input ChongduWorldReplyWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  commentId: Int
  commentId_not: Int
  commentId_in: [Int!]
  commentId_not_in: [Int!]
  commentId_lt: Int
  commentId_lte: Int
  commentId_gt: Int
  commentId_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  praiseCount: Int
  praiseCount_not: Int
  praiseCount_in: [Int!]
  praiseCount_not_in: [Int!]
  praiseCount_lt: Int
  praiseCount_lte: Int
  praiseCount_gt: Int
  praiseCount_gte: Int
  replyuserId: String
  replyuserId_not: String
  replyuserId_in: [String!]
  replyuserId_not_in: [String!]
  replyuserId_lt: String
  replyuserId_lte: String
  replyuserId_gt: String
  replyuserId_gte: String
  replyuserId_contains: String
  replyuserId_not_contains: String
  replyuserId_starts_with: String
  replyuserId_not_starts_with: String
  replyuserId_ends_with: String
  replyuserId_not_ends_with: String
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ChongduWorldReplyWhereInput!]
  OR: [ChongduWorldReplyWhereInput!]
  NOT: [ChongduWorldReplyWhereInput!]
}

input ChongduWorldReplyWhereUniqueInput {
  id: Int
}

type ChongduWorldShield {
  id: Int!
  type: Int
  worldId: ChongduWorld
  userId: ChongduUser
  shieldBy: String
  status: Int
  ct: String
  mt: String
  d: Int
}

type ChongduWorldShieldConnection {
  pageInfo: PageInfo!
  edges: [ChongduWorldShieldEdge]!
  aggregate: AggregateChongduWorldShield!
}

input ChongduWorldShieldCreateInput {
  id: Int
  type: Int
  worldId: ChongduWorldCreateOneInput
  userId: ChongduUserCreateOneInput
  shieldBy: String
  status: Int
  ct: String
  mt: String
  d: Int
}

type ChongduWorldShieldEdge {
  node: ChongduWorldShield!
  cursor: String!
}

enum ChongduWorldShieldOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  shieldBy_ASC
  shieldBy_DESC
  status_ASC
  status_DESC
  ct_ASC
  ct_DESC
  mt_ASC
  mt_DESC
  d_ASC
  d_DESC
}

type ChongduWorldShieldPreviousValues {
  id: Int!
  type: Int
  shieldBy: String
  status: Int
  ct: String
  mt: String
  d: Int
}

type ChongduWorldShieldSubscriptionPayload {
  mutation: MutationType!
  node: ChongduWorldShield
  updatedFields: [String!]
  previousValues: ChongduWorldShieldPreviousValues
}

input ChongduWorldShieldSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduWorldShieldWhereInput
  AND: [ChongduWorldShieldSubscriptionWhereInput!]
  OR: [ChongduWorldShieldSubscriptionWhereInput!]
  NOT: [ChongduWorldShieldSubscriptionWhereInput!]
}

input ChongduWorldShieldUpdateInput {
  type: Int
  worldId: ChongduWorldUpdateOneInput
  userId: ChongduUserUpdateOneInput
  shieldBy: String
  status: Int
  ct: String
  mt: String
  d: Int
}

input ChongduWorldShieldUpdateManyMutationInput {
  type: Int
  shieldBy: String
  status: Int
  ct: String
  mt: String
  d: Int
}

input ChongduWorldShieldWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  worldId: ChongduWorldWhereInput
  userId: ChongduUserWhereInput
  shieldBy: String
  shieldBy_not: String
  shieldBy_in: [String!]
  shieldBy_not_in: [String!]
  shieldBy_lt: String
  shieldBy_lte: String
  shieldBy_gt: String
  shieldBy_gte: String
  shieldBy_contains: String
  shieldBy_not_contains: String
  shieldBy_starts_with: String
  shieldBy_not_starts_with: String
  shieldBy_ends_with: String
  shieldBy_not_ends_with: String
  status: Int
  status_not: Int
  status_in: [Int!]
  status_not_in: [Int!]
  status_lt: Int
  status_lte: Int
  status_gt: Int
  status_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  mt: String
  mt_not: String
  mt_in: [String!]
  mt_not_in: [String!]
  mt_lt: String
  mt_lte: String
  mt_gt: String
  mt_gte: String
  mt_contains: String
  mt_not_contains: String
  mt_starts_with: String
  mt_not_starts_with: String
  mt_ends_with: String
  mt_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  AND: [ChongduWorldShieldWhereInput!]
  OR: [ChongduWorldShieldWhereInput!]
  NOT: [ChongduWorldShieldWhereInput!]
}

input ChongduWorldShieldWhereUniqueInput {
  id: Int
}

type ChongduWorldSubscriptionPayload {
  mutation: MutationType!
  node: ChongduWorld
  updatedFields: [String!]
  previousValues: ChongduWorldPreviousValues
}

input ChongduWorldSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChongduWorldWhereInput
  AND: [ChongduWorldSubscriptionWhereInput!]
  OR: [ChongduWorldSubscriptionWhereInput!]
  NOT: [ChongduWorldSubscriptionWhereInput!]
}

input ChongduWorldUpdateDataInput {
  activityName: String
  commentStatus: Int
  ct: String
  d: Int
  description: String
  gif: String
  height: Float
  image: String
  joinCount: Int
  latitude: String
  longitude: String
  praiseCount: Int
  shareCount: Int
  type: Int
  userId: ChongduUserUpdateOneInput
  video: String
  viewCount: Int
  width: Float
}

input ChongduWorldUpdateInput {
  activityName: String
  commentStatus: Int
  ct: String
  d: Int
  description: String
  gif: String
  height: Float
  image: String
  joinCount: Int
  latitude: String
  longitude: String
  praiseCount: Int
  shareCount: Int
  type: Int
  userId: ChongduUserUpdateOneInput
  video: String
  viewCount: Int
  width: Float
}

input ChongduWorldUpdateManyMutationInput {
  activityName: String
  commentStatus: Int
  ct: String
  d: Int
  description: String
  gif: String
  height: Float
  image: String
  joinCount: Int
  latitude: String
  longitude: String
  praiseCount: Int
  shareCount: Int
  type: Int
  video: String
  viewCount: Int
  width: Float
}

input ChongduWorldUpdateOneInput {
  create: ChongduWorldCreateInput
  update: ChongduWorldUpdateDataInput
  upsert: ChongduWorldUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: ChongduWorldWhereUniqueInput
}

input ChongduWorldUpsertNestedInput {
  update: ChongduWorldUpdateDataInput!
  create: ChongduWorldCreateInput!
}

input ChongduWorldWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  activityName: String
  activityName_not: String
  activityName_in: [String!]
  activityName_not_in: [String!]
  activityName_lt: String
  activityName_lte: String
  activityName_gt: String
  activityName_gte: String
  activityName_contains: String
  activityName_not_contains: String
  activityName_starts_with: String
  activityName_not_starts_with: String
  activityName_ends_with: String
  activityName_not_ends_with: String
  commentStatus: Int
  commentStatus_not: Int
  commentStatus_in: [Int!]
  commentStatus_not_in: [Int!]
  commentStatus_lt: Int
  commentStatus_lte: Int
  commentStatus_gt: Int
  commentStatus_gte: Int
  ct: String
  ct_not: String
  ct_in: [String!]
  ct_not_in: [String!]
  ct_lt: String
  ct_lte: String
  ct_gt: String
  ct_gte: String
  ct_contains: String
  ct_not_contains: String
  ct_starts_with: String
  ct_not_starts_with: String
  ct_ends_with: String
  ct_not_ends_with: String
  d: Int
  d_not: Int
  d_in: [Int!]
  d_not_in: [Int!]
  d_lt: Int
  d_lte: Int
  d_gt: Int
  d_gte: Int
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  gif: String
  gif_not: String
  gif_in: [String!]
  gif_not_in: [String!]
  gif_lt: String
  gif_lte: String
  gif_gt: String
  gif_gte: String
  gif_contains: String
  gif_not_contains: String
  gif_starts_with: String
  gif_not_starts_with: String
  gif_ends_with: String
  gif_not_ends_with: String
  height: Float
  height_not: Float
  height_in: [Float!]
  height_not_in: [Float!]
  height_lt: Float
  height_lte: Float
  height_gt: Float
  height_gte: Float
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  joinCount: Int
  joinCount_not: Int
  joinCount_in: [Int!]
  joinCount_not_in: [Int!]
  joinCount_lt: Int
  joinCount_lte: Int
  joinCount_gt: Int
  joinCount_gte: Int
  latitude: String
  latitude_not: String
  latitude_in: [String!]
  latitude_not_in: [String!]
  latitude_lt: String
  latitude_lte: String
  latitude_gt: String
  latitude_gte: String
  latitude_contains: String
  latitude_not_contains: String
  latitude_starts_with: String
  latitude_not_starts_with: String
  latitude_ends_with: String
  latitude_not_ends_with: String
  longitude: String
  longitude_not: String
  longitude_in: [String!]
  longitude_not_in: [String!]
  longitude_lt: String
  longitude_lte: String
  longitude_gt: String
  longitude_gte: String
  longitude_contains: String
  longitude_not_contains: String
  longitude_starts_with: String
  longitude_not_starts_with: String
  longitude_ends_with: String
  longitude_not_ends_with: String
  praiseCount: Int
  praiseCount_not: Int
  praiseCount_in: [Int!]
  praiseCount_not_in: [Int!]
  praiseCount_lt: Int
  praiseCount_lte: Int
  praiseCount_gt: Int
  praiseCount_gte: Int
  shareCount: Int
  shareCount_not: Int
  shareCount_in: [Int!]
  shareCount_not_in: [Int!]
  shareCount_lt: Int
  shareCount_lte: Int
  shareCount_gt: Int
  shareCount_gte: Int
  type: Int
  type_not: Int
  type_in: [Int!]
  type_not_in: [Int!]
  type_lt: Int
  type_lte: Int
  type_gt: Int
  type_gte: Int
  userId: ChongduUserWhereInput
  video: String
  video_not: String
  video_in: [String!]
  video_not_in: [String!]
  video_lt: String
  video_lte: String
  video_gt: String
  video_gte: String
  video_contains: String
  video_not_contains: String
  video_starts_with: String
  video_not_starts_with: String
  video_ends_with: String
  video_not_ends_with: String
  viewCount: Int
  viewCount_not: Int
  viewCount_in: [Int!]
  viewCount_not_in: [Int!]
  viewCount_lt: Int
  viewCount_lte: Int
  viewCount_gt: Int
  viewCount_gte: Int
  width: Float
  width_not: Float
  width_in: [Float!]
  width_not_in: [Float!]
  width_lt: Float
  width_lte: Float
  width_gt: Float
  width_gte: Float
  AND: [ChongduWorldWhereInput!]
  OR: [ChongduWorldWhereInput!]
  NOT: [ChongduWorldWhereInput!]
}

input ChongduWorldWhereUniqueInput {
  id: Int
}

scalar DateTime

scalar Long

type Mutation {
  createChongduAccount(data: ChongduAccountCreateInput!): ChongduAccount!
  updateChongduAccount(data: ChongduAccountUpdateInput!, where: ChongduAccountWhereUniqueInput!): ChongduAccount
  updateManyChongduAccounts(data: ChongduAccountUpdateManyMutationInput!, where: ChongduAccountWhereInput): BatchPayload!
  upsertChongduAccount(where: ChongduAccountWhereUniqueInput!, create: ChongduAccountCreateInput!, update: ChongduAccountUpdateInput!): ChongduAccount!
  deleteChongduAccount(where: ChongduAccountWhereUniqueInput!): ChongduAccount
  deleteManyChongduAccounts(where: ChongduAccountWhereInput): BatchPayload!
  createChongduAddress(data: ChongduAddressCreateInput!): ChongduAddress!
  updateChongduAddress(data: ChongduAddressUpdateInput!, where: ChongduAddressWhereUniqueInput!): ChongduAddress
  updateManyChongduAddresses(data: ChongduAddressUpdateManyMutationInput!, where: ChongduAddressWhereInput): BatchPayload!
  upsertChongduAddress(where: ChongduAddressWhereUniqueInput!, create: ChongduAddressCreateInput!, update: ChongduAddressUpdateInput!): ChongduAddress!
  deleteChongduAddress(where: ChongduAddressWhereUniqueInput!): ChongduAddress
  deleteManyChongduAddresses(where: ChongduAddressWhereInput): BatchPayload!
  createChongduAddressRelation(data: ChongduAddressRelationCreateInput!): ChongduAddressRelation!
  updateChongduAddressRelation(data: ChongduAddressRelationUpdateInput!, where: ChongduAddressRelationWhereUniqueInput!): ChongduAddressRelation
  updateManyChongduAddressRelations(data: ChongduAddressRelationUpdateManyMutationInput!, where: ChongduAddressRelationWhereInput): BatchPayload!
  upsertChongduAddressRelation(where: ChongduAddressRelationWhereUniqueInput!, create: ChongduAddressRelationCreateInput!, update: ChongduAddressRelationUpdateInput!): ChongduAddressRelation!
  deleteChongduAddressRelation(where: ChongduAddressRelationWhereUniqueInput!): ChongduAddressRelation
  deleteManyChongduAddressRelations(where: ChongduAddressRelationWhereInput): BatchPayload!
  createChongduAdmin(data: ChongduAdminCreateInput!): ChongduAdmin!
  updateChongduAdmin(data: ChongduAdminUpdateInput!, where: ChongduAdminWhereUniqueInput!): ChongduAdmin
  updateManyChongduAdmins(data: ChongduAdminUpdateManyMutationInput!, where: ChongduAdminWhereInput): BatchPayload!
  upsertChongduAdmin(where: ChongduAdminWhereUniqueInput!, create: ChongduAdminCreateInput!, update: ChongduAdminUpdateInput!): ChongduAdmin!
  deleteChongduAdmin(where: ChongduAdminWhereUniqueInput!): ChongduAdmin
  deleteManyChongduAdmins(where: ChongduAdminWhereInput): BatchPayload!
  createChongduAdminRole(data: ChongduAdminRoleCreateInput!): ChongduAdminRole!
  updateChongduAdminRole(data: ChongduAdminRoleUpdateInput!, where: ChongduAdminRoleWhereUniqueInput!): ChongduAdminRole
  updateManyChongduAdminRoles(data: ChongduAdminRoleUpdateManyMutationInput!, where: ChongduAdminRoleWhereInput): BatchPayload!
  upsertChongduAdminRole(where: ChongduAdminRoleWhereUniqueInput!, create: ChongduAdminRoleCreateInput!, update: ChongduAdminRoleUpdateInput!): ChongduAdminRole!
  deleteChongduAdminRole(where: ChongduAdminRoleWhereUniqueInput!): ChongduAdminRole
  deleteManyChongduAdminRoles(where: ChongduAdminRoleWhereInput): BatchPayload!
  createChongduAdvertisement(data: ChongduAdvertisementCreateInput!): ChongduAdvertisement!
  updateChongduAdvertisement(data: ChongduAdvertisementUpdateInput!, where: ChongduAdvertisementWhereUniqueInput!): ChongduAdvertisement
  updateManyChongduAdvertisements(data: ChongduAdvertisementUpdateManyMutationInput!, where: ChongduAdvertisementWhereInput): BatchPayload!
  upsertChongduAdvertisement(where: ChongduAdvertisementWhereUniqueInput!, create: ChongduAdvertisementCreateInput!, update: ChongduAdvertisementUpdateInput!): ChongduAdvertisement!
  deleteChongduAdvertisement(where: ChongduAdvertisementWhereUniqueInput!): ChongduAdvertisement
  deleteManyChongduAdvertisements(where: ChongduAdvertisementWhereInput): BatchPayload!
  createChongduAdvice(data: ChongduAdviceCreateInput!): ChongduAdvice!
  updateChongduAdvice(data: ChongduAdviceUpdateInput!, where: ChongduAdviceWhereUniqueInput!): ChongduAdvice
  updateManyChongduAdvices(data: ChongduAdviceUpdateManyMutationInput!, where: ChongduAdviceWhereInput): BatchPayload!
  upsertChongduAdvice(where: ChongduAdviceWhereUniqueInput!, create: ChongduAdviceCreateInput!, update: ChongduAdviceUpdateInput!): ChongduAdvice!
  deleteChongduAdvice(where: ChongduAdviceWhereUniqueInput!): ChongduAdvice
  deleteManyChongduAdvices(where: ChongduAdviceWhereInput): BatchPayload!
  createChongduAgent(data: ChongduAgentCreateInput!): ChongduAgent!
  updateChongduAgent(data: ChongduAgentUpdateInput!, where: ChongduAgentWhereUniqueInput!): ChongduAgent
  updateManyChongduAgents(data: ChongduAgentUpdateManyMutationInput!, where: ChongduAgentWhereInput): BatchPayload!
  upsertChongduAgent(where: ChongduAgentWhereUniqueInput!, create: ChongduAgentCreateInput!, update: ChongduAgentUpdateInput!): ChongduAgent!
  deleteChongduAgent(where: ChongduAgentWhereUniqueInput!): ChongduAgent
  deleteManyChongduAgents(where: ChongduAgentWhereInput): BatchPayload!
  createChongduAppVersion(data: ChongduAppVersionCreateInput!): ChongduAppVersion!
  updateChongduAppVersion(data: ChongduAppVersionUpdateInput!, where: ChongduAppVersionWhereUniqueInput!): ChongduAppVersion
  updateManyChongduAppVersions(data: ChongduAppVersionUpdateManyMutationInput!, where: ChongduAppVersionWhereInput): BatchPayload!
  upsertChongduAppVersion(where: ChongduAppVersionWhereUniqueInput!, create: ChongduAppVersionCreateInput!, update: ChongduAppVersionUpdateInput!): ChongduAppVersion!
  deleteChongduAppVersion(where: ChongduAppVersionWhereUniqueInput!): ChongduAppVersion
  deleteManyChongduAppVersions(where: ChongduAppVersionWhereInput): BatchPayload!
  createChongduAppointment(data: ChongduAppointmentCreateInput!): ChongduAppointment!
  updateChongduAppointment(data: ChongduAppointmentUpdateInput!, where: ChongduAppointmentWhereUniqueInput!): ChongduAppointment
  updateManyChongduAppointments(data: ChongduAppointmentUpdateManyMutationInput!, where: ChongduAppointmentWhereInput): BatchPayload!
  upsertChongduAppointment(where: ChongduAppointmentWhereUniqueInput!, create: ChongduAppointmentCreateInput!, update: ChongduAppointmentUpdateInput!): ChongduAppointment!
  deleteChongduAppointment(where: ChongduAppointmentWhereUniqueInput!): ChongduAppointment
  deleteManyChongduAppointments(where: ChongduAppointmentWhereInput): BatchPayload!
  createChongduCart(data: ChongduCartCreateInput!): ChongduCart!
  updateChongduCart(data: ChongduCartUpdateInput!, where: ChongduCartWhereUniqueInput!): ChongduCart
  updateManyChongduCarts(data: ChongduCartUpdateManyMutationInput!, where: ChongduCartWhereInput): BatchPayload!
  upsertChongduCart(where: ChongduCartWhereUniqueInput!, create: ChongduCartCreateInput!, update: ChongduCartUpdateInput!): ChongduCart!
  deleteChongduCart(where: ChongduCartWhereUniqueInput!): ChongduCart
  deleteManyChongduCarts(where: ChongduCartWhereInput): BatchPayload!
  createChongduCity(data: ChongduCityCreateInput!): ChongduCity!
  updateChongduCity(data: ChongduCityUpdateInput!, where: ChongduCityWhereUniqueInput!): ChongduCity
  updateManyChongduCities(data: ChongduCityUpdateManyMutationInput!, where: ChongduCityWhereInput): BatchPayload!
  upsertChongduCity(where: ChongduCityWhereUniqueInput!, create: ChongduCityCreateInput!, update: ChongduCityUpdateInput!): ChongduCity!
  deleteChongduCity(where: ChongduCityWhereUniqueInput!): ChongduCity
  deleteManyChongduCities(where: ChongduCityWhereInput): BatchPayload!
  createChongduComment(data: ChongduCommentCreateInput!): ChongduComment!
  updateChongduComment(data: ChongduCommentUpdateInput!, where: ChongduCommentWhereUniqueInput!): ChongduComment
  updateManyChongduComments(data: ChongduCommentUpdateManyMutationInput!, where: ChongduCommentWhereInput): BatchPayload!
  upsertChongduComment(where: ChongduCommentWhereUniqueInput!, create: ChongduCommentCreateInput!, update: ChongduCommentUpdateInput!): ChongduComment!
  deleteChongduComment(where: ChongduCommentWhereUniqueInput!): ChongduComment
  deleteManyChongduComments(where: ChongduCommentWhereInput): BatchPayload!
  createChongduCommentPraise(data: ChongduCommentPraiseCreateInput!): ChongduCommentPraise!
  updateChongduCommentPraise(data: ChongduCommentPraiseUpdateInput!, where: ChongduCommentPraiseWhereUniqueInput!): ChongduCommentPraise
  updateManyChongduCommentPraises(data: ChongduCommentPraiseUpdateManyMutationInput!, where: ChongduCommentPraiseWhereInput): BatchPayload!
  upsertChongduCommentPraise(where: ChongduCommentPraiseWhereUniqueInput!, create: ChongduCommentPraiseCreateInput!, update: ChongduCommentPraiseUpdateInput!): ChongduCommentPraise!
  deleteChongduCommentPraise(where: ChongduCommentPraiseWhereUniqueInput!): ChongduCommentPraise
  deleteManyChongduCommentPraises(where: ChongduCommentPraiseWhereInput): BatchPayload!
  createChongduCommentReply(data: ChongduCommentReplyCreateInput!): ChongduCommentReply!
  updateChongduCommentReply(data: ChongduCommentReplyUpdateInput!, where: ChongduCommentReplyWhereUniqueInput!): ChongduCommentReply
  updateManyChongduCommentReplies(data: ChongduCommentReplyUpdateManyMutationInput!, where: ChongduCommentReplyWhereInput): BatchPayload!
  upsertChongduCommentReply(where: ChongduCommentReplyWhereUniqueInput!, create: ChongduCommentReplyCreateInput!, update: ChongduCommentReplyUpdateInput!): ChongduCommentReply!
  deleteChongduCommentReply(where: ChongduCommentReplyWhereUniqueInput!): ChongduCommentReply
  deleteManyChongduCommentReplies(where: ChongduCommentReplyWhereInput): BatchPayload!
  createChongduCommentReview(data: ChongduCommentReviewCreateInput!): ChongduCommentReview!
  updateChongduCommentReview(data: ChongduCommentReviewUpdateInput!, where: ChongduCommentReviewWhereUniqueInput!): ChongduCommentReview
  updateManyChongduCommentReviews(data: ChongduCommentReviewUpdateManyMutationInput!, where: ChongduCommentReviewWhereInput): BatchPayload!
  upsertChongduCommentReview(where: ChongduCommentReviewWhereUniqueInput!, create: ChongduCommentReviewCreateInput!, update: ChongduCommentReviewUpdateInput!): ChongduCommentReview!
  deleteChongduCommentReview(where: ChongduCommentReviewWhereUniqueInput!): ChongduCommentReview
  deleteManyChongduCommentReviews(where: ChongduCommentReviewWhereInput): BatchPayload!
  createChongduCompanyauthent(data: ChongduCompanyauthentCreateInput!): ChongduCompanyauthent!
  updateChongduCompanyauthent(data: ChongduCompanyauthentUpdateInput!, where: ChongduCompanyauthentWhereUniqueInput!): ChongduCompanyauthent
  updateManyChongduCompanyauthents(data: ChongduCompanyauthentUpdateManyMutationInput!, where: ChongduCompanyauthentWhereInput): BatchPayload!
  upsertChongduCompanyauthent(where: ChongduCompanyauthentWhereUniqueInput!, create: ChongduCompanyauthentCreateInput!, update: ChongduCompanyauthentUpdateInput!): ChongduCompanyauthent!
  deleteChongduCompanyauthent(where: ChongduCompanyauthentWhereUniqueInput!): ChongduCompanyauthent
  deleteManyChongduCompanyauthents(where: ChongduCompanyauthentWhereInput): BatchPayload!
  createChongduCompanyauthentLog(data: ChongduCompanyauthentLogCreateInput!): ChongduCompanyauthentLog!
  updateChongduCompanyauthentLog(data: ChongduCompanyauthentLogUpdateInput!, where: ChongduCompanyauthentLogWhereUniqueInput!): ChongduCompanyauthentLog
  updateManyChongduCompanyauthentLogs(data: ChongduCompanyauthentLogUpdateManyMutationInput!, where: ChongduCompanyauthentLogWhereInput): BatchPayload!
  upsertChongduCompanyauthentLog(where: ChongduCompanyauthentLogWhereUniqueInput!, create: ChongduCompanyauthentLogCreateInput!, update: ChongduCompanyauthentLogUpdateInput!): ChongduCompanyauthentLog!
  deleteChongduCompanyauthentLog(where: ChongduCompanyauthentLogWhereUniqueInput!): ChongduCompanyauthentLog
  deleteManyChongduCompanyauthentLogs(where: ChongduCompanyauthentLogWhereInput): BatchPayload!
  createChongduCompanyrecommend(data: ChongduCompanyrecommendCreateInput!): ChongduCompanyrecommend!
  updateChongduCompanyrecommend(data: ChongduCompanyrecommendUpdateInput!, where: ChongduCompanyrecommendWhereUniqueInput!): ChongduCompanyrecommend
  updateManyChongduCompanyrecommends(data: ChongduCompanyrecommendUpdateManyMutationInput!, where: ChongduCompanyrecommendWhereInput): BatchPayload!
  upsertChongduCompanyrecommend(where: ChongduCompanyrecommendWhereUniqueInput!, create: ChongduCompanyrecommendCreateInput!, update: ChongduCompanyrecommendUpdateInput!): ChongduCompanyrecommend!
  deleteChongduCompanyrecommend(where: ChongduCompanyrecommendWhereUniqueInput!): ChongduCompanyrecommend
  deleteManyChongduCompanyrecommends(where: ChongduCompanyrecommendWhereInput): BatchPayload!
  createChongduCorrelation(data: ChongduCorrelationCreateInput!): ChongduCorrelation!
  updateChongduCorrelation(data: ChongduCorrelationUpdateInput!, where: ChongduCorrelationWhereUniqueInput!): ChongduCorrelation
  updateManyChongduCorrelations(data: ChongduCorrelationUpdateManyMutationInput!, where: ChongduCorrelationWhereInput): BatchPayload!
  upsertChongduCorrelation(where: ChongduCorrelationWhereUniqueInput!, create: ChongduCorrelationCreateInput!, update: ChongduCorrelationUpdateInput!): ChongduCorrelation!
  deleteChongduCorrelation(where: ChongduCorrelationWhereUniqueInput!): ChongduCorrelation
  deleteManyChongduCorrelations(where: ChongduCorrelationWhereInput): BatchPayload!
  createChongduDataVersion(data: ChongduDataVersionCreateInput!): ChongduDataVersion!
  updateChongduDataVersion(data: ChongduDataVersionUpdateInput!, where: ChongduDataVersionWhereUniqueInput!): ChongduDataVersion
  updateManyChongduDataVersions(data: ChongduDataVersionUpdateManyMutationInput!, where: ChongduDataVersionWhereInput): BatchPayload!
  upsertChongduDataVersion(where: ChongduDataVersionWhereUniqueInput!, create: ChongduDataVersionCreateInput!, update: ChongduDataVersionUpdateInput!): ChongduDataVersion!
  deleteChongduDataVersion(where: ChongduDataVersionWhereUniqueInput!): ChongduDataVersion
  deleteManyChongduDataVersions(where: ChongduDataVersionWhereInput): BatchPayload!
  createChongduDiscuss(data: ChongduDiscussCreateInput!): ChongduDiscuss!
  updateChongduDiscuss(data: ChongduDiscussUpdateInput!, where: ChongduDiscussWhereUniqueInput!): ChongduDiscuss
  updateManyChongduDiscusses(data: ChongduDiscussUpdateManyMutationInput!, where: ChongduDiscussWhereInput): BatchPayload!
  upsertChongduDiscuss(where: ChongduDiscussWhereUniqueInput!, create: ChongduDiscussCreateInput!, update: ChongduDiscussUpdateInput!): ChongduDiscuss!
  deleteChongduDiscuss(where: ChongduDiscussWhereUniqueInput!): ChongduDiscuss
  deleteManyChongduDiscusses(where: ChongduDiscussWhereInput): BatchPayload!
  createChongduFilemanage(data: ChongduFilemanageCreateInput!): ChongduFilemanage!
  updateChongduFilemanage(data: ChongduFilemanageUpdateInput!, where: ChongduFilemanageWhereUniqueInput!): ChongduFilemanage
  updateManyChongduFilemanages(data: ChongduFilemanageUpdateManyMutationInput!, where: ChongduFilemanageWhereInput): BatchPayload!
  upsertChongduFilemanage(where: ChongduFilemanageWhereUniqueInput!, create: ChongduFilemanageCreateInput!, update: ChongduFilemanageUpdateInput!): ChongduFilemanage!
  deleteChongduFilemanage(where: ChongduFilemanageWhereUniqueInput!): ChongduFilemanage
  deleteManyChongduFilemanages(where: ChongduFilemanageWhereInput): BatchPayload!
  createChongduFocusing(data: ChongduFocusingCreateInput!): ChongduFocusing!
  updateChongduFocusing(data: ChongduFocusingUpdateInput!, where: ChongduFocusingWhereUniqueInput!): ChongduFocusing
  updateManyChongduFocusings(data: ChongduFocusingUpdateManyMutationInput!, where: ChongduFocusingWhereInput): BatchPayload!
  upsertChongduFocusing(where: ChongduFocusingWhereUniqueInput!, create: ChongduFocusingCreateInput!, update: ChongduFocusingUpdateInput!): ChongduFocusing!
  deleteChongduFocusing(where: ChongduFocusingWhereUniqueInput!): ChongduFocusing
  deleteManyChongduFocusings(where: ChongduFocusingWhereInput): BatchPayload!
  createChongduInform(data: ChongduInformCreateInput!): ChongduInform!
  updateChongduInform(data: ChongduInformUpdateInput!, where: ChongduInformWhereUniqueInput!): ChongduInform
  updateManyChongduInforms(data: ChongduInformUpdateManyMutationInput!, where: ChongduInformWhereInput): BatchPayload!
  upsertChongduInform(where: ChongduInformWhereUniqueInput!, create: ChongduInformCreateInput!, update: ChongduInformUpdateInput!): ChongduInform!
  deleteChongduInform(where: ChongduInformWhereUniqueInput!): ChongduInform
  deleteManyChongduInforms(where: ChongduInformWhereInput): BatchPayload!
  createChongduLock(data: ChongduLockCreateInput!): ChongduLock!
  updateChongduLock(data: ChongduLockUpdateInput!, where: ChongduLockWhereUniqueInput!): ChongduLock
  updateManyChongduLocks(data: ChongduLockUpdateManyMutationInput!, where: ChongduLockWhereInput): BatchPayload!
  upsertChongduLock(where: ChongduLockWhereUniqueInput!, create: ChongduLockCreateInput!, update: ChongduLockUpdateInput!): ChongduLock!
  deleteChongduLock(where: ChongduLockWhereUniqueInput!): ChongduLock
  deleteManyChongduLocks(where: ChongduLockWhereInput): BatchPayload!
  createChongduLog(data: ChongduLogCreateInput!): ChongduLog!
  updateChongduLog(data: ChongduLogUpdateInput!, where: ChongduLogWhereUniqueInput!): ChongduLog
  updateManyChongduLogs(data: ChongduLogUpdateManyMutationInput!, where: ChongduLogWhereInput): BatchPayload!
  upsertChongduLog(where: ChongduLogWhereUniqueInput!, create: ChongduLogCreateInput!, update: ChongduLogUpdateInput!): ChongduLog!
  deleteChongduLog(where: ChongduLogWhereUniqueInput!): ChongduLog
  deleteManyChongduLogs(where: ChongduLogWhereInput): BatchPayload!
  createChongduLoginLog(data: ChongduLoginLogCreateInput!): ChongduLoginLog!
  updateChongduLoginLog(data: ChongduLoginLogUpdateInput!, where: ChongduLoginLogWhereUniqueInput!): ChongduLoginLog
  updateManyChongduLoginLogs(data: ChongduLoginLogUpdateManyMutationInput!, where: ChongduLoginLogWhereInput): BatchPayload!
  upsertChongduLoginLog(where: ChongduLoginLogWhereUniqueInput!, create: ChongduLoginLogCreateInput!, update: ChongduLoginLogUpdateInput!): ChongduLoginLog!
  deleteChongduLoginLog(where: ChongduLoginLogWhereUniqueInput!): ChongduLoginLog
  deleteManyChongduLoginLogs(where: ChongduLoginLogWhereInput): BatchPayload!
  createChongduMenu(data: ChongduMenuCreateInput!): ChongduMenu!
  updateChongduMenu(data: ChongduMenuUpdateInput!, where: ChongduMenuWhereUniqueInput!): ChongduMenu
  updateManyChongduMenus(data: ChongduMenuUpdateManyMutationInput!, where: ChongduMenuWhereInput): BatchPayload!
  upsertChongduMenu(where: ChongduMenuWhereUniqueInput!, create: ChongduMenuCreateInput!, update: ChongduMenuUpdateInput!): ChongduMenu!
  deleteChongduMenu(where: ChongduMenuWhereUniqueInput!): ChongduMenu
  deleteManyChongduMenus(where: ChongduMenuWhereInput): BatchPayload!
  createChongduMerchant(data: ChongduMerchantCreateInput!): ChongduMerchant!
  updateChongduMerchant(data: ChongduMerchantUpdateInput!, where: ChongduMerchantWhereUniqueInput!): ChongduMerchant
  updateManyChongduMerchants(data: ChongduMerchantUpdateManyMutationInput!, where: ChongduMerchantWhereInput): BatchPayload!
  upsertChongduMerchant(where: ChongduMerchantWhereUniqueInput!, create: ChongduMerchantCreateInput!, update: ChongduMerchantUpdateInput!): ChongduMerchant!
  deleteChongduMerchant(where: ChongduMerchantWhereUniqueInput!): ChongduMerchant
  deleteManyChongduMerchants(where: ChongduMerchantWhereInput): BatchPayload!
  createChongduMerchantImg(data: ChongduMerchantImgCreateInput!): ChongduMerchantImg!
  updateChongduMerchantImg(data: ChongduMerchantImgUpdateInput!, where: ChongduMerchantImgWhereUniqueInput!): ChongduMerchantImg
  updateManyChongduMerchantImgs(data: ChongduMerchantImgUpdateManyMutationInput!, where: ChongduMerchantImgWhereInput): BatchPayload!
  upsertChongduMerchantImg(where: ChongduMerchantImgWhereUniqueInput!, create: ChongduMerchantImgCreateInput!, update: ChongduMerchantImgUpdateInput!): ChongduMerchantImg!
  deleteChongduMerchantImg(where: ChongduMerchantImgWhereUniqueInput!): ChongduMerchantImg
  deleteManyChongduMerchantImgs(where: ChongduMerchantImgWhereInput): BatchPayload!
  createChongduMerchantstatistic(data: ChongduMerchantstatisticCreateInput!): ChongduMerchantstatistic!
  updateChongduMerchantstatistic(data: ChongduMerchantstatisticUpdateInput!, where: ChongduMerchantstatisticWhereUniqueInput!): ChongduMerchantstatistic
  updateManyChongduMerchantstatistics(data: ChongduMerchantstatisticUpdateManyMutationInput!, where: ChongduMerchantstatisticWhereInput): BatchPayload!
  upsertChongduMerchantstatistic(where: ChongduMerchantstatisticWhereUniqueInput!, create: ChongduMerchantstatisticCreateInput!, update: ChongduMerchantstatisticUpdateInput!): ChongduMerchantstatistic!
  deleteChongduMerchantstatistic(where: ChongduMerchantstatisticWhereUniqueInput!): ChongduMerchantstatistic
  deleteManyChongduMerchantstatistics(where: ChongduMerchantstatisticWhereInput): BatchPayload!
  createChongduMessage(data: ChongduMessageCreateInput!): ChongduMessage!
  updateChongduMessage(data: ChongduMessageUpdateInput!, where: ChongduMessageWhereUniqueInput!): ChongduMessage
  updateManyChongduMessages(data: ChongduMessageUpdateManyMutationInput!, where: ChongduMessageWhereInput): BatchPayload!
  upsertChongduMessage(where: ChongduMessageWhereUniqueInput!, create: ChongduMessageCreateInput!, update: ChongduMessageUpdateInput!): ChongduMessage!
  deleteChongduMessage(where: ChongduMessageWhereUniqueInput!): ChongduMessage
  deleteManyChongduMessages(where: ChongduMessageWhereInput): BatchPayload!
  createChongduModel(data: ChongduModelCreateInput!): ChongduModel!
  updateChongduModel(data: ChongduModelUpdateInput!, where: ChongduModelWhereUniqueInput!): ChongduModel
  updateManyChongduModels(data: ChongduModelUpdateManyMutationInput!, where: ChongduModelWhereInput): BatchPayload!
  upsertChongduModel(where: ChongduModelWhereUniqueInput!, create: ChongduModelCreateInput!, update: ChongduModelUpdateInput!): ChongduModel!
  deleteChongduModel(where: ChongduModelWhereUniqueInput!): ChongduModel
  deleteManyChongduModels(where: ChongduModelWhereInput): BatchPayload!
  createChongduModeldetail(data: ChongduModeldetailCreateInput!): ChongduModeldetail!
  updateChongduModeldetail(data: ChongduModeldetailUpdateInput!, where: ChongduModeldetailWhereUniqueInput!): ChongduModeldetail
  updateManyChongduModeldetails(data: ChongduModeldetailUpdateManyMutationInput!, where: ChongduModeldetailWhereInput): BatchPayload!
  upsertChongduModeldetail(where: ChongduModeldetailWhereUniqueInput!, create: ChongduModeldetailCreateInput!, update: ChongduModeldetailUpdateInput!): ChongduModeldetail!
  deleteChongduModeldetail(where: ChongduModeldetailWhereUniqueInput!): ChongduModeldetail
  deleteManyChongduModeldetails(where: ChongduModeldetailWhereInput): BatchPayload!
  createChongduOrder(data: ChongduOrderCreateInput!): ChongduOrder!
  updateChongduOrder(data: ChongduOrderUpdateInput!, where: ChongduOrderWhereUniqueInput!): ChongduOrder
  updateManyChongduOrders(data: ChongduOrderUpdateManyMutationInput!, where: ChongduOrderWhereInput): BatchPayload!
  upsertChongduOrder(where: ChongduOrderWhereUniqueInput!, create: ChongduOrderCreateInput!, update: ChongduOrderUpdateInput!): ChongduOrder!
  deleteChongduOrder(where: ChongduOrderWhereUniqueInput!): ChongduOrder
  deleteManyChongduOrders(where: ChongduOrderWhereInput): BatchPayload!
  createChongduOrderItem(data: ChongduOrderItemCreateInput!): ChongduOrderItem!
  updateChongduOrderItem(data: ChongduOrderItemUpdateInput!, where: ChongduOrderItemWhereUniqueInput!): ChongduOrderItem
  updateManyChongduOrderItems(data: ChongduOrderItemUpdateManyMutationInput!, where: ChongduOrderItemWhereInput): BatchPayload!
  upsertChongduOrderItem(where: ChongduOrderItemWhereUniqueInput!, create: ChongduOrderItemCreateInput!, update: ChongduOrderItemUpdateInput!): ChongduOrderItem!
  deleteChongduOrderItem(where: ChongduOrderItemWhereUniqueInput!): ChongduOrderItem
  deleteManyChongduOrderItems(where: ChongduOrderItemWhereInput): BatchPayload!
  createChongduOrderinvoice(data: ChongduOrderinvoiceCreateInput!): ChongduOrderinvoice!
  updateChongduOrderinvoice(data: ChongduOrderinvoiceUpdateInput!, where: ChongduOrderinvoiceWhereUniqueInput!): ChongduOrderinvoice
  updateManyChongduOrderinvoices(data: ChongduOrderinvoiceUpdateManyMutationInput!, where: ChongduOrderinvoiceWhereInput): BatchPayload!
  upsertChongduOrderinvoice(where: ChongduOrderinvoiceWhereUniqueInput!, create: ChongduOrderinvoiceCreateInput!, update: ChongduOrderinvoiceUpdateInput!): ChongduOrderinvoice!
  deleteChongduOrderinvoice(where: ChongduOrderinvoiceWhereUniqueInput!): ChongduOrderinvoice
  deleteManyChongduOrderinvoices(where: ChongduOrderinvoiceWhereInput): BatchPayload!
  createChongduOrderinvoicedetail(data: ChongduOrderinvoicedetailCreateInput!): ChongduOrderinvoicedetail!
  updateChongduOrderinvoicedetail(data: ChongduOrderinvoicedetailUpdateInput!, where: ChongduOrderinvoicedetailWhereUniqueInput!): ChongduOrderinvoicedetail
  updateManyChongduOrderinvoicedetails(data: ChongduOrderinvoicedetailUpdateManyMutationInput!, where: ChongduOrderinvoicedetailWhereInput): BatchPayload!
  upsertChongduOrderinvoicedetail(where: ChongduOrderinvoicedetailWhereUniqueInput!, create: ChongduOrderinvoicedetailCreateInput!, update: ChongduOrderinvoicedetailUpdateInput!): ChongduOrderinvoicedetail!
  deleteChongduOrderinvoicedetail(where: ChongduOrderinvoicedetailWhereUniqueInput!): ChongduOrderinvoicedetail
  deleteManyChongduOrderinvoicedetails(where: ChongduOrderinvoicedetailWhereInput): BatchPayload!
  createChongduOrderserial(data: ChongduOrderserialCreateInput!): ChongduOrderserial!
  updateChongduOrderserial(data: ChongduOrderserialUpdateInput!, where: ChongduOrderserialWhereUniqueInput!): ChongduOrderserial
  updateManyChongduOrderserials(data: ChongduOrderserialUpdateManyMutationInput!, where: ChongduOrderserialWhereInput): BatchPayload!
  upsertChongduOrderserial(where: ChongduOrderserialWhereUniqueInput!, create: ChongduOrderserialCreateInput!, update: ChongduOrderserialUpdateInput!): ChongduOrderserial!
  deleteChongduOrderserial(where: ChongduOrderserialWhereUniqueInput!): ChongduOrderserial
  deleteManyChongduOrderserials(where: ChongduOrderserialWhereInput): BatchPayload!
  createChongduOrderstatistic(data: ChongduOrderstatisticCreateInput!): ChongduOrderstatistic!
  updateChongduOrderstatistic(data: ChongduOrderstatisticUpdateInput!, where: ChongduOrderstatisticWhereUniqueInput!): ChongduOrderstatistic
  updateManyChongduOrderstatistics(data: ChongduOrderstatisticUpdateManyMutationInput!, where: ChongduOrderstatisticWhereInput): BatchPayload!
  upsertChongduOrderstatistic(where: ChongduOrderstatisticWhereUniqueInput!, create: ChongduOrderstatisticCreateInput!, update: ChongduOrderstatisticUpdateInput!): ChongduOrderstatistic!
  deleteChongduOrderstatistic(where: ChongduOrderstatisticWhereUniqueInput!): ChongduOrderstatistic
  deleteManyChongduOrderstatistics(where: ChongduOrderstatisticWhereInput): BatchPayload!
  createChongduPayInfo(data: ChongduPayInfoCreateInput!): ChongduPayInfo!
  updateChongduPayInfo(data: ChongduPayInfoUpdateInput!, where: ChongduPayInfoWhereUniqueInput!): ChongduPayInfo
  updateManyChongduPayInfoes(data: ChongduPayInfoUpdateManyMutationInput!, where: ChongduPayInfoWhereInput): BatchPayload!
  upsertChongduPayInfo(where: ChongduPayInfoWhereUniqueInput!, create: ChongduPayInfoCreateInput!, update: ChongduPayInfoUpdateInput!): ChongduPayInfo!
  deleteChongduPayInfo(where: ChongduPayInfoWhereUniqueInput!): ChongduPayInfo
  deleteManyChongduPayInfoes(where: ChongduPayInfoWhereInput): BatchPayload!
  createChongduPermission(data: ChongduPermissionCreateInput!): ChongduPermission!
  updateChongduPermission(data: ChongduPermissionUpdateInput!, where: ChongduPermissionWhereUniqueInput!): ChongduPermission
  updateManyChongduPermissions(data: ChongduPermissionUpdateManyMutationInput!, where: ChongduPermissionWhereInput): BatchPayload!
  upsertChongduPermission(where: ChongduPermissionWhereUniqueInput!, create: ChongduPermissionCreateInput!, update: ChongduPermissionUpdateInput!): ChongduPermission!
  deleteChongduPermission(where: ChongduPermissionWhereUniqueInput!): ChongduPermission
  deleteManyChongduPermissions(where: ChongduPermissionWhereInput): BatchPayload!
  createChongduPet(data: ChongduPetCreateInput!): ChongduPet!
  updateChongduPet(data: ChongduPetUpdateInput!, where: ChongduPetWhereUniqueInput!): ChongduPet
  updateManyChongduPets(data: ChongduPetUpdateManyMutationInput!, where: ChongduPetWhereInput): BatchPayload!
  upsertChongduPet(where: ChongduPetWhereUniqueInput!, create: ChongduPetCreateInput!, update: ChongduPetUpdateInput!): ChongduPet!
  deleteChongduPet(where: ChongduPetWhereUniqueInput!): ChongduPet
  deleteManyChongduPets(where: ChongduPetWhereInput): BatchPayload!
  createChongduPetCard(data: ChongduPetCardCreateInput!): ChongduPetCard!
  updateChongduPetCard(data: ChongduPetCardUpdateInput!, where: ChongduPetCardWhereUniqueInput!): ChongduPetCard
  updateManyChongduPetCards(data: ChongduPetCardUpdateManyMutationInput!, where: ChongduPetCardWhereInput): BatchPayload!
  upsertChongduPetCard(where: ChongduPetCardWhereUniqueInput!, create: ChongduPetCardCreateInput!, update: ChongduPetCardUpdateInput!): ChongduPetCard!
  deleteChongduPetCard(where: ChongduPetCardWhereUniqueInput!): ChongduPetCard
  deleteManyChongduPetCards(where: ChongduPetCardWhereInput): BatchPayload!
  createChongduPetImg(data: ChongduPetImgCreateInput!): ChongduPetImg!
  updateChongduPetImg(data: ChongduPetImgUpdateInput!, where: ChongduPetImgWhereUniqueInput!): ChongduPetImg
  updateManyChongduPetImgs(data: ChongduPetImgUpdateManyMutationInput!, where: ChongduPetImgWhereInput): BatchPayload!
  upsertChongduPetImg(where: ChongduPetImgWhereUniqueInput!, create: ChongduPetImgCreateInput!, update: ChongduPetImgUpdateInput!): ChongduPetImg!
  deleteChongduPetImg(where: ChongduPetImgWhereUniqueInput!): ChongduPetImg
  deleteManyChongduPetImgs(where: ChongduPetImgWhereInput): BatchPayload!
  createChongduPetRecommend(data: ChongduPetRecommendCreateInput!): ChongduPetRecommend!
  updateChongduPetRecommend(data: ChongduPetRecommendUpdateInput!, where: ChongduPetRecommendWhereUniqueInput!): ChongduPetRecommend
  updateManyChongduPetRecommends(data: ChongduPetRecommendUpdateManyMutationInput!, where: ChongduPetRecommendWhereInput): BatchPayload!
  upsertChongduPetRecommend(where: ChongduPetRecommendWhereUniqueInput!, create: ChongduPetRecommendCreateInput!, update: ChongduPetRecommendUpdateInput!): ChongduPetRecommend!
  deleteChongduPetRecommend(where: ChongduPetRecommendWhereUniqueInput!): ChongduPetRecommend
  deleteManyChongduPetRecommends(where: ChongduPetRecommendWhereInput): BatchPayload!
  createChongduPetType(data: ChongduPetTypeCreateInput!): ChongduPetType!
  updateChongduPetType(data: ChongduPetTypeUpdateInput!, where: ChongduPetTypeWhereUniqueInput!): ChongduPetType
  updateManyChongduPetTypes(data: ChongduPetTypeUpdateManyMutationInput!, where: ChongduPetTypeWhereInput): BatchPayload!
  upsertChongduPetType(where: ChongduPetTypeWhereUniqueInput!, create: ChongduPetTypeCreateInput!, update: ChongduPetTypeUpdateInput!): ChongduPetType!
  deleteChongduPetType(where: ChongduPetTypeWhereUniqueInput!): ChongduPetType
  deleteManyChongduPetTypes(where: ChongduPetTypeWhereInput): BatchPayload!
  createChongduPetauthentLog(data: ChongduPetauthentLogCreateInput!): ChongduPetauthentLog!
  updateChongduPetauthentLog(data: ChongduPetauthentLogUpdateInput!, where: ChongduPetauthentLogWhereUniqueInput!): ChongduPetauthentLog
  updateManyChongduPetauthentLogs(data: ChongduPetauthentLogUpdateManyMutationInput!, where: ChongduPetauthentLogWhereInput): BatchPayload!
  upsertChongduPetauthentLog(where: ChongduPetauthentLogWhereUniqueInput!, create: ChongduPetauthentLogCreateInput!, update: ChongduPetauthentLogUpdateInput!): ChongduPetauthentLog!
  deleteChongduPetauthentLog(where: ChongduPetauthentLogWhereUniqueInput!): ChongduPetauthentLog
  deleteManyChongduPetauthentLogs(where: ChongduPetauthentLogWhereInput): BatchPayload!
  createChongduPetauthentdetail(data: ChongduPetauthentdetailCreateInput!): ChongduPetauthentdetail!
  updateChongduPetauthentdetail(data: ChongduPetauthentdetailUpdateInput!, where: ChongduPetauthentdetailWhereUniqueInput!): ChongduPetauthentdetail
  updateManyChongduPetauthentdetails(data: ChongduPetauthentdetailUpdateManyMutationInput!, where: ChongduPetauthentdetailWhereInput): BatchPayload!
  upsertChongduPetauthentdetail(where: ChongduPetauthentdetailWhereUniqueInput!, create: ChongduPetauthentdetailCreateInput!, update: ChongduPetauthentdetailUpdateInput!): ChongduPetauthentdetail!
  deleteChongduPetauthentdetail(where: ChongduPetauthentdetailWhereUniqueInput!): ChongduPetauthentdetail
  deleteManyChongduPetauthentdetails(where: ChongduPetauthentdetailWhereInput): BatchPayload!
  createChongduPlatformBusiness(data: ChongduPlatformBusinessCreateInput!): ChongduPlatformBusiness!
  updateChongduPlatformBusiness(data: ChongduPlatformBusinessUpdateInput!, where: ChongduPlatformBusinessWhereUniqueInput!): ChongduPlatformBusiness
  updateManyChongduPlatformBusinesses(data: ChongduPlatformBusinessUpdateManyMutationInput!, where: ChongduPlatformBusinessWhereInput): BatchPayload!
  upsertChongduPlatformBusiness(where: ChongduPlatformBusinessWhereUniqueInput!, create: ChongduPlatformBusinessCreateInput!, update: ChongduPlatformBusinessUpdateInput!): ChongduPlatformBusiness!
  deleteChongduPlatformBusiness(where: ChongduPlatformBusinessWhereUniqueInput!): ChongduPlatformBusiness
  deleteManyChongduPlatformBusinesses(where: ChongduPlatformBusinessWhereInput): BatchPayload!
  createChongduPlatformExecute(data: ChongduPlatformExecuteCreateInput!): ChongduPlatformExecute!
  updateChongduPlatformExecute(data: ChongduPlatformExecuteUpdateInput!, where: ChongduPlatformExecuteWhereUniqueInput!): ChongduPlatformExecute
  updateManyChongduPlatformExecutes(data: ChongduPlatformExecuteUpdateManyMutationInput!, where: ChongduPlatformExecuteWhereInput): BatchPayload!
  upsertChongduPlatformExecute(where: ChongduPlatformExecuteWhereUniqueInput!, create: ChongduPlatformExecuteCreateInput!, update: ChongduPlatformExecuteUpdateInput!): ChongduPlatformExecute!
  deleteChongduPlatformExecute(where: ChongduPlatformExecuteWhereUniqueInput!): ChongduPlatformExecute
  deleteManyChongduPlatformExecutes(where: ChongduPlatformExecuteWhereInput): BatchPayload!
  createChongduProduct(data: ChongduProductCreateInput!): ChongduProduct!
  updateChongduProduct(data: ChongduProductUpdateInput!, where: ChongduProductWhereUniqueInput!): ChongduProduct
  updateManyChongduProducts(data: ChongduProductUpdateManyMutationInput!, where: ChongduProductWhereInput): BatchPayload!
  upsertChongduProduct(where: ChongduProductWhereUniqueInput!, create: ChongduProductCreateInput!, update: ChongduProductUpdateInput!): ChongduProduct!
  deleteChongduProduct(where: ChongduProductWhereUniqueInput!): ChongduProduct
  deleteManyChongduProducts(where: ChongduProductWhereInput): BatchPayload!
  createChongduProductAuthentdetail(data: ChongduProductAuthentdetailCreateInput!): ChongduProductAuthentdetail!
  updateChongduProductAuthentdetail(data: ChongduProductAuthentdetailUpdateInput!, where: ChongduProductAuthentdetailWhereUniqueInput!): ChongduProductAuthentdetail
  updateManyChongduProductAuthentdetails(data: ChongduProductAuthentdetailUpdateManyMutationInput!, where: ChongduProductAuthentdetailWhereInput): BatchPayload!
  upsertChongduProductAuthentdetail(where: ChongduProductAuthentdetailWhereUniqueInput!, create: ChongduProductAuthentdetailCreateInput!, update: ChongduProductAuthentdetailUpdateInput!): ChongduProductAuthentdetail!
  deleteChongduProductAuthentdetail(where: ChongduProductAuthentdetailWhereUniqueInput!): ChongduProductAuthentdetail
  deleteManyChongduProductAuthentdetails(where: ChongduProductAuthentdetailWhereInput): BatchPayload!
  createChongduProductBrand(data: ChongduProductBrandCreateInput!): ChongduProductBrand!
  updateChongduProductBrand(data: ChongduProductBrandUpdateInput!, where: ChongduProductBrandWhereUniqueInput!): ChongduProductBrand
  updateManyChongduProductBrands(data: ChongduProductBrandUpdateManyMutationInput!, where: ChongduProductBrandWhereInput): BatchPayload!
  upsertChongduProductBrand(where: ChongduProductBrandWhereUniqueInput!, create: ChongduProductBrandCreateInput!, update: ChongduProductBrandUpdateInput!): ChongduProductBrand!
  deleteChongduProductBrand(where: ChongduProductBrandWhereUniqueInput!): ChongduProductBrand
  deleteManyChongduProductBrands(where: ChongduProductBrandWhereInput): BatchPayload!
  createChongduProductImg(data: ChongduProductImgCreateInput!): ChongduProductImg!
  updateChongduProductImg(data: ChongduProductImgUpdateInput!, where: ChongduProductImgWhereUniqueInput!): ChongduProductImg
  updateManyChongduProductImgs(data: ChongduProductImgUpdateManyMutationInput!, where: ChongduProductImgWhereInput): BatchPayload!
  upsertChongduProductImg(where: ChongduProductImgWhereUniqueInput!, create: ChongduProductImgCreateInput!, update: ChongduProductImgUpdateInput!): ChongduProductImg!
  deleteChongduProductImg(where: ChongduProductImgWhereUniqueInput!): ChongduProductImg
  deleteManyChongduProductImgs(where: ChongduProductImgWhereInput): BatchPayload!
  createChongduProductPettype(data: ChongduProductPettypeCreateInput!): ChongduProductPettype!
  updateChongduProductPettype(data: ChongduProductPettypeUpdateInput!, where: ChongduProductPettypeWhereUniqueInput!): ChongduProductPettype
  updateManyChongduProductPettypes(data: ChongduProductPettypeUpdateManyMutationInput!, where: ChongduProductPettypeWhereInput): BatchPayload!
  upsertChongduProductPettype(where: ChongduProductPettypeWhereUniqueInput!, create: ChongduProductPettypeCreateInput!, update: ChongduProductPettypeUpdateInput!): ChongduProductPettype!
  deleteChongduProductPettype(where: ChongduProductPettypeWhereUniqueInput!): ChongduProductPettype
  deleteManyChongduProductPettypes(where: ChongduProductPettypeWhereInput): BatchPayload!
  createChongduProductRecommend(data: ChongduProductRecommendCreateInput!): ChongduProductRecommend!
  updateChongduProductRecommend(data: ChongduProductRecommendUpdateInput!, where: ChongduProductRecommendWhereUniqueInput!): ChongduProductRecommend
  updateManyChongduProductRecommends(data: ChongduProductRecommendUpdateManyMutationInput!, where: ChongduProductRecommendWhereInput): BatchPayload!
  upsertChongduProductRecommend(where: ChongduProductRecommendWhereUniqueInput!, create: ChongduProductRecommendCreateInput!, update: ChongduProductRecommendUpdateInput!): ChongduProductRecommend!
  deleteChongduProductRecommend(where: ChongduProductRecommendWhereUniqueInput!): ChongduProductRecommend
  deleteManyChongduProductRecommends(where: ChongduProductRecommendWhereInput): BatchPayload!
  createChongduProductSku(data: ChongduProductSkuCreateInput!): ChongduProductSku!
  updateChongduProductSku(data: ChongduProductSkuUpdateInput!, where: ChongduProductSkuWhereUniqueInput!): ChongduProductSku
  updateManyChongduProductSkus(data: ChongduProductSkuUpdateManyMutationInput!, where: ChongduProductSkuWhereInput): BatchPayload!
  upsertChongduProductSku(where: ChongduProductSkuWhereUniqueInput!, create: ChongduProductSkuCreateInput!, update: ChongduProductSkuUpdateInput!): ChongduProductSku!
  deleteChongduProductSku(where: ChongduProductSkuWhereUniqueInput!): ChongduProductSku
  deleteManyChongduProductSkus(where: ChongduProductSkuWhereInput): BatchPayload!
  createChongduProductType(data: ChongduProductTypeCreateInput!): ChongduProductType!
  updateChongduProductType(data: ChongduProductTypeUpdateInput!, where: ChongduProductTypeWhereUniqueInput!): ChongduProductType
  updateManyChongduProductTypes(data: ChongduProductTypeUpdateManyMutationInput!, where: ChongduProductTypeWhereInput): BatchPayload!
  upsertChongduProductType(where: ChongduProductTypeWhereUniqueInput!, create: ChongduProductTypeCreateInput!, update: ChongduProductTypeUpdateInput!): ChongduProductType!
  deleteChongduProductType(where: ChongduProductTypeWhereUniqueInput!): ChongduProductType
  deleteManyChongduProductTypes(where: ChongduProductTypeWhereInput): BatchPayload!
  createChongduProductauthentLog(data: ChongduProductauthentLogCreateInput!): ChongduProductauthentLog!
  updateChongduProductauthentLog(data: ChongduProductauthentLogUpdateInput!, where: ChongduProductauthentLogWhereUniqueInput!): ChongduProductauthentLog
  updateManyChongduProductauthentLogs(data: ChongduProductauthentLogUpdateManyMutationInput!, where: ChongduProductauthentLogWhereInput): BatchPayload!
  upsertChongduProductauthentLog(where: ChongduProductauthentLogWhereUniqueInput!, create: ChongduProductauthentLogCreateInput!, update: ChongduProductauthentLogUpdateInput!): ChongduProductauthentLog!
  deleteChongduProductauthentLog(where: ChongduProductauthentLogWhereUniqueInput!): ChongduProductauthentLog
  deleteManyChongduProductauthentLogs(where: ChongduProductauthentLogWhereInput): BatchPayload!
  createChongduRecommend(data: ChongduRecommendCreateInput!): ChongduRecommend!
  updateChongduRecommend(data: ChongduRecommendUpdateInput!, where: ChongduRecommendWhereUniqueInput!): ChongduRecommend
  updateManyChongduRecommends(data: ChongduRecommendUpdateManyMutationInput!, where: ChongduRecommendWhereInput): BatchPayload!
  upsertChongduRecommend(where: ChongduRecommendWhereUniqueInput!, create: ChongduRecommendCreateInput!, update: ChongduRecommendUpdateInput!): ChongduRecommend!
  deleteChongduRecommend(where: ChongduRecommendWhereUniqueInput!): ChongduRecommend
  deleteManyChongduRecommends(where: ChongduRecommendWhereInput): BatchPayload!
  createChongduRefresh(data: ChongduRefreshCreateInput!): ChongduRefresh!
  updateChongduRefresh(data: ChongduRefreshUpdateInput!, where: ChongduRefreshWhereUniqueInput!): ChongduRefresh
  updateManyChongduRefreshes(data: ChongduRefreshUpdateManyMutationInput!, where: ChongduRefreshWhereInput): BatchPayload!
  upsertChongduRefresh(where: ChongduRefreshWhereUniqueInput!, create: ChongduRefreshCreateInput!, update: ChongduRefreshUpdateInput!): ChongduRefresh!
  deleteChongduRefresh(where: ChongduRefreshWhereUniqueInput!): ChongduRefresh
  deleteManyChongduRefreshes(where: ChongduRefreshWhereInput): BatchPayload!
  createChongduRepellent(data: ChongduRepellentCreateInput!): ChongduRepellent!
  updateChongduRepellent(data: ChongduRepellentUpdateInput!, where: ChongduRepellentWhereUniqueInput!): ChongduRepellent
  updateManyChongduRepellents(data: ChongduRepellentUpdateManyMutationInput!, where: ChongduRepellentWhereInput): BatchPayload!
  upsertChongduRepellent(where: ChongduRepellentWhereUniqueInput!, create: ChongduRepellentCreateInput!, update: ChongduRepellentUpdateInput!): ChongduRepellent!
  deleteChongduRepellent(where: ChongduRepellentWhereUniqueInput!): ChongduRepellent
  deleteManyChongduRepellents(where: ChongduRepellentWhereInput): BatchPayload!
  createChongduRole(data: ChongduRoleCreateInput!): ChongduRole!
  updateChongduRole(data: ChongduRoleUpdateInput!, where: ChongduRoleWhereUniqueInput!): ChongduRole
  updateManyChongduRoles(data: ChongduRoleUpdateManyMutationInput!, where: ChongduRoleWhereInput): BatchPayload!
  upsertChongduRole(where: ChongduRoleWhereUniqueInput!, create: ChongduRoleCreateInput!, update: ChongduRoleUpdateInput!): ChongduRole!
  deleteChongduRole(where: ChongduRoleWhereUniqueInput!): ChongduRole
  deleteManyChongduRoles(where: ChongduRoleWhereInput): BatchPayload!
  createChongduRoleAuth(data: ChongduRoleAuthCreateInput!): ChongduRoleAuth!
  updateChongduRoleAuth(data: ChongduRoleAuthUpdateInput!, where: ChongduRoleAuthWhereUniqueInput!): ChongduRoleAuth
  updateManyChongduRoleAuths(data: ChongduRoleAuthUpdateManyMutationInput!, where: ChongduRoleAuthWhereInput): BatchPayload!
  upsertChongduRoleAuth(where: ChongduRoleAuthWhereUniqueInput!, create: ChongduRoleAuthCreateInput!, update: ChongduRoleAuthUpdateInput!): ChongduRoleAuth!
  deleteChongduRoleAuth(where: ChongduRoleAuthWhereUniqueInput!): ChongduRoleAuth
  deleteManyChongduRoleAuths(where: ChongduRoleAuthWhereInput): BatchPayload!
  createChongduRoleDetail(data: ChongduRoleDetailCreateInput!): ChongduRoleDetail!
  updateChongduRoleDetail(data: ChongduRoleDetailUpdateInput!, where: ChongduRoleDetailWhereUniqueInput!): ChongduRoleDetail
  updateManyChongduRoleDetails(data: ChongduRoleDetailUpdateManyMutationInput!, where: ChongduRoleDetailWhereInput): BatchPayload!
  upsertChongduRoleDetail(where: ChongduRoleDetailWhereUniqueInput!, create: ChongduRoleDetailCreateInput!, update: ChongduRoleDetailUpdateInput!): ChongduRoleDetail!
  deleteChongduRoleDetail(where: ChongduRoleDetailWhereUniqueInput!): ChongduRoleDetail
  deleteManyChongduRoleDetails(where: ChongduRoleDetailWhereInput): BatchPayload!
  createChongduRoleGroup(data: ChongduRoleGroupCreateInput!): ChongduRoleGroup!
  updateChongduRoleGroup(data: ChongduRoleGroupUpdateInput!, where: ChongduRoleGroupWhereUniqueInput!): ChongduRoleGroup
  updateManyChongduRoleGroups(data: ChongduRoleGroupUpdateManyMutationInput!, where: ChongduRoleGroupWhereInput): BatchPayload!
  upsertChongduRoleGroup(where: ChongduRoleGroupWhereUniqueInput!, create: ChongduRoleGroupCreateInput!, update: ChongduRoleGroupUpdateInput!): ChongduRoleGroup!
  deleteChongduRoleGroup(where: ChongduRoleGroupWhereUniqueInput!): ChongduRoleGroup
  deleteManyChongduRoleGroups(where: ChongduRoleGroupWhereInput): BatchPayload!
  createChongduRoleMenu(data: ChongduRoleMenuCreateInput!): ChongduRoleMenu!
  updateChongduRoleMenu(data: ChongduRoleMenuUpdateInput!, where: ChongduRoleMenuWhereUniqueInput!): ChongduRoleMenu
  updateManyChongduRoleMenus(data: ChongduRoleMenuUpdateManyMutationInput!, where: ChongduRoleMenuWhereInput): BatchPayload!
  upsertChongduRoleMenu(where: ChongduRoleMenuWhereUniqueInput!, create: ChongduRoleMenuCreateInput!, update: ChongduRoleMenuUpdateInput!): ChongduRoleMenu!
  deleteChongduRoleMenu(where: ChongduRoleMenuWhereUniqueInput!): ChongduRoleMenu
  deleteManyChongduRoleMenus(where: ChongduRoleMenuWhereInput): BatchPayload!
  createChongduRoleMenuChildren(data: ChongduRoleMenuChildrenCreateInput!): ChongduRoleMenuChildren!
  updateChongduRoleMenuChildren(data: ChongduRoleMenuChildrenUpdateInput!, where: ChongduRoleMenuChildrenWhereUniqueInput!): ChongduRoleMenuChildren
  updateManyChongduRoleMenuChildrens(data: ChongduRoleMenuChildrenUpdateManyMutationInput!, where: ChongduRoleMenuChildrenWhereInput): BatchPayload!
  upsertChongduRoleMenuChildren(where: ChongduRoleMenuChildrenWhereUniqueInput!, create: ChongduRoleMenuChildrenCreateInput!, update: ChongduRoleMenuChildrenUpdateInput!): ChongduRoleMenuChildren!
  deleteChongduRoleMenuChildren(where: ChongduRoleMenuChildrenWhereUniqueInput!): ChongduRoleMenuChildren
  deleteManyChongduRoleMenuChildrens(where: ChongduRoleMenuChildrenWhereInput): BatchPayload!
  createChongduSearchthink(data: ChongduSearchthinkCreateInput!): ChongduSearchthink!
  updateChongduSearchthink(data: ChongduSearchthinkUpdateInput!, where: ChongduSearchthinkWhereUniqueInput!): ChongduSearchthink
  updateManyChongduSearchthinks(data: ChongduSearchthinkUpdateManyMutationInput!, where: ChongduSearchthinkWhereInput): BatchPayload!
  upsertChongduSearchthink(where: ChongduSearchthinkWhereUniqueInput!, create: ChongduSearchthinkCreateInput!, update: ChongduSearchthinkUpdateInput!): ChongduSearchthink!
  deleteChongduSearchthink(where: ChongduSearchthinkWhereUniqueInput!): ChongduSearchthink
  deleteManyChongduSearchthinks(where: ChongduSearchthinkWhereInput): BatchPayload!
  createChongduService(data: ChongduServiceCreateInput!): ChongduService!
  updateChongduService(data: ChongduServiceUpdateInput!, where: ChongduServiceWhereUniqueInput!): ChongduService
  updateManyChongduServices(data: ChongduServiceUpdateManyMutationInput!, where: ChongduServiceWhereInput): BatchPayload!
  upsertChongduService(where: ChongduServiceWhereUniqueInput!, create: ChongduServiceCreateInput!, update: ChongduServiceUpdateInput!): ChongduService!
  deleteChongduService(where: ChongduServiceWhereUniqueInput!): ChongduService
  deleteManyChongduServices(where: ChongduServiceWhereInput): BatchPayload!
  createChongduServiceAuthentdetail(data: ChongduServiceAuthentdetailCreateInput!): ChongduServiceAuthentdetail!
  updateChongduServiceAuthentdetail(data: ChongduServiceAuthentdetailUpdateInput!, where: ChongduServiceAuthentdetailWhereUniqueInput!): ChongduServiceAuthentdetail
  updateManyChongduServiceAuthentdetails(data: ChongduServiceAuthentdetailUpdateManyMutationInput!, where: ChongduServiceAuthentdetailWhereInput): BatchPayload!
  upsertChongduServiceAuthentdetail(where: ChongduServiceAuthentdetailWhereUniqueInput!, create: ChongduServiceAuthentdetailCreateInput!, update: ChongduServiceAuthentdetailUpdateInput!): ChongduServiceAuthentdetail!
  deleteChongduServiceAuthentdetail(where: ChongduServiceAuthentdetailWhereUniqueInput!): ChongduServiceAuthentdetail
  deleteManyChongduServiceAuthentdetails(where: ChongduServiceAuthentdetailWhereInput): BatchPayload!
  createChongduServiceImg(data: ChongduServiceImgCreateInput!): ChongduServiceImg!
  updateChongduServiceImg(data: ChongduServiceImgUpdateInput!, where: ChongduServiceImgWhereUniqueInput!): ChongduServiceImg
  updateManyChongduServiceImgs(data: ChongduServiceImgUpdateManyMutationInput!, where: ChongduServiceImgWhereInput): BatchPayload!
  upsertChongduServiceImg(where: ChongduServiceImgWhereUniqueInput!, create: ChongduServiceImgCreateInput!, update: ChongduServiceImgUpdateInput!): ChongduServiceImg!
  deleteChongduServiceImg(where: ChongduServiceImgWhereUniqueInput!): ChongduServiceImg
  deleteManyChongduServiceImgs(where: ChongduServiceImgWhereInput): BatchPayload!
  createChongduServicePettype(data: ChongduServicePettypeCreateInput!): ChongduServicePettype!
  updateChongduServicePettype(data: ChongduServicePettypeUpdateInput!, where: ChongduServicePettypeWhereUniqueInput!): ChongduServicePettype
  updateManyChongduServicePettypes(data: ChongduServicePettypeUpdateManyMutationInput!, where: ChongduServicePettypeWhereInput): BatchPayload!
  upsertChongduServicePettype(where: ChongduServicePettypeWhereUniqueInput!, create: ChongduServicePettypeCreateInput!, update: ChongduServicePettypeUpdateInput!): ChongduServicePettype!
  deleteChongduServicePettype(where: ChongduServicePettypeWhereUniqueInput!): ChongduServicePettype
  deleteManyChongduServicePettypes(where: ChongduServicePettypeWhereInput): BatchPayload!
  createChongduServiceRecommend(data: ChongduServiceRecommendCreateInput!): ChongduServiceRecommend!
  updateChongduServiceRecommend(data: ChongduServiceRecommendUpdateInput!, where: ChongduServiceRecommendWhereUniqueInput!): ChongduServiceRecommend
  updateManyChongduServiceRecommends(data: ChongduServiceRecommendUpdateManyMutationInput!, where: ChongduServiceRecommendWhereInput): BatchPayload!
  upsertChongduServiceRecommend(where: ChongduServiceRecommendWhereUniqueInput!, create: ChongduServiceRecommendCreateInput!, update: ChongduServiceRecommendUpdateInput!): ChongduServiceRecommend!
  deleteChongduServiceRecommend(where: ChongduServiceRecommendWhereUniqueInput!): ChongduServiceRecommend
  deleteManyChongduServiceRecommends(where: ChongduServiceRecommendWhereInput): BatchPayload!
  createChongduServiceType(data: ChongduServiceTypeCreateInput!): ChongduServiceType!
  updateChongduServiceType(data: ChongduServiceTypeUpdateInput!, where: ChongduServiceTypeWhereUniqueInput!): ChongduServiceType
  updateManyChongduServiceTypes(data: ChongduServiceTypeUpdateManyMutationInput!, where: ChongduServiceTypeWhereInput): BatchPayload!
  upsertChongduServiceType(where: ChongduServiceTypeWhereUniqueInput!, create: ChongduServiceTypeCreateInput!, update: ChongduServiceTypeUpdateInput!): ChongduServiceType!
  deleteChongduServiceType(where: ChongduServiceTypeWhereUniqueInput!): ChongduServiceType
  deleteManyChongduServiceTypes(where: ChongduServiceTypeWhereInput): BatchPayload!
  createChongduServiceauthentLog(data: ChongduServiceauthentLogCreateInput!): ChongduServiceauthentLog!
  updateChongduServiceauthentLog(data: ChongduServiceauthentLogUpdateInput!, where: ChongduServiceauthentLogWhereUniqueInput!): ChongduServiceauthentLog
  updateManyChongduServiceauthentLogs(data: ChongduServiceauthentLogUpdateManyMutationInput!, where: ChongduServiceauthentLogWhereInput): BatchPayload!
  upsertChongduServiceauthentLog(where: ChongduServiceauthentLogWhereUniqueInput!, create: ChongduServiceauthentLogCreateInput!, update: ChongduServiceauthentLogUpdateInput!): ChongduServiceauthentLog!
  deleteChongduServiceauthentLog(where: ChongduServiceauthentLogWhereUniqueInput!): ChongduServiceauthentLog
  deleteManyChongduServiceauthentLogs(where: ChongduServiceauthentLogWhereInput): BatchPayload!
  createChongduStat(data: ChongduStatCreateInput!): ChongduStat!
  updateChongduStat(data: ChongduStatUpdateInput!, where: ChongduStatWhereUniqueInput!): ChongduStat
  updateManyChongduStats(data: ChongduStatUpdateManyMutationInput!, where: ChongduStatWhereInput): BatchPayload!
  upsertChongduStat(where: ChongduStatWhereUniqueInput!, create: ChongduStatCreateInput!, update: ChongduStatUpdateInput!): ChongduStat!
  deleteChongduStat(where: ChongduStatWhereUniqueInput!): ChongduStat
  deleteManyChongduStats(where: ChongduStatWhereInput): BatchPayload!
  createChongduTag(data: ChongduTagCreateInput!): ChongduTag!
  updateChongduTag(data: ChongduTagUpdateInput!, where: ChongduTagWhereUniqueInput!): ChongduTag
  updateManyChongduTags(data: ChongduTagUpdateManyMutationInput!, where: ChongduTagWhereInput): BatchPayload!
  upsertChongduTag(where: ChongduTagWhereUniqueInput!, create: ChongduTagCreateInput!, update: ChongduTagUpdateInput!): ChongduTag!
  deleteChongduTag(where: ChongduTagWhereUniqueInput!): ChongduTag
  deleteManyChongduTags(where: ChongduTagWhereInput): BatchPayload!
  createChongduTagDetail(data: ChongduTagDetailCreateInput!): ChongduTagDetail!
  updateChongduTagDetail(data: ChongduTagDetailUpdateInput!, where: ChongduTagDetailWhereUniqueInput!): ChongduTagDetail
  updateManyChongduTagDetails(data: ChongduTagDetailUpdateManyMutationInput!, where: ChongduTagDetailWhereInput): BatchPayload!
  upsertChongduTagDetail(where: ChongduTagDetailWhereUniqueInput!, create: ChongduTagDetailCreateInput!, update: ChongduTagDetailUpdateInput!): ChongduTagDetail!
  deleteChongduTagDetail(where: ChongduTagDetailWhereUniqueInput!): ChongduTagDetail
  deleteManyChongduTagDetails(where: ChongduTagDetailWhereInput): BatchPayload!
  createChongduTradingArea(data: ChongduTradingAreaCreateInput!): ChongduTradingArea!
  updateChongduTradingArea(data: ChongduTradingAreaUpdateInput!, where: ChongduTradingAreaWhereUniqueInput!): ChongduTradingArea
  updateManyChongduTradingAreas(data: ChongduTradingAreaUpdateManyMutationInput!, where: ChongduTradingAreaWhereInput): BatchPayload!
  upsertChongduTradingArea(where: ChongduTradingAreaWhereUniqueInput!, create: ChongduTradingAreaCreateInput!, update: ChongduTradingAreaUpdateInput!): ChongduTradingArea!
  deleteChongduTradingArea(where: ChongduTradingAreaWhereUniqueInput!): ChongduTradingArea
  deleteManyChongduTradingAreas(where: ChongduTradingAreaWhereInput): BatchPayload!
  createChongduUser(data: ChongduUserCreateInput!): ChongduUser!
  updateChongduUser(data: ChongduUserUpdateInput!, where: ChongduUserWhereUniqueInput!): ChongduUser
  updateManyChongduUsers(data: ChongduUserUpdateManyMutationInput!, where: ChongduUserWhereInput): BatchPayload!
  upsertChongduUser(where: ChongduUserWhereUniqueInput!, create: ChongduUserCreateInput!, update: ChongduUserUpdateInput!): ChongduUser!
  deleteChongduUser(where: ChongduUserWhereUniqueInput!): ChongduUser
  deleteManyChongduUsers(where: ChongduUserWhereInput): BatchPayload!
  createChongduUserFavourite(data: ChongduUserFavouriteCreateInput!): ChongduUserFavourite!
  updateChongduUserFavourite(data: ChongduUserFavouriteUpdateInput!, where: ChongduUserFavouriteWhereUniqueInput!): ChongduUserFavourite
  updateManyChongduUserFavourites(data: ChongduUserFavouriteUpdateManyMutationInput!, where: ChongduUserFavouriteWhereInput): BatchPayload!
  upsertChongduUserFavourite(where: ChongduUserFavouriteWhereUniqueInput!, create: ChongduUserFavouriteCreateInput!, update: ChongduUserFavouriteUpdateInput!): ChongduUserFavourite!
  deleteChongduUserFavourite(where: ChongduUserFavouriteWhereUniqueInput!): ChongduUserFavourite
  deleteManyChongduUserFavourites(where: ChongduUserFavouriteWhereInput): BatchPayload!
  createChongduUserauthent(data: ChongduUserauthentCreateInput!): ChongduUserauthent!
  updateChongduUserauthent(data: ChongduUserauthentUpdateInput!, where: ChongduUserauthentWhereUniqueInput!): ChongduUserauthent
  updateManyChongduUserauthents(data: ChongduUserauthentUpdateManyMutationInput!, where: ChongduUserauthentWhereInput): BatchPayload!
  upsertChongduUserauthent(where: ChongduUserauthentWhereUniqueInput!, create: ChongduUserauthentCreateInput!, update: ChongduUserauthentUpdateInput!): ChongduUserauthent!
  deleteChongduUserauthent(where: ChongduUserauthentWhereUniqueInput!): ChongduUserauthent
  deleteManyChongduUserauthents(where: ChongduUserauthentWhereInput): BatchPayload!
  createChongduUserauthentLog(data: ChongduUserauthentLogCreateInput!): ChongduUserauthentLog!
  updateChongduUserauthentLog(data: ChongduUserauthentLogUpdateInput!, where: ChongduUserauthentLogWhereUniqueInput!): ChongduUserauthentLog
  updateManyChongduUserauthentLogs(data: ChongduUserauthentLogUpdateManyMutationInput!, where: ChongduUserauthentLogWhereInput): BatchPayload!
  upsertChongduUserauthentLog(where: ChongduUserauthentLogWhereUniqueInput!, create: ChongduUserauthentLogCreateInput!, update: ChongduUserauthentLogUpdateInput!): ChongduUserauthentLog!
  deleteChongduUserauthentLog(where: ChongduUserauthentLogWhereUniqueInput!): ChongduUserauthentLog
  deleteManyChongduUserauthentLogs(where: ChongduUserauthentLogWhereInput): BatchPayload!
  createChongduUserbind(data: ChongduUserbindCreateInput!): ChongduUserbind!
  updateChongduUserbind(data: ChongduUserbindUpdateInput!, where: ChongduUserbindWhereUniqueInput!): ChongduUserbind
  updateManyChongduUserbinds(data: ChongduUserbindUpdateManyMutationInput!, where: ChongduUserbindWhereInput): BatchPayload!
  upsertChongduUserbind(where: ChongduUserbindWhereUniqueInput!, create: ChongduUserbindCreateInput!, update: ChongduUserbindUpdateInput!): ChongduUserbind!
  deleteChongduUserbind(where: ChongduUserbindWhereUniqueInput!): ChongduUserbind
  deleteManyChongduUserbinds(where: ChongduUserbindWhereInput): BatchPayload!
  createChongduUserdetail(data: ChongduUserdetailCreateInput!): ChongduUserdetail!
  updateChongduUserdetail(data: ChongduUserdetailUpdateInput!, where: ChongduUserdetailWhereUniqueInput!): ChongduUserdetail
  updateManyChongduUserdetails(data: ChongduUserdetailUpdateManyMutationInput!, where: ChongduUserdetailWhereInput): BatchPayload!
  upsertChongduUserdetail(where: ChongduUserdetailWhereUniqueInput!, create: ChongduUserdetailCreateInput!, update: ChongduUserdetailUpdateInput!): ChongduUserdetail!
  deleteChongduUserdetail(where: ChongduUserdetailWhereUniqueInput!): ChongduUserdetail
  deleteManyChongduUserdetails(where: ChongduUserdetailWhereInput): BatchPayload!
  createChongduUserstatistic(data: ChongduUserstatisticCreateInput!): ChongduUserstatistic!
  updateChongduUserstatistic(data: ChongduUserstatisticUpdateInput!, where: ChongduUserstatisticWhereUniqueInput!): ChongduUserstatistic
  updateManyChongduUserstatistics(data: ChongduUserstatisticUpdateManyMutationInput!, where: ChongduUserstatisticWhereInput): BatchPayload!
  upsertChongduUserstatistic(where: ChongduUserstatisticWhereUniqueInput!, create: ChongduUserstatisticCreateInput!, update: ChongduUserstatisticUpdateInput!): ChongduUserstatistic!
  deleteChongduUserstatistic(where: ChongduUserstatisticWhereUniqueInput!): ChongduUserstatistic
  deleteManyChongduUserstatistics(where: ChongduUserstatisticWhereInput): BatchPayload!
  createChongduVaccine(data: ChongduVaccineCreateInput!): ChongduVaccine!
  updateChongduVaccine(data: ChongduVaccineUpdateInput!, where: ChongduVaccineWhereUniqueInput!): ChongduVaccine
  updateManyChongduVaccines(data: ChongduVaccineUpdateManyMutationInput!, where: ChongduVaccineWhereInput): BatchPayload!
  upsertChongduVaccine(where: ChongduVaccineWhereUniqueInput!, create: ChongduVaccineCreateInput!, update: ChongduVaccineUpdateInput!): ChongduVaccine!
  deleteChongduVaccine(where: ChongduVaccineWhereUniqueInput!): ChongduVaccine
  deleteManyChongduVaccines(where: ChongduVaccineWhereInput): BatchPayload!
  createChongduVaccineBrand(data: ChongduVaccineBrandCreateInput!): ChongduVaccineBrand!
  updateChongduVaccineBrand(data: ChongduVaccineBrandUpdateInput!, where: ChongduVaccineBrandWhereUniqueInput!): ChongduVaccineBrand
  updateManyChongduVaccineBrands(data: ChongduVaccineBrandUpdateManyMutationInput!, where: ChongduVaccineBrandWhereInput): BatchPayload!
  upsertChongduVaccineBrand(where: ChongduVaccineBrandWhereUniqueInput!, create: ChongduVaccineBrandCreateInput!, update: ChongduVaccineBrandUpdateInput!): ChongduVaccineBrand!
  deleteChongduVaccineBrand(where: ChongduVaccineBrandWhereUniqueInput!): ChongduVaccineBrand
  deleteManyChongduVaccineBrands(where: ChongduVaccineBrandWhereInput): BatchPayload!
  createChongduValidate(data: ChongduValidateCreateInput!): ChongduValidate!
  updateChongduValidate(data: ChongduValidateUpdateInput!, where: ChongduValidateWhereUniqueInput!): ChongduValidate
  updateManyChongduValidates(data: ChongduValidateUpdateManyMutationInput!, where: ChongduValidateWhereInput): BatchPayload!
  upsertChongduValidate(where: ChongduValidateWhereUniqueInput!, create: ChongduValidateCreateInput!, update: ChongduValidateUpdateInput!): ChongduValidate!
  deleteChongduValidate(where: ChongduValidateWhereUniqueInput!): ChongduValidate
  deleteManyChongduValidates(where: ChongduValidateWhereInput): BatchPayload!
  createChongduVersion(data: ChongduVersionCreateInput!): ChongduVersion!
  updateChongduVersion(data: ChongduVersionUpdateInput!, where: ChongduVersionWhereUniqueInput!): ChongduVersion
  updateManyChongduVersions(data: ChongduVersionUpdateManyMutationInput!, where: ChongduVersionWhereInput): BatchPayload!
  upsertChongduVersion(where: ChongduVersionWhereUniqueInput!, create: ChongduVersionCreateInput!, update: ChongduVersionUpdateInput!): ChongduVersion!
  deleteChongduVersion(where: ChongduVersionWhereUniqueInput!): ChongduVersion
  deleteManyChongduVersions(where: ChongduVersionWhereInput): BatchPayload!
  createChongduViewcount(data: ChongduViewcountCreateInput!): ChongduViewcount!
  updateChongduViewcount(data: ChongduViewcountUpdateInput!, where: ChongduViewcountWhereUniqueInput!): ChongduViewcount
  updateManyChongduViewcounts(data: ChongduViewcountUpdateManyMutationInput!, where: ChongduViewcountWhereInput): BatchPayload!
  upsertChongduViewcount(where: ChongduViewcountWhereUniqueInput!, create: ChongduViewcountCreateInput!, update: ChongduViewcountUpdateInput!): ChongduViewcount!
  deleteChongduViewcount(where: ChongduViewcountWhereUniqueInput!): ChongduViewcount
  deleteManyChongduViewcounts(where: ChongduViewcountWhereInput): BatchPayload!
  createChongduWorld(data: ChongduWorldCreateInput!): ChongduWorld!
  updateChongduWorld(data: ChongduWorldUpdateInput!, where: ChongduWorldWhereUniqueInput!): ChongduWorld
  updateManyChongduWorlds(data: ChongduWorldUpdateManyMutationInput!, where: ChongduWorldWhereInput): BatchPayload!
  upsertChongduWorld(where: ChongduWorldWhereUniqueInput!, create: ChongduWorldCreateInput!, update: ChongduWorldUpdateInput!): ChongduWorld!
  deleteChongduWorld(where: ChongduWorldWhereUniqueInput!): ChongduWorld
  deleteManyChongduWorlds(where: ChongduWorldWhereInput): BatchPayload!
  createChongduWorldComment(data: ChongduWorldCommentCreateInput!): ChongduWorldComment!
  updateChongduWorldComment(data: ChongduWorldCommentUpdateInput!, where: ChongduWorldCommentWhereUniqueInput!): ChongduWorldComment
  updateManyChongduWorldComments(data: ChongduWorldCommentUpdateManyMutationInput!, where: ChongduWorldCommentWhereInput): BatchPayload!
  upsertChongduWorldComment(where: ChongduWorldCommentWhereUniqueInput!, create: ChongduWorldCommentCreateInput!, update: ChongduWorldCommentUpdateInput!): ChongduWorldComment!
  deleteChongduWorldComment(where: ChongduWorldCommentWhereUniqueInput!): ChongduWorldComment
  deleteManyChongduWorldComments(where: ChongduWorldCommentWhereInput): BatchPayload!
  createChongduWorldJoin(data: ChongduWorldJoinCreateInput!): ChongduWorldJoin!
  updateChongduWorldJoin(data: ChongduWorldJoinUpdateInput!, where: ChongduWorldJoinWhereUniqueInput!): ChongduWorldJoin
  updateManyChongduWorldJoins(data: ChongduWorldJoinUpdateManyMutationInput!, where: ChongduWorldJoinWhereInput): BatchPayload!
  upsertChongduWorldJoin(where: ChongduWorldJoinWhereUniqueInput!, create: ChongduWorldJoinCreateInput!, update: ChongduWorldJoinUpdateInput!): ChongduWorldJoin!
  deleteChongduWorldJoin(where: ChongduWorldJoinWhereUniqueInput!): ChongduWorldJoin
  deleteManyChongduWorldJoins(where: ChongduWorldJoinWhereInput): BatchPayload!
  createChongduWorldLike(data: ChongduWorldLikeCreateInput!): ChongduWorldLike!
  updateChongduWorldLike(data: ChongduWorldLikeUpdateInput!, where: ChongduWorldLikeWhereUniqueInput!): ChongduWorldLike
  updateManyChongduWorldLikes(data: ChongduWorldLikeUpdateManyMutationInput!, where: ChongduWorldLikeWhereInput): BatchPayload!
  upsertChongduWorldLike(where: ChongduWorldLikeWhereUniqueInput!, create: ChongduWorldLikeCreateInput!, update: ChongduWorldLikeUpdateInput!): ChongduWorldLike!
  deleteChongduWorldLike(where: ChongduWorldLikeWhereUniqueInput!): ChongduWorldLike
  deleteManyChongduWorldLikes(where: ChongduWorldLikeWhereInput): BatchPayload!
  createChongduWorldReply(data: ChongduWorldReplyCreateInput!): ChongduWorldReply!
  updateChongduWorldReply(data: ChongduWorldReplyUpdateInput!, where: ChongduWorldReplyWhereUniqueInput!): ChongduWorldReply
  updateManyChongduWorldReplies(data: ChongduWorldReplyUpdateManyMutationInput!, where: ChongduWorldReplyWhereInput): BatchPayload!
  upsertChongduWorldReply(where: ChongduWorldReplyWhereUniqueInput!, create: ChongduWorldReplyCreateInput!, update: ChongduWorldReplyUpdateInput!): ChongduWorldReply!
  deleteChongduWorldReply(where: ChongduWorldReplyWhereUniqueInput!): ChongduWorldReply
  deleteManyChongduWorldReplies(where: ChongduWorldReplyWhereInput): BatchPayload!
  createChongduWorldShield(data: ChongduWorldShieldCreateInput!): ChongduWorldShield!
  updateChongduWorldShield(data: ChongduWorldShieldUpdateInput!, where: ChongduWorldShieldWhereUniqueInput!): ChongduWorldShield
  updateManyChongduWorldShields(data: ChongduWorldShieldUpdateManyMutationInput!, where: ChongduWorldShieldWhereInput): BatchPayload!
  upsertChongduWorldShield(where: ChongduWorldShieldWhereUniqueInput!, create: ChongduWorldShieldCreateInput!, update: ChongduWorldShieldUpdateInput!): ChongduWorldShield!
  deleteChongduWorldShield(where: ChongduWorldShieldWhereUniqueInput!): ChongduWorldShield
  deleteManyChongduWorldShields(where: ChongduWorldShieldWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  chongduAccount(where: ChongduAccountWhereUniqueInput!): ChongduAccount
  chongduAccounts(where: ChongduAccountWhereInput, orderBy: ChongduAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduAccount]!
  chongduAccountsConnection(where: ChongduAccountWhereInput, orderBy: ChongduAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduAccountConnection!
  chongduAddress(where: ChongduAddressWhereUniqueInput!): ChongduAddress
  chongduAddresses(where: ChongduAddressWhereInput, orderBy: ChongduAddressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduAddress]!
  chongduAddressesConnection(where: ChongduAddressWhereInput, orderBy: ChongduAddressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduAddressConnection!
  chongduAddressRelation(where: ChongduAddressRelationWhereUniqueInput!): ChongduAddressRelation
  chongduAddressRelations(where: ChongduAddressRelationWhereInput, orderBy: ChongduAddressRelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduAddressRelation]!
  chongduAddressRelationsConnection(where: ChongduAddressRelationWhereInput, orderBy: ChongduAddressRelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduAddressRelationConnection!
  chongduAdmin(where: ChongduAdminWhereUniqueInput!): ChongduAdmin
  chongduAdmins(where: ChongduAdminWhereInput, orderBy: ChongduAdminOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduAdmin]!
  chongduAdminsConnection(where: ChongduAdminWhereInput, orderBy: ChongduAdminOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduAdminConnection!
  chongduAdminRole(where: ChongduAdminRoleWhereUniqueInput!): ChongduAdminRole
  chongduAdminRoles(where: ChongduAdminRoleWhereInput, orderBy: ChongduAdminRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduAdminRole]!
  chongduAdminRolesConnection(where: ChongduAdminRoleWhereInput, orderBy: ChongduAdminRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduAdminRoleConnection!
  chongduAdvertisement(where: ChongduAdvertisementWhereUniqueInput!): ChongduAdvertisement
  chongduAdvertisements(where: ChongduAdvertisementWhereInput, orderBy: ChongduAdvertisementOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduAdvertisement]!
  chongduAdvertisementsConnection(where: ChongduAdvertisementWhereInput, orderBy: ChongduAdvertisementOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduAdvertisementConnection!
  chongduAdvice(where: ChongduAdviceWhereUniqueInput!): ChongduAdvice
  chongduAdvices(where: ChongduAdviceWhereInput, orderBy: ChongduAdviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduAdvice]!
  chongduAdvicesConnection(where: ChongduAdviceWhereInput, orderBy: ChongduAdviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduAdviceConnection!
  chongduAgent(where: ChongduAgentWhereUniqueInput!): ChongduAgent
  chongduAgents(where: ChongduAgentWhereInput, orderBy: ChongduAgentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduAgent]!
  chongduAgentsConnection(where: ChongduAgentWhereInput, orderBy: ChongduAgentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduAgentConnection!
  chongduAppVersion(where: ChongduAppVersionWhereUniqueInput!): ChongduAppVersion
  chongduAppVersions(where: ChongduAppVersionWhereInput, orderBy: ChongduAppVersionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduAppVersion]!
  chongduAppVersionsConnection(where: ChongduAppVersionWhereInput, orderBy: ChongduAppVersionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduAppVersionConnection!
  chongduAppointment(where: ChongduAppointmentWhereUniqueInput!): ChongduAppointment
  chongduAppointments(where: ChongduAppointmentWhereInput, orderBy: ChongduAppointmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduAppointment]!
  chongduAppointmentsConnection(where: ChongduAppointmentWhereInput, orderBy: ChongduAppointmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduAppointmentConnection!
  chongduCart(where: ChongduCartWhereUniqueInput!): ChongduCart
  chongduCarts(where: ChongduCartWhereInput, orderBy: ChongduCartOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduCart]!
  chongduCartsConnection(where: ChongduCartWhereInput, orderBy: ChongduCartOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduCartConnection!
  chongduCity(where: ChongduCityWhereUniqueInput!): ChongduCity
  chongduCities(where: ChongduCityWhereInput, orderBy: ChongduCityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduCity]!
  chongduCitiesConnection(where: ChongduCityWhereInput, orderBy: ChongduCityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduCityConnection!
  chongduComment(where: ChongduCommentWhereUniqueInput!): ChongduComment
  chongduComments(where: ChongduCommentWhereInput, orderBy: ChongduCommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduComment]!
  chongduCommentsConnection(where: ChongduCommentWhereInput, orderBy: ChongduCommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduCommentConnection!
  chongduCommentPraise(where: ChongduCommentPraiseWhereUniqueInput!): ChongduCommentPraise
  chongduCommentPraises(where: ChongduCommentPraiseWhereInput, orderBy: ChongduCommentPraiseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduCommentPraise]!
  chongduCommentPraisesConnection(where: ChongduCommentPraiseWhereInput, orderBy: ChongduCommentPraiseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduCommentPraiseConnection!
  chongduCommentReply(where: ChongduCommentReplyWhereUniqueInput!): ChongduCommentReply
  chongduCommentReplies(where: ChongduCommentReplyWhereInput, orderBy: ChongduCommentReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduCommentReply]!
  chongduCommentRepliesConnection(where: ChongduCommentReplyWhereInput, orderBy: ChongduCommentReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduCommentReplyConnection!
  chongduCommentReview(where: ChongduCommentReviewWhereUniqueInput!): ChongduCommentReview
  chongduCommentReviews(where: ChongduCommentReviewWhereInput, orderBy: ChongduCommentReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduCommentReview]!
  chongduCommentReviewsConnection(where: ChongduCommentReviewWhereInput, orderBy: ChongduCommentReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduCommentReviewConnection!
  chongduCompanyauthent(where: ChongduCompanyauthentWhereUniqueInput!): ChongduCompanyauthent
  chongduCompanyauthents(where: ChongduCompanyauthentWhereInput, orderBy: ChongduCompanyauthentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduCompanyauthent]!
  chongduCompanyauthentsConnection(where: ChongduCompanyauthentWhereInput, orderBy: ChongduCompanyauthentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduCompanyauthentConnection!
  chongduCompanyauthentLog(where: ChongduCompanyauthentLogWhereUniqueInput!): ChongduCompanyauthentLog
  chongduCompanyauthentLogs(where: ChongduCompanyauthentLogWhereInput, orderBy: ChongduCompanyauthentLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduCompanyauthentLog]!
  chongduCompanyauthentLogsConnection(where: ChongduCompanyauthentLogWhereInput, orderBy: ChongduCompanyauthentLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduCompanyauthentLogConnection!
  chongduCompanyrecommend(where: ChongduCompanyrecommendWhereUniqueInput!): ChongduCompanyrecommend
  chongduCompanyrecommends(where: ChongduCompanyrecommendWhereInput, orderBy: ChongduCompanyrecommendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduCompanyrecommend]!
  chongduCompanyrecommendsConnection(where: ChongduCompanyrecommendWhereInput, orderBy: ChongduCompanyrecommendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduCompanyrecommendConnection!
  chongduCorrelation(where: ChongduCorrelationWhereUniqueInput!): ChongduCorrelation
  chongduCorrelations(where: ChongduCorrelationWhereInput, orderBy: ChongduCorrelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduCorrelation]!
  chongduCorrelationsConnection(where: ChongduCorrelationWhereInput, orderBy: ChongduCorrelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduCorrelationConnection!
  chongduDataVersion(where: ChongduDataVersionWhereUniqueInput!): ChongduDataVersion
  chongduDataVersions(where: ChongduDataVersionWhereInput, orderBy: ChongduDataVersionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduDataVersion]!
  chongduDataVersionsConnection(where: ChongduDataVersionWhereInput, orderBy: ChongduDataVersionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduDataVersionConnection!
  chongduDiscuss(where: ChongduDiscussWhereUniqueInput!): ChongduDiscuss
  chongduDiscusses(where: ChongduDiscussWhereInput, orderBy: ChongduDiscussOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduDiscuss]!
  chongduDiscussesConnection(where: ChongduDiscussWhereInput, orderBy: ChongduDiscussOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduDiscussConnection!
  chongduFilemanage(where: ChongduFilemanageWhereUniqueInput!): ChongduFilemanage
  chongduFilemanages(where: ChongduFilemanageWhereInput, orderBy: ChongduFilemanageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduFilemanage]!
  chongduFilemanagesConnection(where: ChongduFilemanageWhereInput, orderBy: ChongduFilemanageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduFilemanageConnection!
  chongduFocusing(where: ChongduFocusingWhereUniqueInput!): ChongduFocusing
  chongduFocusings(where: ChongduFocusingWhereInput, orderBy: ChongduFocusingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduFocusing]!
  chongduFocusingsConnection(where: ChongduFocusingWhereInput, orderBy: ChongduFocusingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduFocusingConnection!
  chongduInform(where: ChongduInformWhereUniqueInput!): ChongduInform
  chongduInforms(where: ChongduInformWhereInput, orderBy: ChongduInformOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduInform]!
  chongduInformsConnection(where: ChongduInformWhereInput, orderBy: ChongduInformOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduInformConnection!
  chongduLock(where: ChongduLockWhereUniqueInput!): ChongduLock
  chongduLocks(where: ChongduLockWhereInput, orderBy: ChongduLockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduLock]!
  chongduLocksConnection(where: ChongduLockWhereInput, orderBy: ChongduLockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduLockConnection!
  chongduLog(where: ChongduLogWhereUniqueInput!): ChongduLog
  chongduLogs(where: ChongduLogWhereInput, orderBy: ChongduLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduLog]!
  chongduLogsConnection(where: ChongduLogWhereInput, orderBy: ChongduLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduLogConnection!
  chongduLoginLog(where: ChongduLoginLogWhereUniqueInput!): ChongduLoginLog
  chongduLoginLogs(where: ChongduLoginLogWhereInput, orderBy: ChongduLoginLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduLoginLog]!
  chongduLoginLogsConnection(where: ChongduLoginLogWhereInput, orderBy: ChongduLoginLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduLoginLogConnection!
  chongduMenu(where: ChongduMenuWhereUniqueInput!): ChongduMenu
  chongduMenus(where: ChongduMenuWhereInput, orderBy: ChongduMenuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduMenu]!
  chongduMenusConnection(where: ChongduMenuWhereInput, orderBy: ChongduMenuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduMenuConnection!
  chongduMerchant(where: ChongduMerchantWhereUniqueInput!): ChongduMerchant
  chongduMerchants(where: ChongduMerchantWhereInput, orderBy: ChongduMerchantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduMerchant]!
  chongduMerchantsConnection(where: ChongduMerchantWhereInput, orderBy: ChongduMerchantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduMerchantConnection!
  chongduMerchantImg(where: ChongduMerchantImgWhereUniqueInput!): ChongduMerchantImg
  chongduMerchantImgs(where: ChongduMerchantImgWhereInput, orderBy: ChongduMerchantImgOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduMerchantImg]!
  chongduMerchantImgsConnection(where: ChongduMerchantImgWhereInput, orderBy: ChongduMerchantImgOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduMerchantImgConnection!
  chongduMerchantstatistic(where: ChongduMerchantstatisticWhereUniqueInput!): ChongduMerchantstatistic
  chongduMerchantstatistics(where: ChongduMerchantstatisticWhereInput, orderBy: ChongduMerchantstatisticOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduMerchantstatistic]!
  chongduMerchantstatisticsConnection(where: ChongduMerchantstatisticWhereInput, orderBy: ChongduMerchantstatisticOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduMerchantstatisticConnection!
  chongduMessage(where: ChongduMessageWhereUniqueInput!): ChongduMessage
  chongduMessages(where: ChongduMessageWhereInput, orderBy: ChongduMessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduMessage]!
  chongduMessagesConnection(where: ChongduMessageWhereInput, orderBy: ChongduMessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduMessageConnection!
  chongduModel(where: ChongduModelWhereUniqueInput!): ChongduModel
  chongduModels(where: ChongduModelWhereInput, orderBy: ChongduModelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduModel]!
  chongduModelsConnection(where: ChongduModelWhereInput, orderBy: ChongduModelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduModelConnection!
  chongduModeldetail(where: ChongduModeldetailWhereUniqueInput!): ChongduModeldetail
  chongduModeldetails(where: ChongduModeldetailWhereInput, orderBy: ChongduModeldetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduModeldetail]!
  chongduModeldetailsConnection(where: ChongduModeldetailWhereInput, orderBy: ChongduModeldetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduModeldetailConnection!
  chongduOrder(where: ChongduOrderWhereUniqueInput!): ChongduOrder
  chongduOrders(where: ChongduOrderWhereInput, orderBy: ChongduOrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduOrder]!
  chongduOrdersConnection(where: ChongduOrderWhereInput, orderBy: ChongduOrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduOrderConnection!
  chongduOrderItem(where: ChongduOrderItemWhereUniqueInput!): ChongduOrderItem
  chongduOrderItems(where: ChongduOrderItemWhereInput, orderBy: ChongduOrderItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduOrderItem]!
  chongduOrderItemsConnection(where: ChongduOrderItemWhereInput, orderBy: ChongduOrderItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduOrderItemConnection!
  chongduOrderinvoice(where: ChongduOrderinvoiceWhereUniqueInput!): ChongduOrderinvoice
  chongduOrderinvoices(where: ChongduOrderinvoiceWhereInput, orderBy: ChongduOrderinvoiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduOrderinvoice]!
  chongduOrderinvoicesConnection(where: ChongduOrderinvoiceWhereInput, orderBy: ChongduOrderinvoiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduOrderinvoiceConnection!
  chongduOrderinvoicedetail(where: ChongduOrderinvoicedetailWhereUniqueInput!): ChongduOrderinvoicedetail
  chongduOrderinvoicedetails(where: ChongduOrderinvoicedetailWhereInput, orderBy: ChongduOrderinvoicedetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduOrderinvoicedetail]!
  chongduOrderinvoicedetailsConnection(where: ChongduOrderinvoicedetailWhereInput, orderBy: ChongduOrderinvoicedetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduOrderinvoicedetailConnection!
  chongduOrderserial(where: ChongduOrderserialWhereUniqueInput!): ChongduOrderserial
  chongduOrderserials(where: ChongduOrderserialWhereInput, orderBy: ChongduOrderserialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduOrderserial]!
  chongduOrderserialsConnection(where: ChongduOrderserialWhereInput, orderBy: ChongduOrderserialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduOrderserialConnection!
  chongduOrderstatistic(where: ChongduOrderstatisticWhereUniqueInput!): ChongduOrderstatistic
  chongduOrderstatistics(where: ChongduOrderstatisticWhereInput, orderBy: ChongduOrderstatisticOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduOrderstatistic]!
  chongduOrderstatisticsConnection(where: ChongduOrderstatisticWhereInput, orderBy: ChongduOrderstatisticOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduOrderstatisticConnection!
  chongduPayInfo(where: ChongduPayInfoWhereUniqueInput!): ChongduPayInfo
  chongduPayInfoes(where: ChongduPayInfoWhereInput, orderBy: ChongduPayInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduPayInfo]!
  chongduPayInfoesConnection(where: ChongduPayInfoWhereInput, orderBy: ChongduPayInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduPayInfoConnection!
  chongduPermission(where: ChongduPermissionWhereUniqueInput!): ChongduPermission
  chongduPermissions(where: ChongduPermissionWhereInput, orderBy: ChongduPermissionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduPermission]!
  chongduPermissionsConnection(where: ChongduPermissionWhereInput, orderBy: ChongduPermissionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduPermissionConnection!
  chongduPet(where: ChongduPetWhereUniqueInput!): ChongduPet
  chongduPets(where: ChongduPetWhereInput, orderBy: ChongduPetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduPet]!
  chongduPetsConnection(where: ChongduPetWhereInput, orderBy: ChongduPetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduPetConnection!
  chongduPetCard(where: ChongduPetCardWhereUniqueInput!): ChongduPetCard
  chongduPetCards(where: ChongduPetCardWhereInput, orderBy: ChongduPetCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduPetCard]!
  chongduPetCardsConnection(where: ChongduPetCardWhereInput, orderBy: ChongduPetCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduPetCardConnection!
  chongduPetImg(where: ChongduPetImgWhereUniqueInput!): ChongduPetImg
  chongduPetImgs(where: ChongduPetImgWhereInput, orderBy: ChongduPetImgOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduPetImg]!
  chongduPetImgsConnection(where: ChongduPetImgWhereInput, orderBy: ChongduPetImgOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduPetImgConnection!
  chongduPetRecommend(where: ChongduPetRecommendWhereUniqueInput!): ChongduPetRecommend
  chongduPetRecommends(where: ChongduPetRecommendWhereInput, orderBy: ChongduPetRecommendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduPetRecommend]!
  chongduPetRecommendsConnection(where: ChongduPetRecommendWhereInput, orderBy: ChongduPetRecommendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduPetRecommendConnection!
  chongduPetType(where: ChongduPetTypeWhereUniqueInput!): ChongduPetType
  chongduPetTypes(where: ChongduPetTypeWhereInput, orderBy: ChongduPetTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduPetType]!
  chongduPetTypesConnection(where: ChongduPetTypeWhereInput, orderBy: ChongduPetTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduPetTypeConnection!
  chongduPetauthentLog(where: ChongduPetauthentLogWhereUniqueInput!): ChongduPetauthentLog
  chongduPetauthentLogs(where: ChongduPetauthentLogWhereInput, orderBy: ChongduPetauthentLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduPetauthentLog]!
  chongduPetauthentLogsConnection(where: ChongduPetauthentLogWhereInput, orderBy: ChongduPetauthentLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduPetauthentLogConnection!
  chongduPetauthentdetail(where: ChongduPetauthentdetailWhereUniqueInput!): ChongduPetauthentdetail
  chongduPetauthentdetails(where: ChongduPetauthentdetailWhereInput, orderBy: ChongduPetauthentdetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduPetauthentdetail]!
  chongduPetauthentdetailsConnection(where: ChongduPetauthentdetailWhereInput, orderBy: ChongduPetauthentdetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduPetauthentdetailConnection!
  chongduPlatformBusiness(where: ChongduPlatformBusinessWhereUniqueInput!): ChongduPlatformBusiness
  chongduPlatformBusinesses(where: ChongduPlatformBusinessWhereInput, orderBy: ChongduPlatformBusinessOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduPlatformBusiness]!
  chongduPlatformBusinessesConnection(where: ChongduPlatformBusinessWhereInput, orderBy: ChongduPlatformBusinessOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduPlatformBusinessConnection!
  chongduPlatformExecute(where: ChongduPlatformExecuteWhereUniqueInput!): ChongduPlatformExecute
  chongduPlatformExecutes(where: ChongduPlatformExecuteWhereInput, orderBy: ChongduPlatformExecuteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduPlatformExecute]!
  chongduPlatformExecutesConnection(where: ChongduPlatformExecuteWhereInput, orderBy: ChongduPlatformExecuteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduPlatformExecuteConnection!
  chongduProduct(where: ChongduProductWhereUniqueInput!): ChongduProduct
  chongduProducts(where: ChongduProductWhereInput, orderBy: ChongduProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduProduct]!
  chongduProductsConnection(where: ChongduProductWhereInput, orderBy: ChongduProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduProductConnection!
  chongduProductAuthentdetail(where: ChongduProductAuthentdetailWhereUniqueInput!): ChongduProductAuthentdetail
  chongduProductAuthentdetails(where: ChongduProductAuthentdetailWhereInput, orderBy: ChongduProductAuthentdetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduProductAuthentdetail]!
  chongduProductAuthentdetailsConnection(where: ChongduProductAuthentdetailWhereInput, orderBy: ChongduProductAuthentdetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduProductAuthentdetailConnection!
  chongduProductBrand(where: ChongduProductBrandWhereUniqueInput!): ChongduProductBrand
  chongduProductBrands(where: ChongduProductBrandWhereInput, orderBy: ChongduProductBrandOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduProductBrand]!
  chongduProductBrandsConnection(where: ChongduProductBrandWhereInput, orderBy: ChongduProductBrandOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduProductBrandConnection!
  chongduProductImg(where: ChongduProductImgWhereUniqueInput!): ChongduProductImg
  chongduProductImgs(where: ChongduProductImgWhereInput, orderBy: ChongduProductImgOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduProductImg]!
  chongduProductImgsConnection(where: ChongduProductImgWhereInput, orderBy: ChongduProductImgOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduProductImgConnection!
  chongduProductPettype(where: ChongduProductPettypeWhereUniqueInput!): ChongduProductPettype
  chongduProductPettypes(where: ChongduProductPettypeWhereInput, orderBy: ChongduProductPettypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduProductPettype]!
  chongduProductPettypesConnection(where: ChongduProductPettypeWhereInput, orderBy: ChongduProductPettypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduProductPettypeConnection!
  chongduProductRecommend(where: ChongduProductRecommendWhereUniqueInput!): ChongduProductRecommend
  chongduProductRecommends(where: ChongduProductRecommendWhereInput, orderBy: ChongduProductRecommendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduProductRecommend]!
  chongduProductRecommendsConnection(where: ChongduProductRecommendWhereInput, orderBy: ChongduProductRecommendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduProductRecommendConnection!
  chongduProductSku(where: ChongduProductSkuWhereUniqueInput!): ChongduProductSku
  chongduProductSkus(where: ChongduProductSkuWhereInput, orderBy: ChongduProductSkuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduProductSku]!
  chongduProductSkusConnection(where: ChongduProductSkuWhereInput, orderBy: ChongduProductSkuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduProductSkuConnection!
  chongduProductType(where: ChongduProductTypeWhereUniqueInput!): ChongduProductType
  chongduProductTypes(where: ChongduProductTypeWhereInput, orderBy: ChongduProductTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduProductType]!
  chongduProductTypesConnection(where: ChongduProductTypeWhereInput, orderBy: ChongduProductTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduProductTypeConnection!
  chongduProductauthentLog(where: ChongduProductauthentLogWhereUniqueInput!): ChongduProductauthentLog
  chongduProductauthentLogs(where: ChongduProductauthentLogWhereInput, orderBy: ChongduProductauthentLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduProductauthentLog]!
  chongduProductauthentLogsConnection(where: ChongduProductauthentLogWhereInput, orderBy: ChongduProductauthentLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduProductauthentLogConnection!
  chongduRecommend(where: ChongduRecommendWhereUniqueInput!): ChongduRecommend
  chongduRecommends(where: ChongduRecommendWhereInput, orderBy: ChongduRecommendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduRecommend]!
  chongduRecommendsConnection(where: ChongduRecommendWhereInput, orderBy: ChongduRecommendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduRecommendConnection!
  chongduRefresh(where: ChongduRefreshWhereUniqueInput!): ChongduRefresh
  chongduRefreshes(where: ChongduRefreshWhereInput, orderBy: ChongduRefreshOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduRefresh]!
  chongduRefreshesConnection(where: ChongduRefreshWhereInput, orderBy: ChongduRefreshOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduRefreshConnection!
  chongduRepellent(where: ChongduRepellentWhereUniqueInput!): ChongduRepellent
  chongduRepellents(where: ChongduRepellentWhereInput, orderBy: ChongduRepellentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduRepellent]!
  chongduRepellentsConnection(where: ChongduRepellentWhereInput, orderBy: ChongduRepellentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduRepellentConnection!
  chongduRole(where: ChongduRoleWhereUniqueInput!): ChongduRole
  chongduRoles(where: ChongduRoleWhereInput, orderBy: ChongduRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduRole]!
  chongduRolesConnection(where: ChongduRoleWhereInput, orderBy: ChongduRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduRoleConnection!
  chongduRoleAuth(where: ChongduRoleAuthWhereUniqueInput!): ChongduRoleAuth
  chongduRoleAuths(where: ChongduRoleAuthWhereInput, orderBy: ChongduRoleAuthOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduRoleAuth]!
  chongduRoleAuthsConnection(where: ChongduRoleAuthWhereInput, orderBy: ChongduRoleAuthOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduRoleAuthConnection!
  chongduRoleDetail(where: ChongduRoleDetailWhereUniqueInput!): ChongduRoleDetail
  chongduRoleDetails(where: ChongduRoleDetailWhereInput, orderBy: ChongduRoleDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduRoleDetail]!
  chongduRoleDetailsConnection(where: ChongduRoleDetailWhereInput, orderBy: ChongduRoleDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduRoleDetailConnection!
  chongduRoleGroup(where: ChongduRoleGroupWhereUniqueInput!): ChongduRoleGroup
  chongduRoleGroups(where: ChongduRoleGroupWhereInput, orderBy: ChongduRoleGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduRoleGroup]!
  chongduRoleGroupsConnection(where: ChongduRoleGroupWhereInput, orderBy: ChongduRoleGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduRoleGroupConnection!
  chongduRoleMenu(where: ChongduRoleMenuWhereUniqueInput!): ChongduRoleMenu
  chongduRoleMenus(where: ChongduRoleMenuWhereInput, orderBy: ChongduRoleMenuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduRoleMenu]!
  chongduRoleMenusConnection(where: ChongduRoleMenuWhereInput, orderBy: ChongduRoleMenuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduRoleMenuConnection!
  chongduRoleMenuChildren(where: ChongduRoleMenuChildrenWhereUniqueInput!): ChongduRoleMenuChildren
  chongduRoleMenuChildrens(where: ChongduRoleMenuChildrenWhereInput, orderBy: ChongduRoleMenuChildrenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduRoleMenuChildren]!
  chongduRoleMenuChildrensConnection(where: ChongduRoleMenuChildrenWhereInput, orderBy: ChongduRoleMenuChildrenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduRoleMenuChildrenConnection!
  chongduSearchthink(where: ChongduSearchthinkWhereUniqueInput!): ChongduSearchthink
  chongduSearchthinks(where: ChongduSearchthinkWhereInput, orderBy: ChongduSearchthinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduSearchthink]!
  chongduSearchthinksConnection(where: ChongduSearchthinkWhereInput, orderBy: ChongduSearchthinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduSearchthinkConnection!
  chongduService(where: ChongduServiceWhereUniqueInput!): ChongduService
  chongduServices(where: ChongduServiceWhereInput, orderBy: ChongduServiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduService]!
  chongduServicesConnection(where: ChongduServiceWhereInput, orderBy: ChongduServiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduServiceConnection!
  chongduServiceAuthentdetail(where: ChongduServiceAuthentdetailWhereUniqueInput!): ChongduServiceAuthentdetail
  chongduServiceAuthentdetails(where: ChongduServiceAuthentdetailWhereInput, orderBy: ChongduServiceAuthentdetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduServiceAuthentdetail]!
  chongduServiceAuthentdetailsConnection(where: ChongduServiceAuthentdetailWhereInput, orderBy: ChongduServiceAuthentdetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduServiceAuthentdetailConnection!
  chongduServiceImg(where: ChongduServiceImgWhereUniqueInput!): ChongduServiceImg
  chongduServiceImgs(where: ChongduServiceImgWhereInput, orderBy: ChongduServiceImgOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduServiceImg]!
  chongduServiceImgsConnection(where: ChongduServiceImgWhereInput, orderBy: ChongduServiceImgOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduServiceImgConnection!
  chongduServicePettype(where: ChongduServicePettypeWhereUniqueInput!): ChongduServicePettype
  chongduServicePettypes(where: ChongduServicePettypeWhereInput, orderBy: ChongduServicePettypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduServicePettype]!
  chongduServicePettypesConnection(where: ChongduServicePettypeWhereInput, orderBy: ChongduServicePettypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduServicePettypeConnection!
  chongduServiceRecommend(where: ChongduServiceRecommendWhereUniqueInput!): ChongduServiceRecommend
  chongduServiceRecommends(where: ChongduServiceRecommendWhereInput, orderBy: ChongduServiceRecommendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduServiceRecommend]!
  chongduServiceRecommendsConnection(where: ChongduServiceRecommendWhereInput, orderBy: ChongduServiceRecommendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduServiceRecommendConnection!
  chongduServiceType(where: ChongduServiceTypeWhereUniqueInput!): ChongduServiceType
  chongduServiceTypes(where: ChongduServiceTypeWhereInput, orderBy: ChongduServiceTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduServiceType]!
  chongduServiceTypesConnection(where: ChongduServiceTypeWhereInput, orderBy: ChongduServiceTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduServiceTypeConnection!
  chongduServiceauthentLog(where: ChongduServiceauthentLogWhereUniqueInput!): ChongduServiceauthentLog
  chongduServiceauthentLogs(where: ChongduServiceauthentLogWhereInput, orderBy: ChongduServiceauthentLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduServiceauthentLog]!
  chongduServiceauthentLogsConnection(where: ChongduServiceauthentLogWhereInput, orderBy: ChongduServiceauthentLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduServiceauthentLogConnection!
  chongduStat(where: ChongduStatWhereUniqueInput!): ChongduStat
  chongduStats(where: ChongduStatWhereInput, orderBy: ChongduStatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduStat]!
  chongduStatsConnection(where: ChongduStatWhereInput, orderBy: ChongduStatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduStatConnection!
  chongduTag(where: ChongduTagWhereUniqueInput!): ChongduTag
  chongduTags(where: ChongduTagWhereInput, orderBy: ChongduTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduTag]!
  chongduTagsConnection(where: ChongduTagWhereInput, orderBy: ChongduTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduTagConnection!
  chongduTagDetail(where: ChongduTagDetailWhereUniqueInput!): ChongduTagDetail
  chongduTagDetails(where: ChongduTagDetailWhereInput, orderBy: ChongduTagDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduTagDetail]!
  chongduTagDetailsConnection(where: ChongduTagDetailWhereInput, orderBy: ChongduTagDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduTagDetailConnection!
  chongduTradingArea(where: ChongduTradingAreaWhereUniqueInput!): ChongduTradingArea
  chongduTradingAreas(where: ChongduTradingAreaWhereInput, orderBy: ChongduTradingAreaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduTradingArea]!
  chongduTradingAreasConnection(where: ChongduTradingAreaWhereInput, orderBy: ChongduTradingAreaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduTradingAreaConnection!
  chongduUser(where: ChongduUserWhereUniqueInput!): ChongduUser
  chongduUsers(where: ChongduUserWhereInput, orderBy: ChongduUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduUser]!
  chongduUsersConnection(where: ChongduUserWhereInput, orderBy: ChongduUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduUserConnection!
  chongduUserFavourite(where: ChongduUserFavouriteWhereUniqueInput!): ChongduUserFavourite
  chongduUserFavourites(where: ChongduUserFavouriteWhereInput, orderBy: ChongduUserFavouriteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduUserFavourite]!
  chongduUserFavouritesConnection(where: ChongduUserFavouriteWhereInput, orderBy: ChongduUserFavouriteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduUserFavouriteConnection!
  chongduUserauthent(where: ChongduUserauthentWhereUniqueInput!): ChongduUserauthent
  chongduUserauthents(where: ChongduUserauthentWhereInput, orderBy: ChongduUserauthentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduUserauthent]!
  chongduUserauthentsConnection(where: ChongduUserauthentWhereInput, orderBy: ChongduUserauthentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduUserauthentConnection!
  chongduUserauthentLog(where: ChongduUserauthentLogWhereUniqueInput!): ChongduUserauthentLog
  chongduUserauthentLogs(where: ChongduUserauthentLogWhereInput, orderBy: ChongduUserauthentLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduUserauthentLog]!
  chongduUserauthentLogsConnection(where: ChongduUserauthentLogWhereInput, orderBy: ChongduUserauthentLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduUserauthentLogConnection!
  chongduUserbind(where: ChongduUserbindWhereUniqueInput!): ChongduUserbind
  chongduUserbinds(where: ChongduUserbindWhereInput, orderBy: ChongduUserbindOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduUserbind]!
  chongduUserbindsConnection(where: ChongduUserbindWhereInput, orderBy: ChongduUserbindOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduUserbindConnection!
  chongduUserdetail(where: ChongduUserdetailWhereUniqueInput!): ChongduUserdetail
  chongduUserdetails(where: ChongduUserdetailWhereInput, orderBy: ChongduUserdetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduUserdetail]!
  chongduUserdetailsConnection(where: ChongduUserdetailWhereInput, orderBy: ChongduUserdetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduUserdetailConnection!
  chongduUserstatistic(where: ChongduUserstatisticWhereUniqueInput!): ChongduUserstatistic
  chongduUserstatistics(where: ChongduUserstatisticWhereInput, orderBy: ChongduUserstatisticOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduUserstatistic]!
  chongduUserstatisticsConnection(where: ChongduUserstatisticWhereInput, orderBy: ChongduUserstatisticOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduUserstatisticConnection!
  chongduVaccine(where: ChongduVaccineWhereUniqueInput!): ChongduVaccine
  chongduVaccines(where: ChongduVaccineWhereInput, orderBy: ChongduVaccineOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduVaccine]!
  chongduVaccinesConnection(where: ChongduVaccineWhereInput, orderBy: ChongduVaccineOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduVaccineConnection!
  chongduVaccineBrand(where: ChongduVaccineBrandWhereUniqueInput!): ChongduVaccineBrand
  chongduVaccineBrands(where: ChongduVaccineBrandWhereInput, orderBy: ChongduVaccineBrandOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduVaccineBrand]!
  chongduVaccineBrandsConnection(where: ChongduVaccineBrandWhereInput, orderBy: ChongduVaccineBrandOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduVaccineBrandConnection!
  chongduValidate(where: ChongduValidateWhereUniqueInput!): ChongduValidate
  chongduValidates(where: ChongduValidateWhereInput, orderBy: ChongduValidateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduValidate]!
  chongduValidatesConnection(where: ChongduValidateWhereInput, orderBy: ChongduValidateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduValidateConnection!
  chongduVersion(where: ChongduVersionWhereUniqueInput!): ChongduVersion
  chongduVersions(where: ChongduVersionWhereInput, orderBy: ChongduVersionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduVersion]!
  chongduVersionsConnection(where: ChongduVersionWhereInput, orderBy: ChongduVersionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduVersionConnection!
  chongduViewcount(where: ChongduViewcountWhereUniqueInput!): ChongduViewcount
  chongduViewcounts(where: ChongduViewcountWhereInput, orderBy: ChongduViewcountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduViewcount]!
  chongduViewcountsConnection(where: ChongduViewcountWhereInput, orderBy: ChongduViewcountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduViewcountConnection!
  chongduWorld(where: ChongduWorldWhereUniqueInput!): ChongduWorld
  chongduWorlds(where: ChongduWorldWhereInput, orderBy: ChongduWorldOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduWorld]!
  chongduWorldsConnection(where: ChongduWorldWhereInput, orderBy: ChongduWorldOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduWorldConnection!
  chongduWorldComment(where: ChongduWorldCommentWhereUniqueInput!): ChongduWorldComment
  chongduWorldComments(where: ChongduWorldCommentWhereInput, orderBy: ChongduWorldCommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduWorldComment]!
  chongduWorldCommentsConnection(where: ChongduWorldCommentWhereInput, orderBy: ChongduWorldCommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduWorldCommentConnection!
  chongduWorldJoin(where: ChongduWorldJoinWhereUniqueInput!): ChongduWorldJoin
  chongduWorldJoins(where: ChongduWorldJoinWhereInput, orderBy: ChongduWorldJoinOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduWorldJoin]!
  chongduWorldJoinsConnection(where: ChongduWorldJoinWhereInput, orderBy: ChongduWorldJoinOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduWorldJoinConnection!
  chongduWorldLike(where: ChongduWorldLikeWhereUniqueInput!): ChongduWorldLike
  chongduWorldLikes(where: ChongduWorldLikeWhereInput, orderBy: ChongduWorldLikeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduWorldLike]!
  chongduWorldLikesConnection(where: ChongduWorldLikeWhereInput, orderBy: ChongduWorldLikeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduWorldLikeConnection!
  chongduWorldReply(where: ChongduWorldReplyWhereUniqueInput!): ChongduWorldReply
  chongduWorldReplies(where: ChongduWorldReplyWhereInput, orderBy: ChongduWorldReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduWorldReply]!
  chongduWorldRepliesConnection(where: ChongduWorldReplyWhereInput, orderBy: ChongduWorldReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduWorldReplyConnection!
  chongduWorldShield(where: ChongduWorldShieldWhereUniqueInput!): ChongduWorldShield
  chongduWorldShields(where: ChongduWorldShieldWhereInput, orderBy: ChongduWorldShieldOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChongduWorldShield]!
  chongduWorldShieldsConnection(where: ChongduWorldShieldWhereInput, orderBy: ChongduWorldShieldOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChongduWorldShieldConnection!
  node(id: ID!): Node
}

type Subscription {
  chongduAccount(where: ChongduAccountSubscriptionWhereInput): ChongduAccountSubscriptionPayload
  chongduAddress(where: ChongduAddressSubscriptionWhereInput): ChongduAddressSubscriptionPayload
  chongduAddressRelation(where: ChongduAddressRelationSubscriptionWhereInput): ChongduAddressRelationSubscriptionPayload
  chongduAdmin(where: ChongduAdminSubscriptionWhereInput): ChongduAdminSubscriptionPayload
  chongduAdminRole(where: ChongduAdminRoleSubscriptionWhereInput): ChongduAdminRoleSubscriptionPayload
  chongduAdvertisement(where: ChongduAdvertisementSubscriptionWhereInput): ChongduAdvertisementSubscriptionPayload
  chongduAdvice(where: ChongduAdviceSubscriptionWhereInput): ChongduAdviceSubscriptionPayload
  chongduAgent(where: ChongduAgentSubscriptionWhereInput): ChongduAgentSubscriptionPayload
  chongduAppVersion(where: ChongduAppVersionSubscriptionWhereInput): ChongduAppVersionSubscriptionPayload
  chongduAppointment(where: ChongduAppointmentSubscriptionWhereInput): ChongduAppointmentSubscriptionPayload
  chongduCart(where: ChongduCartSubscriptionWhereInput): ChongduCartSubscriptionPayload
  chongduCity(where: ChongduCitySubscriptionWhereInput): ChongduCitySubscriptionPayload
  chongduComment(where: ChongduCommentSubscriptionWhereInput): ChongduCommentSubscriptionPayload
  chongduCommentPraise(where: ChongduCommentPraiseSubscriptionWhereInput): ChongduCommentPraiseSubscriptionPayload
  chongduCommentReply(where: ChongduCommentReplySubscriptionWhereInput): ChongduCommentReplySubscriptionPayload
  chongduCommentReview(where: ChongduCommentReviewSubscriptionWhereInput): ChongduCommentReviewSubscriptionPayload
  chongduCompanyauthent(where: ChongduCompanyauthentSubscriptionWhereInput): ChongduCompanyauthentSubscriptionPayload
  chongduCompanyauthentLog(where: ChongduCompanyauthentLogSubscriptionWhereInput): ChongduCompanyauthentLogSubscriptionPayload
  chongduCompanyrecommend(where: ChongduCompanyrecommendSubscriptionWhereInput): ChongduCompanyrecommendSubscriptionPayload
  chongduCorrelation(where: ChongduCorrelationSubscriptionWhereInput): ChongduCorrelationSubscriptionPayload
  chongduDataVersion(where: ChongduDataVersionSubscriptionWhereInput): ChongduDataVersionSubscriptionPayload
  chongduDiscuss(where: ChongduDiscussSubscriptionWhereInput): ChongduDiscussSubscriptionPayload
  chongduFilemanage(where: ChongduFilemanageSubscriptionWhereInput): ChongduFilemanageSubscriptionPayload
  chongduFocusing(where: ChongduFocusingSubscriptionWhereInput): ChongduFocusingSubscriptionPayload
  chongduInform(where: ChongduInformSubscriptionWhereInput): ChongduInformSubscriptionPayload
  chongduLock(where: ChongduLockSubscriptionWhereInput): ChongduLockSubscriptionPayload
  chongduLog(where: ChongduLogSubscriptionWhereInput): ChongduLogSubscriptionPayload
  chongduLoginLog(where: ChongduLoginLogSubscriptionWhereInput): ChongduLoginLogSubscriptionPayload
  chongduMenu(where: ChongduMenuSubscriptionWhereInput): ChongduMenuSubscriptionPayload
  chongduMerchant(where: ChongduMerchantSubscriptionWhereInput): ChongduMerchantSubscriptionPayload
  chongduMerchantImg(where: ChongduMerchantImgSubscriptionWhereInput): ChongduMerchantImgSubscriptionPayload
  chongduMerchantstatistic(where: ChongduMerchantstatisticSubscriptionWhereInput): ChongduMerchantstatisticSubscriptionPayload
  chongduMessage(where: ChongduMessageSubscriptionWhereInput): ChongduMessageSubscriptionPayload
  chongduModel(where: ChongduModelSubscriptionWhereInput): ChongduModelSubscriptionPayload
  chongduModeldetail(where: ChongduModeldetailSubscriptionWhereInput): ChongduModeldetailSubscriptionPayload
  chongduOrder(where: ChongduOrderSubscriptionWhereInput): ChongduOrderSubscriptionPayload
  chongduOrderItem(where: ChongduOrderItemSubscriptionWhereInput): ChongduOrderItemSubscriptionPayload
  chongduOrderinvoice(where: ChongduOrderinvoiceSubscriptionWhereInput): ChongduOrderinvoiceSubscriptionPayload
  chongduOrderinvoicedetail(where: ChongduOrderinvoicedetailSubscriptionWhereInput): ChongduOrderinvoicedetailSubscriptionPayload
  chongduOrderserial(where: ChongduOrderserialSubscriptionWhereInput): ChongduOrderserialSubscriptionPayload
  chongduOrderstatistic(where: ChongduOrderstatisticSubscriptionWhereInput): ChongduOrderstatisticSubscriptionPayload
  chongduPayInfo(where: ChongduPayInfoSubscriptionWhereInput): ChongduPayInfoSubscriptionPayload
  chongduPermission(where: ChongduPermissionSubscriptionWhereInput): ChongduPermissionSubscriptionPayload
  chongduPet(where: ChongduPetSubscriptionWhereInput): ChongduPetSubscriptionPayload
  chongduPetCard(where: ChongduPetCardSubscriptionWhereInput): ChongduPetCardSubscriptionPayload
  chongduPetImg(where: ChongduPetImgSubscriptionWhereInput): ChongduPetImgSubscriptionPayload
  chongduPetRecommend(where: ChongduPetRecommendSubscriptionWhereInput): ChongduPetRecommendSubscriptionPayload
  chongduPetType(where: ChongduPetTypeSubscriptionWhereInput): ChongduPetTypeSubscriptionPayload
  chongduPetauthentLog(where: ChongduPetauthentLogSubscriptionWhereInput): ChongduPetauthentLogSubscriptionPayload
  chongduPetauthentdetail(where: ChongduPetauthentdetailSubscriptionWhereInput): ChongduPetauthentdetailSubscriptionPayload
  chongduPlatformBusiness(where: ChongduPlatformBusinessSubscriptionWhereInput): ChongduPlatformBusinessSubscriptionPayload
  chongduPlatformExecute(where: ChongduPlatformExecuteSubscriptionWhereInput): ChongduPlatformExecuteSubscriptionPayload
  chongduProduct(where: ChongduProductSubscriptionWhereInput): ChongduProductSubscriptionPayload
  chongduProductAuthentdetail(where: ChongduProductAuthentdetailSubscriptionWhereInput): ChongduProductAuthentdetailSubscriptionPayload
  chongduProductBrand(where: ChongduProductBrandSubscriptionWhereInput): ChongduProductBrandSubscriptionPayload
  chongduProductImg(where: ChongduProductImgSubscriptionWhereInput): ChongduProductImgSubscriptionPayload
  chongduProductPettype(where: ChongduProductPettypeSubscriptionWhereInput): ChongduProductPettypeSubscriptionPayload
  chongduProductRecommend(where: ChongduProductRecommendSubscriptionWhereInput): ChongduProductRecommendSubscriptionPayload
  chongduProductSku(where: ChongduProductSkuSubscriptionWhereInput): ChongduProductSkuSubscriptionPayload
  chongduProductType(where: ChongduProductTypeSubscriptionWhereInput): ChongduProductTypeSubscriptionPayload
  chongduProductauthentLog(where: ChongduProductauthentLogSubscriptionWhereInput): ChongduProductauthentLogSubscriptionPayload
  chongduRecommend(where: ChongduRecommendSubscriptionWhereInput): ChongduRecommendSubscriptionPayload
  chongduRefresh(where: ChongduRefreshSubscriptionWhereInput): ChongduRefreshSubscriptionPayload
  chongduRepellent(where: ChongduRepellentSubscriptionWhereInput): ChongduRepellentSubscriptionPayload
  chongduRole(where: ChongduRoleSubscriptionWhereInput): ChongduRoleSubscriptionPayload
  chongduRoleAuth(where: ChongduRoleAuthSubscriptionWhereInput): ChongduRoleAuthSubscriptionPayload
  chongduRoleDetail(where: ChongduRoleDetailSubscriptionWhereInput): ChongduRoleDetailSubscriptionPayload
  chongduRoleGroup(where: ChongduRoleGroupSubscriptionWhereInput): ChongduRoleGroupSubscriptionPayload
  chongduRoleMenu(where: ChongduRoleMenuSubscriptionWhereInput): ChongduRoleMenuSubscriptionPayload
  chongduRoleMenuChildren(where: ChongduRoleMenuChildrenSubscriptionWhereInput): ChongduRoleMenuChildrenSubscriptionPayload
  chongduSearchthink(where: ChongduSearchthinkSubscriptionWhereInput): ChongduSearchthinkSubscriptionPayload
  chongduService(where: ChongduServiceSubscriptionWhereInput): ChongduServiceSubscriptionPayload
  chongduServiceAuthentdetail(where: ChongduServiceAuthentdetailSubscriptionWhereInput): ChongduServiceAuthentdetailSubscriptionPayload
  chongduServiceImg(where: ChongduServiceImgSubscriptionWhereInput): ChongduServiceImgSubscriptionPayload
  chongduServicePettype(where: ChongduServicePettypeSubscriptionWhereInput): ChongduServicePettypeSubscriptionPayload
  chongduServiceRecommend(where: ChongduServiceRecommendSubscriptionWhereInput): ChongduServiceRecommendSubscriptionPayload
  chongduServiceType(where: ChongduServiceTypeSubscriptionWhereInput): ChongduServiceTypeSubscriptionPayload
  chongduServiceauthentLog(where: ChongduServiceauthentLogSubscriptionWhereInput): ChongduServiceauthentLogSubscriptionPayload
  chongduStat(where: ChongduStatSubscriptionWhereInput): ChongduStatSubscriptionPayload
  chongduTag(where: ChongduTagSubscriptionWhereInput): ChongduTagSubscriptionPayload
  chongduTagDetail(where: ChongduTagDetailSubscriptionWhereInput): ChongduTagDetailSubscriptionPayload
  chongduTradingArea(where: ChongduTradingAreaSubscriptionWhereInput): ChongduTradingAreaSubscriptionPayload
  chongduUser(where: ChongduUserSubscriptionWhereInput): ChongduUserSubscriptionPayload
  chongduUserFavourite(where: ChongduUserFavouriteSubscriptionWhereInput): ChongduUserFavouriteSubscriptionPayload
  chongduUserauthent(where: ChongduUserauthentSubscriptionWhereInput): ChongduUserauthentSubscriptionPayload
  chongduUserauthentLog(where: ChongduUserauthentLogSubscriptionWhereInput): ChongduUserauthentLogSubscriptionPayload
  chongduUserbind(where: ChongduUserbindSubscriptionWhereInput): ChongduUserbindSubscriptionPayload
  chongduUserdetail(where: ChongduUserdetailSubscriptionWhereInput): ChongduUserdetailSubscriptionPayload
  chongduUserstatistic(where: ChongduUserstatisticSubscriptionWhereInput): ChongduUserstatisticSubscriptionPayload
  chongduVaccine(where: ChongduVaccineSubscriptionWhereInput): ChongduVaccineSubscriptionPayload
  chongduVaccineBrand(where: ChongduVaccineBrandSubscriptionWhereInput): ChongduVaccineBrandSubscriptionPayload
  chongduValidate(where: ChongduValidateSubscriptionWhereInput): ChongduValidateSubscriptionPayload
  chongduVersion(where: ChongduVersionSubscriptionWhereInput): ChongduVersionSubscriptionPayload
  chongduViewcount(where: ChongduViewcountSubscriptionWhereInput): ChongduViewcountSubscriptionPayload
  chongduWorld(where: ChongduWorldSubscriptionWhereInput): ChongduWorldSubscriptionPayload
  chongduWorldComment(where: ChongduWorldCommentSubscriptionWhereInput): ChongduWorldCommentSubscriptionPayload
  chongduWorldJoin(where: ChongduWorldJoinSubscriptionWhereInput): ChongduWorldJoinSubscriptionPayload
  chongduWorldLike(where: ChongduWorldLikeSubscriptionWhereInput): ChongduWorldLikeSubscriptionPayload
  chongduWorldReply(where: ChongduWorldReplySubscriptionWhereInput): ChongduWorldReplySubscriptionPayload
  chongduWorldShield(where: ChongduWorldShieldSubscriptionWhereInput): ChongduWorldShieldSubscriptionPayload
}
`