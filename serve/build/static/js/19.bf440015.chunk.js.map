{"version":3,"sources":["webpack:///./src/pages/user/index.less?cb88","pages/user/index.less","pages/user/authentList.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","UserTypeList","StatusList","PopImage","imgSrc","react__WEBPACK_IMPORTED_MODULE_5__","src","alt","style","width","AuthentList","state","files","updateId","selectedRowKeys","selectedPetKeys","selectedPetTypeKeys","loading","filteredInfo","sortedInfo","visible","authentVisible","cardVisible","value","imageUrl","defaultProductName","defalutSizeValue","editSizeVisible","tableData","resTableData","resPetTypeTableData","showImage","imageSrc","selectedPetOtherTypeKeys","radioValue","userId","cardMsg","frontPhoto","backPhoto","handPhoto","realName","cardNum","sex","nation","birthday","cardAddress","cityCode","signFrom","beginTime","endTime","onSelectChange","_this","setState","handleChange","pagination","filters","sorter","console","log","handleDelete","key","addGoodType","showDrawer","editAuthentCard","editAuthentStatus","record","size","deleteGoodType","axios","method","url","data","ids","then","res","message","success","setTimeout","window","location","reload","error","handleOk","_this$state","status","handleCancel","handleCardOk","handleCardCancel","radioChange","e","target","That","this","length","map","item","index","id","userType","type","userName","icon","card","authtime","moment","parseInt","format","ct","operation","goodList","_this2","_this$state2","columns","title","dataIndex","render","text","split","href","onClick","bind","rowSelection","onChange","hasSelected","antd__WEBPACK_IMPORTED_MODULE_7__","textAlign","marginBottom","Item","antd__WEBPACK_IMPORTED_MODULE_8__","marginRight","disabled","marginLeft","concat","antd__WEBPACK_IMPORTED_MODULE_9__","dataSource","pageSize","locale","filterConfirm","filterReset","emptyText","antd__WEBPACK_IMPORTED_MODULE_10__","onCancel","footer","onOk","okText","cancelText","antd__WEBPACK_IMPORTED_MODULE_11__","Group","defaultValue","buttonStyle","Button","className","antd__WEBPACK_IMPORTED_MODULE_12__","placement","trigger","autoAdjustOverflow","React"],"mappings":"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","file":"static/js/19.bf440015.chunk.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".cardMsgs {\\n  display: flex;\\n  flex-wrap: wrap;\\n}\\n.cardMsgs .photos {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around;\\n}\\n.cardMsgs .photos p {\\n  width: 30%;\\n}\\n.cardMsgs .msgs {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around;\\n  flex-wrap: wrap;\\n}\\n.cardMsgs .msgs p {\\n  width: 50%;\\n}\\n\", \"\"]);\n\n","import * as React from 'react';\r\nimport {\r\n    Table, Button, message, Breadcrumb, Modal, Radio, Popover\r\n} from 'antd';\r\nimport './index.less';\r\nimport moment from 'moment'\r\nimport axios from '../../util/Axios';\r\n\r\nconst UserTypeList = [\"普通用户\", \"商户\", \"企业用户\"]\r\n\r\nconst StatusList = [\"待审核\", \"审核通过\", \"审核失败\"]\r\n\r\nconst PopImage = (imgSrc: string) => (\r\n    <img src={imgSrc} alt=\"\" style={{ width: \"100%\" }} />\r\n)\r\n\r\nexport default class AuthentList extends React.Component<any, any> {\r\n\r\n    public state = {\r\n        files: [],\r\n        updateId: 1, // edit id 要更新的id\r\n        selectedRowKeys: [], // Check here to configure the default column\r\n        selectedPetKeys: [],\r\n        selectedPetTypeKeys: [],\r\n        loading: false,\r\n        filteredInfo: null,\r\n        sortedInfo: \"\",\r\n        visible: false,\r\n        authentVisible: false,\r\n        cardVisible: false,\r\n        value: 2,  // 默认选择的一级分类\r\n        imageUrl: \"\",\r\n        defaultProductName: \"\", // 编辑商品名字\r\n        defalutSizeValue: 6, // 编辑商品体型\r\n        editSizeVisible: false,  // 编辑商品体型选项是否显示\r\n        tableData: [],\r\n        resTableData: [],\r\n        resPetTypeTableData: [],\r\n        showImage: false,\r\n        imageSrc: \"\",\r\n        selectedPetOtherTypeKeys: [],\r\n        radioValue: \"\",\r\n        userId: 1,\r\n        cardMsg: {\r\n            frontPhoto: \"\",\r\n            backPhoto: \"\",\r\n            handPhoto: \"\",\r\n            realName: \"\",\r\n            cardNum: \"\",\r\n            sex: \"\",\r\n            nation: \"\",\r\n            birthday: \"\",\r\n            cardAddress: \"\",\r\n            cityCode: \"\",\r\n            signFrom: \"\",\r\n            beginTime: \"\",\r\n            endTime: \"\",\r\n        }\r\n    };\r\n\r\n    public componentDidMount() {\r\n        const That = this\r\n        axios({\r\n            method: \"get\",\r\n            url: \"/user/authentlist\"\r\n        }).then((res: any) => {\r\n            if (res.data.length > 0) {\r\n                const tableData = res.data.map((item: any, index: number) => {\r\n                    return {\r\n                        key: item.id,  // key 应带对应data id \r\n                        userType: item.type ? UserTypeList[item.type] : UserTypeList[0],\r\n                        userName: item.realName,\r\n                        icon: item.icon ? item.icon : \"----\",\r\n                        status: item.status ? StatusList[item.status] : StatusList[0],\r\n                        card: {\r\n                            frontPhoto: item.frontPhoto,\r\n                            backPhoto: item.backPhoto,\r\n                            handPhoto: item.handPhoto,\r\n                            realName: item.realName,\r\n                            cardNum: item.cardNum,\r\n                            sex: item.sex,\r\n                            nation: item.nation,\r\n                            birthday: item.birthday,\r\n                            cardAddress: item.cardAddress,\r\n                            cityCode: item.cityCode,\r\n                            signFrom: item.signFrom,\r\n                            beginTime: item.beginTime,\r\n                            endTime: item.endTime,\r\n                        },\r\n                        authtime: item.authtime ? moment(parseInt(item.authtime, 10)).format('YYYY-MM-DD H:mm:ss') : \"----\",\r\n                        ct: item.ct ? moment(parseInt(item.ct, 10)).format('YYYY-MM-DD H:mm:ss') : \"----\",\r\n                        operation: \"\"\r\n                    }\r\n                })\r\n                That.setState({\r\n                    \"tableData\": tableData,\r\n                    resTableData: res.data.goodList,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    public onSelectChange = (selectedRowKeys: any) => {\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    public handleChange = (pagination: any, filters: any, sorter: any) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n        });\r\n    }\r\n\r\n    public handleDelete = (key: any) => {\r\n        console.log(key)\r\n    }\r\n\r\n    public addGoodType = () => {\r\n        this.showDrawer()\r\n    }\r\n\r\n    public editAuthentCard = (cardMsg: any) => {\r\n        console.log(cardMsg)\r\n        this.setState({\r\n            cardVisible: true,\r\n            \"cardMsg\": cardMsg\r\n        })\r\n    }\r\n\r\n    public editAuthentStatus = (record: any) => {\r\n        console.log(record.size === \"----\", record)\r\n        this.setState({\r\n            authentVisible: true,\r\n            updateId: record.key,\r\n        })\r\n    }\r\n\r\n    public showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    public deleteGoodType = () => {\r\n\r\n        const selectedRowKeys = this.state.selectedRowKeys\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: \"/good/delete\",\r\n            data: {\r\n                ids: selectedRowKeys\r\n            }\r\n        }).then((res: any) => {\r\n            if (res.data) {\r\n                message.success(\"删除成功\")\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 500);\r\n            } else {\r\n                message.error(\"删除失败\")\r\n            }\r\n        })\r\n\r\n    }\r\n    public handleOk = () => {\r\n        const { radioValue, updateId } = this.state\r\n        axios({\r\n            method: \"post\",\r\n            url: `/user/status`,\r\n            data: {\r\n                status: radioValue,\r\n                \"userId\": updateId\r\n            }\r\n        }).then((res) => {\r\n            if (res.data) {\r\n                message.success(\"修改成功\")\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 500);\r\n            } else {\r\n                message.error(\"修改失败\")\r\n            }\r\n        })\r\n    }\r\n\r\n    public handleCancel = () => {\r\n        this.setState({\r\n            authentVisible: false\r\n        })\r\n    }\r\n\r\n    public handleCardOk = () => {\r\n        this.setState({\r\n            cardVisible: false\r\n        })\r\n    }\r\n\r\n    public handleCardCancel = () => {\r\n        this.setState({\r\n            cardVisible: false\r\n        })\r\n    }\r\n\r\n    public radioChange = (e: any) => {\r\n        console.log(e.target.value)\r\n        this.setState({\r\n            radioValue: e.target.value\r\n        })\r\n    }\r\n    public render() {\r\n\r\n        const { selectedRowKeys, tableData, cardMsg } = this.state;\r\n\r\n        const That = this\r\n\r\n        let { filteredInfo }: any = this.state;\r\n\r\n        filteredInfo = filteredInfo || {};\r\n\r\n        const columns = [{\r\n            title: '用户类型',\r\n            dataIndex: 'userType',\r\n            key: 'userType',\r\n        }, {\r\n            title: '审核情况',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n        },{\r\n            title: '真实姓名',\r\n            dataIndex: 'userName',\r\n            key: 'userName',\r\n        }, {\r\n            title: '头像',\r\n            dataIndex: 'icon',\r\n            key: 'icon',\r\n            render: (text: any, record: any) => {\r\n\r\n                if (record.icon !== \"\") {\r\n\r\n                    const imageUrlList = record.icon.split(',')\r\n\r\n                    const images = imageUrlList.map((item: string, index: number) => (\r\n                        <a href=\"javascript:void(0);\" key={index} onClick={() => {\r\n                            That.setState({\r\n                                showImage: true,\r\n                                imageSrc: item\r\n                            })\r\n                        }}>点击查看</a>\r\n                    ))\r\n\r\n                    return images\r\n\r\n                } else {\r\n\r\n                    return <span>暂无</span>\r\n\r\n                }\r\n\r\n            }\r\n        }, {\r\n            title: '认证时间',\r\n            dataIndex: 'authtime',\r\n            key: 'authtime',\r\n        }, {\r\n            title: '创建时间',\r\n            dataIndex: 'ct',\r\n            key: 'ct',\r\n        }, {\r\n            title: '身份证信息',\r\n            dataIndex: 'card',\r\n            key: 'card',\r\n            render: (text: any, record: any) => {\r\n                return (\r\n                    <a href=\"javascript:;\" onClick={this.editAuthentCard.bind(this, record.card)}>身份证信息</a>\r\n                )\r\n            }\r\n        }, {\r\n            title: '操作',\r\n            dataIndex: 'operation',\r\n            key: 'operation',\r\n            render: (text: any, record: any) => {\r\n                return (\r\n                    <a href=\"javascript:;\" onClick={this.editAuthentStatus.bind(this, record)}>审核</a>\r\n                )\r\n            }\r\n        }];\r\n\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange\r\n        };\r\n\r\n        const hasSelected = selectedRowKeys.length > 0\r\n\r\n        return (\r\n            <div>\r\n                <Breadcrumb style={{ textAlign: \"left\", marginBottom: 25 }}>\r\n                    <Breadcrumb.Item>用户管理</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"\">审核报表</a>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div style={{ marginBottom: 16, textAlign: \"left\" }}>\r\n                    <Button type=\"primary\" onClick={this.addGoodType.bind(this)} style={{ marginRight: 20 }}>\r\n                        添加\r\n                    </Button>\r\n                    <Button type=\"danger\" disabled={!hasSelected} onClick={() => {\r\n                        this.deleteGoodType()\r\n                    }}>\r\n                        删除\r\n                    </Button>\r\n\r\n                    <span style={{ marginLeft: 8 }}>\r\n                        {hasSelected ? `选择了${selectedRowKeys.length}项` : ''}\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <Table rowSelection={rowSelection} columns={columns} dataSource={tableData}\r\n                        pagination={{ pageSize: 10 }}\r\n                        onChange={this.handleChange}\r\n                        locale={{ filterConfirm: \"确定\", filterReset: \"重置\", emptyText: \"暂无数据\" }}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    visible={this.state.showImage}\r\n                    onCancel={() => this.setState({ showImage: false })}\r\n                    footer={null}\r\n                >\r\n                    {PopImage(this.state.imageSrc)}\r\n                </Modal>\r\n                <Modal\r\n                    title=\"选择角色\"\r\n                    visible={this.state.authentVisible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <div>\r\n                        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\"\r\n                            onChange={this.radioChange.bind(this)}\r\n                        >\r\n                            <Radio.Button value={0}>待审核</Radio.Button>\r\n                            <Radio.Button value={1}>审核通过</Radio.Button>\r\n                            <Radio.Button value={2}>审核失败</Radio.Button>\r\n                        </Radio.Group>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    title=\"身份证信息\"\r\n                    width={600}\r\n                    visible={this.state.cardVisible}\r\n                    onOk={this.handleCardOk}\r\n                    onCancel={this.handleCardCancel}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <div className=\"cardMsgs\">\r\n                        <div className=\"msgs\">\r\n                            <p>\r\n                                <span>身份证号：</span>\r\n                                <span>{cardMsg.cardNum}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>真实姓名：</span>\r\n                                <span>{cardMsg.realName}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>性别：</span>\r\n                                <span>{cardMsg.sex}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>民族：</span>\r\n                                <span>{cardMsg.nation}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>生日：</span>\r\n                                <span>{cardMsg.birthday}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>身份证地址：</span>\r\n                                <span>{cardMsg.cardAddress}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>区域</span>\r\n                                <span>{cardMsg.cityCode}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>身份证签发地：</span>\r\n                                <span>{cardMsg.signFrom}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"photos\">\r\n                            <p>\r\n                                <Popover content={PopImage(cardMsg.frontPhoto)} placement=\"right\" trigger=\"click\"\r\n                                    autoAdjustOverflow={false}\r\n                                    title=\"正面照片\"\r\n                                >\r\n                                    <img src={cardMsg.frontPhoto} alt=\"\" style={{ width: \"100%\" }} />\r\n                                </Popover>\r\n                            </p>\r\n                            <p>\r\n                                <Popover content={PopImage(cardMsg.backPhoto)} placement=\"right\" trigger=\"click\"\r\n                                    autoAdjustOverflow={false}\r\n                                    title=\"反面照片\"\r\n                                >\r\n                                    <img src={cardMsg.backPhoto} alt=\"\" style={{ width: \"100%\" }} />\r\n                                </Popover>\r\n                            </p>\r\n                            <p>\r\n                                <Popover content={PopImage(cardMsg.handPhoto)} placement=\"right\" trigger=\"click\"\r\n                                    autoAdjustOverflow={false}\r\n                                    title=\"手持照片\"\r\n                                >\r\n                                    <img src={cardMsg.handPhoto} alt=\"\" style={{ width: \"100%\" }} />\r\n                                </Popover>\r\n                            </p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}