{"version":3,"sources":["pages/charts/userChart.tsx"],"names":["TabPane","Tabs","MonthPicker","DatePicker","UserChart","state","data","mdata","tabKey","defaultYear","moment","format","defaultMonth","changeYear","year","that","Object","E_pet_admin_web_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","_this","axios","method","url","concat","then","res","xData","monthData","map","item","index","month","value","parseInt","console","log","setState","changeMonth","date","dateString","mData","changeTab","key","this","menu","react__WEBPACK_IMPORTED_MODULE_6__","antd__WEBPACK_IMPORTED_MODULE_9__","Item","onClick","bind","operations","antd__WEBPACK_IMPORTED_MODULE_10__","overlay","className","href","antd__WEBPACK_IMPORTED_MODULE_11__","type","monthOperations","antd__WEBPACK_IMPORTED_MODULE_15__","locale","zh_CN","onChange","defaultValue","size","placeholder","_this$state","antd__WEBPACK_IMPORTED_MODULE_12__","style","textAlign","marginBottom","antd__WEBPACK_IMPORTED_MODULE_7__","defaultActiveKey","tabBarExtraContent","tab","bizcharts__WEBPACK_IMPORTED_MODULE_13__","height","scale","tickInterval","forceFit","name","crosshairs","position","React"],"mappings":"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","file":"static/js/21.00b626e9.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Breadcrumb, Tabs, Dropdown, Icon, Menu, DatePicker\r\n} from 'antd';\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n} from \"bizcharts\";\r\nimport axios from '../../util/Axios';\r\nimport { LocaleProvider } from 'antd';\r\n\r\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\r\n\r\nimport 'moment/locale/zh-cn';\r\n\r\nimport moment from 'moment'\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst { MonthPicker, } = DatePicker;\r\n\r\n\r\nexport default class UserChart extends React.Component {\r\n\r\n  public state = {\r\n    data: [],\r\n    mdata: [],\r\n    tabKey: \"1\",\r\n    defaultYear:moment().format(\"YYYY\"),\r\n    defaultMonth:moment().format(\"YYYY-MM\")\r\n  }\r\n\r\n  public componentDidMount() {\r\n    const that = this\r\n    const {defaultYear} = this.state\r\n    axios({\r\n      method: \"get\",\r\n      url: `/chart/mlist?year=${defaultYear}`\r\n    }).then((res:any) => {\r\n      if (res) {\r\n        const xData = res.monthData.map((item: any, index: number) => {\r\n          return {\r\n            month: index + 1 + \"月\",\r\n            value: item || 0\r\n          }\r\n        })\r\n        that.setState({\r\n          data: xData\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  public changeYear = (year: string) => {\r\n    const that = this\r\n    axios({\r\n      method: \"get\",\r\n      url: `/chart/mlist?year=${year}`\r\n    }).then((res:any) => {\r\n      if (res) {\r\n        const xData = res.monthData.map((item: any, index: number) => {\r\n          return {\r\n            month: index + 1 + \"月\",\r\n            value: parseInt(item, 10) || 0\r\n          }\r\n        })\r\n        console.log(xData)\r\n        that.setState({\r\n          data: xData\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  public changeMonth = (date: moment.Moment, dateString: string) => {\r\n    const that = this\r\n    axios({\r\n      method: \"get\",\r\n      url: `/chart/dlist?month=${dateString}`\r\n    }).then((res:any) => {\r\n      if (res) {\r\n        const mData = res.monthData.map((item: any, index: number) => {\r\n          return {\r\n            month: index + 1 + \"号\",\r\n            value: parseInt(item, 10) || 0\r\n          }\r\n        })\r\n        that.setState({\r\n          mdata: mData\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  public changeTab = (key:string)=>{\r\n    const that = this\r\n    const {defaultMonth} = this.state\r\n    if(key === \"2\"){\r\n      axios({\r\n        method:\"get\",\r\n        url: `/chart/dlist?month=${defaultMonth}`\r\n      }).then((res:any)=>{\r\n        if (res) {\r\n          const mData = res.monthData.map((item: any, index: number) => {\r\n            return {\r\n              month: index + 1 + \"号\",\r\n              value: parseInt(item, 10) || 0\r\n            }\r\n          })\r\n          that.setState({\r\n            mdata: mData\r\n          })\r\n        }\r\n      })\r\n    }\r\n    this.setState({\r\n      tabKey:key\r\n    })\r\n  }\r\n\r\n  public render() {\r\n    const menu = (\r\n      <Menu>\r\n        <Menu.Item>\r\n          <div onClick={this.changeYear.bind(this, \"2019\")}>\r\n            2019年\r\n          </div>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n\r\n    const operations = <Dropdown overlay={menu}>\r\n      <a className=\"ant-dropdown-link\" href=\"#\">\r\n        选 择 年 份 <Icon type=\"down\" />\r\n      </a>\r\n    </Dropdown>;\r\n\r\n    const monthOperations =\r\n      <LocaleProvider locale={zh_CN}>\r\n        <MonthPicker\r\n          onChange={this.changeMonth}\r\n          defaultValue={moment(moment().format(), 'YYYY/MM')}\r\n          size=\"default\" placeholder=\"选 择 月 份\" />\r\n      </LocaleProvider>\r\n\r\n    const { data, mdata, tabKey } = this.state\r\n    const cols = {\r\n      value: {\r\n        tickInterval: 1\r\n      }\r\n    };\r\n    const cols2 = {\r\n      value: {\r\n        tickInterval: 1\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <Breadcrumb style={{ textAlign: \"left\", marginBottom: 25 }}>\r\n          <Breadcrumb.Item>统计报表</Breadcrumb.Item>\r\n          <Breadcrumb.Item>\r\n            <a href=\"\">用户报表</a>\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Tabs\r\n          defaultActiveKey={tabKey}\r\n          tabBarExtraContent={tabKey === \"1\" ? operations : monthOperations} size=\"large\" onChange={this.changeTab}>\r\n          <TabPane tab=\"年\" key=\"1\">\r\n            <div>\r\n              <Chart height={500} data={data} scale={cols} forceFit={true}>\r\n                <Axis name=\"month\" />\r\n                <Axis name=\"value\" />\r\n                <Tooltip\r\n                  crosshairs={{\r\n                    type: \"y\"\r\n                  }}\r\n                />\r\n                <Geom type=\"interval\" position=\"month*value\" />\r\n              </Chart>\r\n            </div>\r\n          </TabPane>\r\n          <TabPane tab=\"月\" key=\"2\">\r\n            <div>\r\n              <Chart height={500} data={mdata} scale={cols2} forceFit={true}>\r\n                <Axis name=\"month\" />\r\n                <Axis name=\"value\" />\r\n                <Tooltip\r\n                  crosshairs={{\r\n                    type: \"y\"\r\n                  }}\r\n                />\r\n                <Geom type=\"interval\" position=\"month*value\" />\r\n              </Chart>\r\n            </div>\r\n\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}