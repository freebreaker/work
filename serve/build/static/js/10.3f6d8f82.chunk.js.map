{"version":3,"sources":["util/petTypeOptions.ts","webpack:///./src/pages/divide/goodDivide/index.less?2e6f","pages/divide/goodDivide/index.less","pages/divide/goodDivide/index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","getPetTypeOptions","data","level","filter","Item","Index","map","item","index","ChildrenPidResult","id","pid","PItem","PIndex","value","toString","label","name","children","content","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","RadioGroup","Radio","Group","Dragger","Upload","GoodDivide","state","files","updateId","selectedRowKeys","selectedPetKeys","selectedPetTypeKeys","loading","filteredInfo","sortedInfo","visible","editVisible","imageUrl","defaultProductName","defalutSizeValue","editSizeVisible","tableData","resTableData","resPetTypeTableData","showImage","imageSrc","image","selectedPetOtherTypeKeys","clearAll","_this","setState","goodList","That","Object","E_pet_admin_web_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","axios","method","url","then","res","length","a","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","petTypeList","Symbol","iterator","next","done","console","log","concat","err","return","key","img","kinds","size","petItem","status","creatTime","ct","moment","parseInt","format","modifiedTime","mt","petName","operation","pettypeId","onSelectChange","handleChange","pagination","filters","sorter","handleDelete","addGoodType","showDrawer","editGoodType","record","deleteGoodType","ids","message","success","error","submitGoodType","_this$state","PID","PETTYPEID","forEach","editSubmitGoodType","_this$state2","handleUpload","_ref","fileList","file","imgName","adminId","localStorage","getItem","timeStamp","Date","getTime","alert","fileName","upToken","sendToQiniu","ImageString","concatImageString","this","FileList","E_pet_admin_web_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","imgSrc","_this2","_this$state3","columns","title","dataIndex","render","text","split","react__WEBPACK_IMPORTED_MODULE_7__","href","onClick","filteredValue","onFilter","Value","includes","bind","rowSelection","onChange","hasSelected","Options","optplainOptions","PetTypeOptions","style","marginBottom","textAlign","antd__WEBPACK_IMPORTED_MODULE_11__","type","marginRight","disabled","marginLeft","antd__WEBPACK_IMPORTED_MODULE_12__","dataSource","pageSize","locale","filterConfirm","filterReset","emptyText","antd__WEBPACK_IMPORTED_MODULE_13__","width","placement","closable","onClose","e","target","antd__WEBPACK_IMPORTED_MODULE_8__","margin","antd__WEBPACK_IMPORTED_MODULE_14__","val","placeholder","antd__WEBPACK_IMPORTED_MODULE_15__","display","alignItems","antd__WEBPACK_IMPORTED_MODULE_16__","v","changeOnSelect","className","beforeUpload","antd__WEBPACK_IMPORTED_MODULE_17__","position","left","bottom","borderTop","padding","background","defaultValue","src","alt","antd__WEBPACK_IMPORTED_MODULE_18__","onCancel","footer","destroyOnClose","React"],"mappings":"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","file":"static/js/10.3f6d8f82.chunk.js","sourcesContent":["export const getPetTypeOptions=(data:any,level:number)=>{\r\n\r\n    if(level===1){\r\n        return null\r\n    }\r\n\r\n    // if(level===2){\r\n\r\n    //     const filteredData = data.filter((item: any, index: number) => {\r\n    //         return item.id === 1\r\n    //     })\r\n    //     const Options=filteredData.map((item:any,index:number)=>{\r\n    //         return {\r\n    //             value:item.id,\r\n    //             label:item.name\r\n    //         }\r\n    //     })\r\n    //     return Options\r\n    // }\r\n\r\n    if(level === 3 || 2){\r\n\r\n        const filteredData = data.filter((Item:any,Index:number)=>(Item.level === 1))\r\n\r\n        const Options = filteredData.map((item: any, index: number) => {\r\n    \r\n            const ChildrenPidFiltered = data.filter((Item:any,Index:number)=>(item.id === Item.pid))\r\n    \r\n            const ChildrenPidResult = ChildrenPidFiltered.map((PItem:any,PIndex:number)=>{\r\n                return {\r\n                    value:PItem.id.toString(),\r\n                    label:PItem.name\r\n                }\r\n            })\r\n    \r\n            return {\r\n                value:item.id.toString(),\r\n                label:item.name,\r\n                children:ChildrenPidResult\r\n            }\r\n        })\r\n        \r\n        return Options\r\n    }\r\n\r\n\r\n}","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".Box {\\n  margin: 20px 0;\\n  vertical-align: inherit;\\n  display: flex;\\n  align-items: flex-start;\\n}\\n.Box .Dragger {\\n  width: 70%;\\n  display: inline-block;\\n}\\n\", \"\"]);\n\n","import * as React from 'react';\r\nimport {\r\n    Table, Button, Drawer, Radio, Cascader, Input, Icon, Upload, message, Modal, Checkbox\r\n} from 'antd';\r\nimport { getPetTypeOptions } from '../../../util/petTypeOptions';\r\nimport './index.less';\r\nimport axios from '../../../util/Axios';\r\nimport { sendToQiniu, concatImageString } from '../../../util/sendToQiniu';\r\nimport moment from 'moment'\r\n\r\nconst RadioGroup = Radio.Group;\r\nconst Dragger = Upload.Dragger;\r\n\r\nconst PopImage = (imgSrc: string) => (\r\n    <img src={imgSrc} alt=\"\" style={{ width: \"100%\" }} />\r\n)\r\n\r\nexport default class GoodDivide extends React.Component<any, any> {\r\n\r\n    public state = {\r\n        files: [],\r\n        updateId: 1, // edit id 要更新的id\r\n        selectedRowKeys: [], // Check here to configure the default column\r\n        selectedPetKeys: [],\r\n        selectedPetTypeKeys: [],\r\n        loading: false,\r\n        filteredInfo: null,\r\n        sortedInfo: \"\",\r\n        visible: false,\r\n        editVisible: false,\r\n        value: 2,  // 默认选择的一级分类\r\n        imageUrl: \"\",\r\n        defaultProductName: \"\", // 编辑商品名字\r\n        defalutSizeValue: 6, // 编辑商品体型\r\n        editSizeVisible: false,  // 编辑商品体型选项是否显示\r\n        tableData: [],\r\n        resTableData: [],\r\n        resPetTypeTableData: [],\r\n        showImage: false,\r\n        imageSrc: \"\",\r\n        image: \"\",\r\n        selectedPetOtherTypeKeys: [],\r\n        pid: \"\"\r\n    };\r\n\r\n\r\n    public clearAll = () => {\r\n        this.setState({\r\n            files: [],\r\n            updateId: 1, // edit id 要更新的id\r\n            selectedRowKeys: [], // Check here to configure the default column\r\n            selectedPetKeys: [],\r\n            selectedPetTypeKeys: [],\r\n            loading: false,\r\n            filteredInfo: null,\r\n            sortedInfo: \"\",\r\n            visible: false,\r\n            editVisible: false,\r\n            value: 2,  // 默认选择的一级分类\r\n            imageUrl: \"\",\r\n            defaultProductName: \"\", // 编辑商品名字\r\n            defalutSizeValue: 6, // 编辑商品体型\r\n            editSizeVisible: false,  // 编辑商品体型选项是否显示\r\n            showImage: false,\r\n            imageSrc: \"\",\r\n            image: \"\",\r\n            selectedPetOtherTypeKeys: [],\r\n            pid: \"\"\r\n        })\r\n    }\r\n\r\n    public goodList = () => {\r\n        const That = this\r\n        axios({\r\n            method: \"get\",\r\n            url: \"/good/list\"\r\n        }).then((res: any) => {\r\n            if (res.goodList && res.goodList.length > 0) {\r\n                const tableData = res.goodList.map((item: any, index: number) => {\r\n                    let a = ''\r\n                    for (const iterator of item.petTypeList) {\r\n                        if (iterator) {\r\n                            console.log(iterator.name)\r\n                            a += ` ${iterator.name} `;\r\n                        }\r\n                    }\r\n                    return {\r\n                        key: item.id,  // key 应带对应data id \r\n                        name: item.name,\r\n                        image: item.img ? item.img : \"\",\r\n                        kinds: `${item.level}级分类`,\r\n                        size: item.level === 3 ? res.goodList.filter((petItem: any) => petItem.id === item.pid)[0].name : \"----\",\r\n                        status: item.status ? item.status : \"----\",\r\n                        creatTime: item.ct ? moment(parseInt(item.ct, 10)).format('YYYY-MM-DD H:mm:ss') : \"----\",\r\n                        modifiedTime: item.mt ? moment(parseInt(item.mt, 10)).format('YYYY-MM-DD H:mm:ss') : \"----\",\r\n                        petName: item.petTypeList.length > 0 ? a : \"----\",\r\n                        operation: \"\",\r\n                        pid: item.pid,\r\n                        pettypeId: item.pettypeId\r\n                    }\r\n                })\r\n                That.setState({\r\n                    \"tableData\": tableData,\r\n                    resTableData: res.goodList,\r\n                    resPetTypeTableData: res.petTypeList\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.goodList()\r\n    }\r\n\r\n    public onSelectChange = (selectedRowKeys: any) => {\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    public handleChange = (pagination: any, filters: any, sorter: any) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n        });\r\n    }\r\n\r\n    public handleDelete = (key: any) => {\r\n        console.log(key)\r\n    }\r\n\r\n    public addGoodType = () => {\r\n        this.showDrawer()\r\n    }\r\n\r\n    public editGoodType = (record: any) => {\r\n        console.log(record)\r\n        this.setState({\r\n            editVisible: true,\r\n            editSizeVisible: record.size !== \"----\",\r\n            defaultProductName: record.name,\r\n            updateId: record.key,\r\n            // defaultEdit\r\n            value: record.kinds === \"1级分类\" ? 1 : 2,\r\n            selectedPetTypeKeys: record.pid < 0 ? [] : [record.pettypeId.toString()],\r\n            image: record.image,\r\n            selectedPetKeys:[record.pid.toString()]\r\n        })\r\n    }\r\n\r\n    public showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    public deleteGoodType = () => {\r\n        \r\n        const selectedRowKeys = this.state.selectedRowKeys\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: \"/good/delete\",\r\n            data: {\r\n                ids: selectedRowKeys\r\n            }\r\n        }).then((res: any) => {\r\n            if (res) {\r\n                message.success(\"删除成功\")\r\n                this.goodList()\r\n                this.clearAll()\r\n            } else {\r\n                message.error(\"删除失败\")\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public submitGoodType = () => {\r\n\r\n        const That = this\r\n\r\n        const { defaultProductName, selectedPetKeys, selectedPetTypeKeys, imageUrl, value, } = this.state\r\n\r\n        const PID = selectedPetKeys[0] ? this.state.selectedPetKeys[0] : -1\r\n\r\n        // const PETTYPEID = selectedPetTypeKeys[0] ? selectedPetTypeKeys[selectedPetTypeKeys.length - 1] : -1\r\n        let PETTYPEID = ''\r\n\r\n        selectedPetTypeKeys.forEach((item, index) => {\r\n            if (index !== selectedPetTypeKeys.length - 1) {\r\n                PETTYPEID += `${item},`\r\n            } else {\r\n                PETTYPEID += `${item}`\r\n            }\r\n        })\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: \"/good/add\",\r\n            data: {\r\n                name: defaultProductName,\r\n                pid: PID,\r\n                pettypeId: PETTYPEID,\r\n                img: imageUrl,\r\n                level: value,\r\n            }\r\n        }).then((res: any) => {\r\n            if (res) {\r\n                message.success(\"添加成功\")\r\n                That.goodList()\r\n                That.clearAll()\r\n            } else {\r\n                message.error(\"添加失败\")\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    public editSubmitGoodType = () => {\r\n\r\n        const { defaultProductName, imageUrl, updateId, value, selectedPetKeys, selectedPetTypeKeys, image } = this.state\r\n\r\n        const PID = selectedPetKeys[0] ? parseInt(this.state.selectedPetKeys[0], 10) : -1\r\n\r\n        let PETTYPEID = ''\r\n\r\n        selectedPetTypeKeys.forEach((item, index) => {\r\n            if (index !== selectedPetTypeKeys.length - 1) {\r\n                PETTYPEID += `${item},`\r\n            } else {\r\n                PETTYPEID += `${item}`\r\n            }\r\n        })\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: \"/good/edit\",\r\n            data: {\r\n                id: updateId,\r\n                name: defaultProductName,\r\n                image: imageUrl ? imageUrl : image,\r\n                pid: PID,\r\n                pettypeId: PETTYPEID,\r\n                level: value,\r\n            }\r\n        }).then((res: any) => {\r\n            if (res) {\r\n                message.success(\"修改成功\")\r\n                this.goodList()\r\n                this.clearAll()\r\n            } else {\r\n                message.error(\"修改失败\")\r\n            }\r\n        })\r\n    }\r\n\r\n    public beforeUpload(file: any) {\r\n\r\n        const FileList = this.state.files\r\n\r\n        this.setState({\r\n            files: [...FileList, file]\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n    public handleUpload = ({ fileList, file }: { fileList: any, file: any }) => {\r\n\r\n        const imgName = file.name\r\n\r\n\r\n        let adminId: string | null = localStorage.getItem(\"adminId\")\r\n\r\n        const timeStamp = new Date().getTime().toString()\r\n    \r\n        if (adminId) {\r\n            while (adminId.length < 36) {\r\n                adminId += \"x\"\r\n            }\r\n        } else {\r\n            alert(\"请重新登陆\")\r\n        }\r\n    \r\n    \r\n        const fileName = `${adminId}${timeStamp}ao12`\r\n\r\n        fileList.map((item:any,index:number)=>{  \r\n            if(item.name === imgName){\r\n                item.name = fileName\r\n            }\r\n            return\r\n        })\r\n\r\n        console.log(fileList,file)\r\n\r\n        const upToken = localStorage.getItem('uploadToken')  // 获得token\r\n\r\n        if (upToken) {\r\n            sendToQiniu(file, fileName, upToken,\"ao\") // 发送到七牛\r\n        }\r\n\r\n        const ImageString = concatImageString(fileList)\r\n\r\n\r\n        this.setState({\r\n            files: fileList,\r\n            \"imageUrl\": ImageString\r\n        })\r\n\r\n    }\r\n\r\n    // public addCascader = () => {\r\n    //     this.setState({\r\n    //         selectedPetOtherTypeKeys:[1]\r\n    //     })\r\n\r\n    // }\r\n\r\n    public render() {\r\n\r\n        const { selectedRowKeys, editSizeVisible, defalutSizeValue, tableData, resPetTypeTableData, files,\r\n            selectedPetTypeKeys, image, selectedPetKeys } = this.state;\r\n\r\n        let { filteredInfo }: any = this.state;\r\n\r\n        filteredInfo = filteredInfo || {};\r\n\r\n        const columns = [{\r\n            title: '分类名',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        }, {\r\n            title: '图片',\r\n            dataIndex: 'image',\r\n            key: 'image',\r\n            render: (text: any, record: any) => {\r\n\r\n                if (record.image !== \"\") {\r\n\r\n                    const imageUrlList = record.image.split(',')\r\n\r\n                    const images = imageUrlList.map((item: string, index: number) => (\r\n                        <a href=\"javascript:void(0);\" key={index} onClick={() => {\r\n                            this.setState({\r\n                                showImage: true,\r\n                                imageSrc: item\r\n                            })\r\n                        }}>点击查看</a>\r\n                    ))\r\n\r\n                    return images\r\n\r\n                } else {\r\n\r\n                    return <span>暂无</span>\r\n\r\n                }\r\n\r\n            }\r\n        }, {\r\n            title: '商品种类',\r\n            dataIndex: 'kinds',\r\n            key: 'kinds',\r\n            filters: [\r\n                { text: '1级分类', value: '1' },\r\n                { text: '2级分类', value: '2' },\r\n            ],\r\n            filteredValue: filteredInfo.kinds || null,\r\n            onFilter: (Value: string, record: any) => record.kinds.toString().includes(Value),\r\n        }, {\r\n            title: '创建时间',\r\n            dataIndex: 'creatTime',\r\n            key: 'creatTime',\r\n        }, {\r\n            title: '最后修改时间',\r\n            dataIndex: 'modifiedTime',\r\n            key: 'modifiedTime',\r\n        }, {\r\n            title: '商品种类名称',\r\n            dataIndex: 'petName',\r\n            key: 'petName',\r\n        }, {\r\n            title: '操作',\r\n            dataIndex: 'operation',\r\n            key: 'operation',\r\n            render: (text: any, record: any) => {\r\n                return (\r\n                    <a href=\"javascript:;\" onClick={this.editGoodType.bind(this, record)}>编辑</a>\r\n                )\r\n            }\r\n        }];\r\n\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange\r\n        };\r\n\r\n        const hasSelected = selectedRowKeys.length > 0;\r\n\r\n        const Options = [\r\n            { label: '主食', value: '1' },\r\n            { label: '零食', value: '2' },\r\n            { label: '保健', value: '3' },\r\n            { label: '日用', value: '4' },\r\n        ]\r\n\r\n        const optplainOptions = [\r\n            { label: '汪汪', value: '1' },\r\n            { label: '喵喵', value: '2' },\r\n            { label: '鸟', value: '3' },\r\n            { label: '鱼', value: '4' },\r\n            { label: '小宠物', value: '5' },\r\n        ];\r\n\r\n        const PetTypeOptions = getPetTypeOptions(resPetTypeTableData, 2)\r\n\r\n        return (\r\n            <div>\r\n                <div style={{ marginBottom: 16, textAlign: \"left\" }}>\r\n                    <Button type=\"primary\" onClick={this.addGoodType.bind(this)} style={{ marginRight: 20 }}>\r\n                        添加\r\n                    </Button>\r\n                    <Button type=\"danger\" disabled={!hasSelected} onClick={() => {\r\n                        this.deleteGoodType()\r\n                    }}>\r\n                        删除\r\n                    </Button>\r\n\r\n                    <span style={{ marginLeft: 8 }}>\r\n                        {hasSelected ? `选择了${selectedRowKeys.length}项` : ''}\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <Table rowSelection={rowSelection} columns={columns} dataSource={tableData}\r\n                        pagination={{ pageSize: 10 }}\r\n                        onChange={this.handleChange}\r\n                        locale={{ filterConfirm: \"确定\", filterReset: \"重置\", emptyText: \"暂无数据\" }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Drawer\r\n                        width={500}\r\n                        title=\"添加商品类型\"\r\n                        placement=\"right\"\r\n                        closable={true}\r\n                        onClose={() => { this.setState({ visible: false, files: [] }) }}\r\n                        visible={this.state.visible}\r\n                    >\r\n                        <RadioGroup onChange={(e: any) => { this.setState({ value: e.target.value }) }} value={this.state.value}>\r\n                            <Radio value={1}>根目录</Radio>\r\n                            <Radio value={2}>商品种类</Radio>\r\n                        </RadioGroup>\r\n                        <div style={{ margin: \"20px 0\" }}>\r\n                            {this.state.value === 2 ? <span>商品层级：</span> : \"\"}\r\n                            {this.state.value === 2 ?\r\n                                <Cascader style={{ width: \"70%\" }} \r\n                                options={Options} \r\n                                onChange={(val: any) => this.setState({ selectedPetKeys: val })} \r\n                                placeholder=\"选择上一层级\" />\r\n                                : \"\"}\r\n                        </div>\r\n                        <div>\r\n                            <span>商品分类：</span>\r\n                            <Input style={{ width: \"70%\" }} placeholder=\"请输入分类名\" onChange={(e: any) => { this.setState({ defaultProductName: e.target.value }) }} />\r\n                        </div>\r\n                        {\r\n                            this.state.value === 2 ?\r\n                                <div style={{ margin: \"20px 0\", display: \"flex\", alignItems: \"center\" }}>\r\n                                    <span>宠物种类：</span>\r\n                                    <Checkbox.Group options={optplainOptions} value={selectedPetTypeKeys} onChange={(v: any) => this.setState({ selectedPetTypeKeys: v })} />\r\n                                    <Cascader style={{ width: \"70%\", display: \"none\" }}\r\n                                        options={PetTypeOptions}\r\n                                        onChange={(val: any) => this.setState({ selectedPetTypeKeys: val })}\r\n                                        changeOnSelect={true}\r\n                                        placeholder=\"选择宠物种类\" />\r\n                                </div> : \"\"\r\n                        }\r\n\r\n                        {/* {\r\n                            CascaderWrap\r\n                        } */}\r\n\r\n                        <div className=\"Box\">\r\n                            <span>商品图片：</span>\r\n\r\n                            <Dragger className=\"Dragger\"\r\n                                fileList={files}\r\n                                beforeUpload={this.beforeUpload.bind(this)}\r\n                                onChange={this.handleUpload}\r\n                            >\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <Icon type=\"inbox\" />\r\n                                </p>\r\n                                <p className=\"ant-upload-hint\">点击或拖拽图片至此处</p>\r\n                            </Dragger>\r\n                        </div>\r\n                        <div\r\n                            style={{\r\n                                position: 'absolute',\r\n                                left: 0,\r\n                                bottom: 0,\r\n                                width: '100%',\r\n                                borderTop: '1px solid #e9e9e9',\r\n                                padding: '10px 16px',\r\n                                background: '#fff',\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={() => { this.setState({ visible: false }) }} style={{ marginRight: 8 }}>\r\n                                取消\r\n                            </Button>\r\n                            <Button onClick={() => {\r\n                                this.setState({ visible: true })\r\n                                this.submitGoodType()\r\n                            }}\r\n                                type=\"primary\">\r\n                                确定\r\n                            </Button>\r\n                        </div>\r\n                    </Drawer>\r\n                </div>\r\n                <div>\r\n                    <Drawer\r\n                        width={500}\r\n                        title=\"编辑商品类型\"\r\n                        placement=\"right\"\r\n                        closable={true}\r\n                        onClose={this.clearAll}\r\n                        visible={this.state.editVisible}\r\n                    >\r\n                        <RadioGroup onChange={(e: any) => { this.setState({ value: e.target.value }) }} value={this.state.value}>\r\n                            <Radio value={1}>根目录</Radio>\r\n                            <Radio value={2}>商品种类</Radio>\r\n                        </RadioGroup>\r\n                        <div style={{ margin: \"20px 0\" }}>\r\n                            {this.state.value === 2 ? <span>商品层级：</span> : \"\"}\r\n                            {this.state.value === 2 ?\r\n                                <Cascader style={{ width: \"70%\" }}\r\n                                    value={selectedPetKeys}\r\n                                    options={Options}\r\n                                    onChange={(val: any) => this.setState({ selectedPetKeys: val })}\r\n                                    placeholder=\"选择上一层级\" />\r\n                                : \"\"}\r\n                        </div>\r\n                        <div>\r\n                            <span>商品分类：</span>\r\n                            <Input style={{ width: \"70%\" }} placeholder=\"请输入分类名\" onChange={(e: any) => { this.setState({ defaultProductName: e.target.value }) }}\r\n                                defaultValue={this.state.defaultProductName}\r\n                                value={this.state.defaultProductName}\r\n                            />\r\n                        </div>\r\n                        {\r\n                            this.state.value === 2 ?\r\n                                <div style={{ margin: \"20px 0\", display: \"flex\", alignItems: \"center\" }}>\r\n                                    <span>宠物种类：</span>\r\n                                    <Checkbox.Group options={optplainOptions} value={selectedPetTypeKeys} onChange={(v: any) => this.setState({ selectedPetTypeKeys: v })} />\r\n                                    <Cascader style={{ width: \"70%\", display: \"none\" }}\r\n                                        options={PetTypeOptions}\r\n                                        onChange={(val: any) => this.setState({ selectedPetTypeKeys: val })}\r\n                                        changeOnSelect={true}\r\n                                        placeholder=\"选择宠物种类\" />\r\n                                </div> : \"\"\r\n                        }\r\n\r\n                        <div className=\"Box\">\r\n                            <span>商品图片：</span>\r\n                            <Dragger className=\"Dragger\"\r\n                                fileList={files}\r\n                                beforeUpload={this.beforeUpload.bind(this)}\r\n                                onChange={this.handleUpload}\r\n                            >\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <Icon type=\"inbox\" />\r\n                                </p>\r\n                                <p className=\"ant-upload-hint\">点击或拖拽图片至此处</p>\r\n                            </Dragger>\r\n                        </div>\r\n                        {\r\n                            image ?\r\n                                <div>\r\n                                    <img src={image} alt=\"\"\r\n                                        style={{ width: \"70%\", marginLeft: \"16%\" }} />\r\n                                </div> : \"\"\r\n                        }\r\n\r\n                        {\r\n                            editSizeVisible ?\r\n                                <div>\r\n                                    <span>体型：</span>\r\n                                    <RadioGroup onChange={(e: any) => { this.setState({ defalutSizeValue: e.target.value }) }} value={defalutSizeValue}>\r\n                                        <Radio value={6}>大型犬</Radio>\r\n                                        <Radio value={7}>中型犬</Radio>\r\n                                        <Radio value={8}>小型犬</Radio>\r\n                                    </RadioGroup>\r\n                                </div> : \"\"\r\n                        }\r\n                        <div\r\n                            style={{\r\n                                position: 'absolute',\r\n                                left: 0,\r\n                                bottom: 0,\r\n                                width: '100%',\r\n                                borderTop: '1px solid #e9e9e9',\r\n                                padding: '10px 16px',\r\n                                background: '#fff',\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={() => { this.setState({ editVisible: false }) }} style={{ marginRight: 8 }}>\r\n                                取消\r\n                            </Button>\r\n                            <Button onClick={() => {\r\n                                this.editSubmitGoodType()\r\n                            }}\r\n                                type=\"primary\">\r\n                                确认\r\n                            </Button>\r\n                        </div>\r\n                    </Drawer>\r\n                    <Modal\r\n                        visible={this.state.showImage}\r\n                        onCancel={() => this.setState({ showImage: false })}\r\n                        footer={null}\r\n                        destroyOnClose={true}\r\n                    >\r\n                        {PopImage(this.state.imageSrc)}\r\n                    </Modal>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}