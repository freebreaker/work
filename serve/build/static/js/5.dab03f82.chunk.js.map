{"version":3,"sources":["admin/components/PositionBox/index.tsx","admin/pages/bannerRecharge/index.tsx"],"names":["PositonBox","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","Boxes","color","content","_react_16_9_0_react","tag","props","type","React","Option","FirstPageBanner","es_form","create","name","_useState","useState","_useState2","slicedToArray","tableData","setTableData","_useState3","_useState4","selectedRowKeys","setSelectedRowKeys","_useState5","_useState6","addVisible","setAddVisible","_useState7","_useState8","fileList","setFileList","_useState9","_useState10","pageValue","_useState11","_useState12","edit","setEdit","_useState13","_useState14","editId","setEditId","_useState15","_useState16","editImgSrc","setEditImgSrc","_useState17","_useState18","showImage","setShowImage","_useState19","_useState20","imgSrc","setImgSrc","useEffect","apiGetPictureList","then","res","data","map","item","index","id","page","position","cuser","hasSelected","length","columns","title","dataIndex","filters","text","filterMultiple","onFilter","record","console","log","toString","indexOf","render","details","concat","PositionBox_PositonBox","src","alt","style","width","cursor","onClick","form","setFieldsValue","rowSelection","onChange","Props","onRemove","file","newFileList","slice","splice","beforeUpload","toConsumableArray","marginBottom","textAlign","es_button","marginRight","disabled","apiDeletePicture","message","success","setTimeout","window","location","reload","error","marginLeft","table","dataSource","pagination","pageSize","locale","filterConfirm","filterReset","emptyText","drawer","placement","closable","onClose","undefined","visible","labelCol","span","wrapperCol","onSubmit","e","preventDefault","validateFields","err","values","formData","FormData","forEach","append","apiEditPicture","apiPostPicture","Item","label","getFieldDecorator","initialValue","rules","required","es_select","valuePropName","getValueFromEvent","Array","isArray","upload","Dragger","assign","className","icon","left","bottom","borderTop","padding","background","htmlType","hasErrors","getFieldsError","modal","onCancel","footer","destroyOnClose"],"mappings":"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","file":"static/js/5.dab03f82.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Tag } from \"antd\";\r\n\r\ninterface IAuditBoxProps {\r\n    type: number\r\n}\r\n\r\nexport class PositonBox extends React.Component<IAuditBoxProps> {\r\n\r\n    public render() {\r\n        const Boxes = [{\r\n            color: \"#108ee9\",\r\n            content: \"banner\"\r\n        }, {\r\n            color: \"#87d068\",\r\n            content: \"中间\"\r\n        }, {\r\n            color: \"#f50\",\r\n            content: \"底部\"\r\n        },]\r\n        return (\r\n            <div>\r\n                <Tag color={Boxes[this.props.type].color}>{Boxes[this.props.type].content}</Tag>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect, useState } from 'react'\r\nimport { Button, Table, Drawer, Form, Input, Select, Upload, Icon, message, Modal } from 'antd';\r\nimport { apiGetPictureList, apiPostPicture, apiEditPicture, apiDeletePicture } from '../api';\r\nimport { hasErrors } from '../../util/hasErrors';\r\nimport { PositonBox } from '../../components/PositionBox';\r\n\r\nconst { Option } = Select;\r\n\r\nconst FirstPageBannerWrap = (props: any) => {\r\n\r\n    const [tableData, setTableData] = useState([]);\r\n\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n\r\n    const [addVisible, setAddVisible] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState()\r\n\r\n    const [pageValue, setPageValue] = useState()\r\n\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    const [editId, setEditId] = useState()\r\n\r\n    const [editImgSrc, setEditImgSrc] = useState()\r\n\r\n    const [showImage, setShowImage] = useState(false)\r\n\r\n    const [imgSrc, setImgSrc] = useState()  // 弹出层图片\r\n\r\n    useEffect(() => {\r\n        apiGetPictureList().then((res: any) => {\r\n            if (res) {\r\n                const data = res.map((item: any, index: number) => {\r\n                    return {\r\n                        key: item.id,\r\n                        page: item.page,\r\n                        position: item.type,\r\n                        imgSrc: item.imgSrc,\r\n                        cuser: item.cuser ? item.cuser.name : \"----\"\r\n                    }\r\n                })\r\n                setTableData(data)\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const addPic = () => {\r\n        setAddVisible(true)\r\n    }\r\n\r\n    const delPic = () => {\r\n        apiDeletePicture(selectedRowKeys).then((res: any) => {\r\n            if (res) {\r\n                message.success(\"删除成功\")\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 500)\r\n            } else {\r\n                message.error(\"删除失败\")\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const onSelectChange = (selectedRowKeys: any) => {\r\n        setSelectedRowKeys(selectedRowKeys)\r\n    }\r\n\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err: any, values: any) => {\r\n            if (!err) {\r\n                const formData = new FormData();\r\n                if (fileList) {\r\n                    fileList.forEach((file: any) => {\r\n                        formData.append('files', file);\r\n                    });\r\n                }\r\n                formData.append(\"page\", values.page)\r\n                formData.append(\"type\", values.type)\r\n                formData.append(\"title\", \"title\")\r\n                formData.append(\"content\", \"content\")\r\n                // apiPostPicture(values.page,values.type,values.fileList)\r\n\r\n                if (edit) {\r\n                    formData.append('editId', editId)\r\n                    formData.append(\"imgSrc\", editImgSrc)\r\n                    apiEditPicture(formData).then((res: any) => {\r\n                        if (res) {\r\n                            message.success(\"编辑成功\")\r\n                            setTimeout(() => {\r\n                                window.location.reload()\r\n                            }, 500)\r\n                        } else {\r\n                            message.error(\"编辑失败\")\r\n                        }\r\n                    })\r\n                } else {\r\n                    apiPostPicture(formData).then((res: any) => {\r\n                        if (res) {\r\n                            message.success(\"添加成功\")\r\n                            setTimeout(() => {\r\n                                window.location.reload()\r\n                            }, 500)\r\n                        } else {\r\n                            message.error(\"添加失败\")\r\n                        }\r\n                    })\r\n                }\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    const columns = [\r\n        {\r\n            title: '导航栏页面',\r\n            dataIndex: 'page',\r\n            key: 'page',\r\n            filters: [\r\n                {\r\n                    text: '第1页',\r\n                    value: '1',\r\n                },\r\n                {\r\n                    text: '第2页',\r\n                    value: '2',\r\n                },\r\n            ],\r\n            filterMultiple: false,\r\n            onFilter: (value: any, record: any) => {\r\n                console.log(record,value)\r\n                return record.page.toString().indexOf(value) === 0\r\n            },\r\n            render: (details: any, record: any) => {\r\n                return (\r\n                    <span>{`第${record.page}页`}</span>\r\n                )\r\n            }\r\n        }, {\r\n            title: '图片位置',\r\n            dataIndex: 'position',\r\n            key: 'position',\r\n            filters: [\r\n                {\r\n                    text: 'banner',\r\n                    value: '1',\r\n                },\r\n                {\r\n                    text: '中间',\r\n                    value: '2',\r\n                },\r\n                {\r\n                    text: '底部',\r\n                    value: '3',\r\n                },\r\n            ],\r\n            filterMultiple: false,\r\n            onFilter: (value: any, record: any) => {\r\n                console.log(record,value)\r\n                return record.position.toString().indexOf(value) === 0\r\n            },\r\n            render: (details: any, record: any) => {\r\n                return (\r\n                    <PositonBox type={record.position - 1} />\r\n                )\r\n            }\r\n        }, {\r\n            title: '图片',\r\n            dataIndex: 'imgSrc',\r\n            key: 'imgSrc',\r\n            render: (details: any, record: any) => {\r\n                return (\r\n                    <img src={`/app/${record.imgSrc}`} alt=\"\"\r\n                        style={{ width: 70, cursor: \"pointer\" }}\r\n                        onClick={() => {\r\n                            setImgSrc(`/app/${record.imgSrc}`)\r\n                            setShowImage(true)\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        }, {\r\n            title: '操作人',\r\n            dataIndex: 'cuser',\r\n            key: 'cuser',\r\n        }, {\r\n            title: '操作',\r\n            render: (details: any, record: any) => {\r\n                return (\r\n                    <a onClick={() => {\r\n                        setAddVisible(true)\r\n                        setEdit(true)\r\n                        setEditId(record.key)\r\n                        setEditImgSrc(record.imgSrc)\r\n                        props.form.setFieldsValue({\r\n                            page: record.page,\r\n                            type: record.position\r\n                        });\r\n                    }}>编辑</a>\r\n                )\r\n            }\r\n        }]\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: onSelectChange\r\n    };\r\n\r\n    const normFile = (e: any) => {\r\n        console.log('Upload event:', e);\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n\r\n    const Props = {\r\n        onRemove: (file: any) => {\r\n            //   this.setState(state => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            //     return {\r\n            //       fileList: newFileList,\r\n            //     };\r\n            //   });\r\n            setFileList(newFileList)\r\n        },\r\n        beforeUpload: (file: any) => {\r\n            //   this.setState(state => ({\r\n            //     fileList: [...state.fileList, file],\r\n            //   }));\r\n            if (!fileList) {\r\n                setFileList([...[], file])\r\n                return false\r\n            }\r\n\r\n            setFileList([...fileList, file])\r\n            return false;\r\n        },\r\n        // fileList,\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ marginBottom: 16, textAlign: \"left\" }}>\r\n                <Button type=\"primary\" onClick={addPic} style={{ marginRight: 20 }}>\r\n                    添加\r\n                </Button>\r\n                <Button type=\"danger\" disabled={!hasSelected} onClick={() => {\r\n                    delPic()\r\n                }}>\r\n                    删除\r\n                </Button>\r\n                <span style={{ marginLeft: 8 }}>\r\n                    {hasSelected ? `选择了${selectedRowKeys.length}项` : ''}\r\n                </span>\r\n            </div>\r\n            <Table rowSelection={rowSelection} columns={columns} dataSource={tableData}\r\n                pagination={{ pageSize: 10 }}\r\n                locale={{ filterConfirm: \"确定\", filterReset: \"重置\", emptyText: \"暂无数据\" }}\r\n            />\r\n            <Drawer\r\n                width={500}\r\n                title={edit ? \"编辑\" : \"添加\"}\r\n                placement=\"right\"\r\n                closable={true}\r\n                onClose={() => {\r\n                    setAddVisible(false)\r\n                    setEdit(false)\r\n                    setEditId(undefined)\r\n                    setEditImgSrc(undefined)\r\n                    props.form.setFieldsValue({\r\n                        page: undefined,\r\n                        type: undefined\r\n                    });\r\n                }}\r\n                visible={addVisible}\r\n            >\r\n                <Form labelCol={{ span: 5 }} wrapperCol={{ span: 17 }} onSubmit={handleSubmit}>\r\n                    <Form.Item label=\"导航栏\">\r\n                        {props.form.getFieldDecorator('page', {\r\n                            initialValue: pageValue,\r\n                            rules: [{ required: true, message: '请选择导航栏' }],\r\n                        })(\r\n                            <Select style={{ width: 320 }} onChange={() => { return }}>\r\n                                <Option value={1}>首页</Option>\r\n                                <Option value={2}>第二页</Option>\r\n                            </Select>\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"位置\">\r\n                        {props.form.getFieldDecorator('type', {\r\n                            rules: [{ required: true, message: '请选择位置' }],\r\n                        })(\r\n                            <Select style={{ width: 320 }} onChange={() => { return }}>\r\n                                <Option value={1}>Banner</Option>\r\n                                <Option value={2}>中间</Option>\r\n                                <Option value={3}>底部</Option>\r\n                            </Select>\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"图片\">\r\n                        {props.form.getFieldDecorator('fileList', {\r\n                            valuePropName: 'fileList',\r\n                            getValueFromEvent: normFile,\r\n                        })(\r\n                            <Upload.Dragger name=\"files\" {...Props} style={{ width: 320 }}>\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <Icon type=\"inbox\" />\r\n                                </p>\r\n                                <p className=\"ant-upload-text\">点击上传</p>\r\n                            </Upload.Dragger>\r\n                        )}\r\n                    </Form.Item>\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            bottom: 0,\r\n                            width: '100%',\r\n                            borderTop: '1px solid #e9e9e9',\r\n                            padding: '10px 16px',\r\n                            background: '#fff',\r\n                            textAlign: 'right',\r\n                        }}\r\n                    >\r\n                        <Button onClick={() => { setAddVisible(false) }} style={{ marginRight: 8 }}>\r\n                            取消\r\n                        </Button>\r\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(props.form.getFieldsError())}>\r\n                            确认\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </Drawer>\r\n            <Modal\r\n                visible={showImage}\r\n                onCancel={() => setShowImage(false)}\r\n                footer={null}\r\n                destroyOnClose={true}\r\n            >\r\n                <img src={imgSrc} alt=\"\" style={{ width: \"100%\" }} />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FirstPageBanner = Form.create({ name: 'coordinated' })(FirstPageBannerWrap);\r\n\r\nexport default FirstPageBanner"],"sourceRoot":""}