{"version":3,"sources":["components/AuditBox/index.tsx","webpack:///./src/pages/audit/productAudit/index.less?7d01","pages/audit/productAudit/index.less","pages/audit/productAudit/productAuditMsgModal.tsx","pages/audit/productAudit/index.tsx"],"names":["AuditBox","_React$Component","Object","E_pet_admin_web_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","E_pet_admin_web_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_pet_admin_web_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","E_pet_admin_web_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_pet_admin_web_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","Boxes","color","content","react__WEBPACK_IMPORTED_MODULE_5__","antd__WEBPACK_IMPORTED_MODULE_6__","props","type","React","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","TabPane","Tabs","TextArea","Input","statusList","PopImage","imgSrc","react","src","alt","style","width","ProductAuditMsgModal","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","state","auditValue","audit","auditcontent","productAuthId","onChange","e","setState","target","submit","axios","method","url","data","remark","then","res","message","success","setTimeout","window","location","reload","error","inherits","createClass","nextProps","_this2","_this$props$data","images","productKind","productname","title","price","introduction","_this$props$brandData","brandData","name","logoImg","_this$props$merchantD","merchantData","merchantName","merchantAddress","merchantBeginTime","merchantEndTime","merchantCity","merchantTel","merchantIcon","_this$props$stockData","stockData","stockAttribute","stockPrice","stockNum","stockSalesVolume","imgsWraps","map","item","index","popover","addr","placement","trigger","autoAdjustOverflow","records","auditname","cadminId","status","audittime","ct","moment","parseInt","format","TextBox","marginBottom","placeholder","rows","modal","visible","className","onCancel","cancelModal","onOk","footer","textAlign","margin","es_radio","Group","buttonStyle","bind","Button","es_button","onClick","tabs","defaultActiveKey","size","tab","marginTop","table","columns","dataIndex","dataSource","pagination","pageSize","locale","filterConfirm","filterReset","emptyText","Paragraph","Typography","ProductAuditPage","selectedRowKeys","loading","filteredInfo","sortedInfo","order","tableData","productData","time","address","modalProductDetailShow","total","getProductList","page","That","assertThisInitialized","apiGetProductList","id","userid","nickname","publisher","username","productId","typeId","creatTime","modifiedTime","mt","resTableData","onSelectChange","console","log","handleChange","filters","sorter","history","current","modalProductDetail","productid","productTitle","productPrice","imgMsgs","brandId","merchantId","tel","icon","city","beginTime","endTime","stockId","attribute","num","salesVolume","_this$state","render","text","record","Modal","okText","cursor","ellipsis","a","b","sortOrder","tag","rowSelection","_this$state2","match","params","breadcrumb","Item","href","defaultCurrent","productAuditMsgModal_ProductAuditMsgModal"],"mappings":"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","file":"static/js/7.ae8e745f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Tag } from \"antd\";\r\n\r\ninterface IAuditBoxProps {\r\n    type: number\r\n}\r\n\r\nexport class AuditBox extends React.Component<IAuditBoxProps> {\r\n\r\n    public render() {\r\n        const Boxes = [{\r\n            color: \"#108ee9\",\r\n            content: \"待审核\"\r\n        }, {\r\n            color: \"#87d068\",\r\n            content: \"审核通过\"\r\n        }, {\r\n            color: \"#f50\",\r\n            content: \"审核驳回\"\r\n        },{\r\n            color: \"#2db7f5\",\r\n            content: \"已下架\"\r\n        }]\r\n        return (\r\n            <div>\r\n                <Tag color={Boxes[this.props.type].color}>{Boxes[this.props.type].content}</Tag>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ProductAuditMsgModal .ProductAuditMsgModalContent {\\n  display: flex;\\n  flex-wrap: wrap;\\n}\\n.ProductAuditMsgModal .ProductAuditMsgModalContent p {\\n  width: 50%;\\n}\\n.ProductAuditMsgModal .ProductAuditMsgModalContent .imgWrap {\\n  display: flex;\\n  overflow-x: auto;\\n  margin: 21px 0;\\n}\\n.ProductAuditMsgModal .ProductAuditMsgModalContent .imgWrap div {\\n  width: 20%;\\n  margin: 0 4px;\\n  flex: none;\\n}\\n.ProductAuditMsgModal .ProductAuditMsgModalContent .imgWrap div img {\\n  width: 100%;\\n}\\n.ProductAuditMsgModal .ProductAuditMsgModalContent .ant-table-wrapper {\\n  width: 100%;\\n  margin-bottom: 0.5rem;\\n}\\n\", \"\"]);\n\n","import * as React from 'react';\r\nimport { Modal, Tabs, Popover, Radio, message, Input ,Table ,Button} from 'antd'\r\nimport './index.less'\r\nimport axios from '../../../util/Axios';\r\nimport moment from 'moment'\r\n\r\nconst TabPane = Tabs.TabPane;\r\nconst { TextArea } = Input;\r\n\r\nconst statusList = [\"\",\"待审核\",\"审核通过\",\"审核驳回\"]\r\n\r\ninterface Data {\r\n    order: string,\r\n    productKind: string,\r\n    productname: string,\r\n    title: string,\r\n    price: number,\r\n    time: string,\r\n    address: string,\r\n    images: string[],\r\n    introduction: string,\r\n}\r\n\r\ninterface BrandData {\r\n    name: string\r\n    logoImg: string\r\n}\r\n\r\ninterface MerchantData {\r\n    merchantName: string\r\n    merchantAddress: string\r\n    merchantTel: string\r\n    merchantIcon: string\r\n    merchantCity: string\r\n    merchantBeginTime: string\r\n    merchantEndTime: string\r\n}\r\n\r\ninterface StockData {\r\n    stockAttribute: string\r\n    stockPrice: string\r\n    stockNum: number\r\n    stockSalesVolume: number\r\n}\r\n\r\ninterface ProductAuditMsgModalProps {\r\n    data: Data\r\n    audit: number,\r\n    // auditcontent: string,\r\n    records:any[],\r\n    productAuthId: number,\r\n    brandData: BrandData\r\n    merchantData: MerchantData\r\n    stockData: StockData\r\n    visible: boolean,\r\n    cancelModal: () => void\r\n}\r\n\r\nconst PopImage = (imgSrc: string) => (\r\n    <img src={imgSrc} alt=\"\" style={{ width: 260 }} />\r\n)\r\n\r\nexport class ProductAuditMsgModal extends React.Component<ProductAuditMsgModalProps, any> {\r\n    public state = {\r\n        auditValue: this.props.audit,\r\n        auditcontent: \"\",\r\n        productAuthId: \"\"\r\n    }\r\n    public componentWillReceiveProps(nextProps: ProductAuditMsgModalProps) {\r\n        this.setState({\r\n            auditValue: nextProps.audit,\r\n        })\r\n    }\r\n\r\n    public onChange = (e: any) => {\r\n        this.setState({\r\n            auditValue: e.target.value,\r\n        })\r\n    };\r\n\r\n    public submit = () => {\r\n        axios({\r\n            method: \"post\",\r\n            url: `/audit/product`,\r\n            data: {\r\n                audit: this.state.auditValue,\r\n                remark:this.state.auditcontent,\r\n                productAuthId: this.props.productAuthId\r\n            }\r\n        }).then((res: any) => {\r\n            if (res) {\r\n                message.success(\"审核成功\")\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 500);\r\n            } else {\r\n                message.error(\"审核失败\")\r\n            }\r\n        })\r\n    }\r\n\r\n    public render() {\r\n        const { images, productKind, productname, title, price, introduction } = this.props.data\r\n\r\n        const { name, logoImg } = this.props.brandData\r\n\r\n        const { merchantName, merchantAddress\r\n            , merchantBeginTime, merchantEndTime\r\n            , merchantCity, merchantTel, merchantIcon } = this.props.merchantData\r\n\r\n        const { stockAttribute, stockPrice, stockNum, stockSalesVolume } = this.props.stockData\r\n        const imgsWraps = images.map((item: any, index: number) => {\r\n            return (\r\n                <div key={index}>\r\n                    <Popover content={PopImage(item.addr)} placement=\"top\" trigger=\"hover\"\r\n                        autoAdjustOverflow={false}\r\n                    >\r\n                        <img src={item.addr} alt=\"\" />\r\n                    </Popover>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        const columns = [{\r\n            title: '审核人员',\r\n            dataIndex: 'auditname',\r\n            key: 'auditname',\r\n        }, {\r\n            title: '审核状态',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n        }, {\r\n            title: '审核时间',\r\n            dataIndex: 'audittime',\r\n            key: 'audittime',\r\n        }, {\r\n            title: '备注',\r\n            dataIndex: 'remark',\r\n            key: 'remark',\r\n        }];\r\n\r\n        const records = this.props.records.map((item:any)=>{\r\n            return {\r\n                auditname:item.cadminId.name,\r\n                status:statusList[item.status],\r\n                audittime:item.ct ? moment(parseInt(item.ct,10)).format('YYYY-MM-DD H:mm:ss') : \"----\",\r\n                remark:item.remark\r\n            }\r\n        })\r\n\r\n        const TextBox =\r\n\r\n        this.state.auditValue === 2 ?\r\n            <TextArea\r\n                style={{\r\n                    marginBottom: 10\r\n                }}\r\n                placeholder=\"驳回理由\"\r\n                rows={3} value={this.state.auditcontent} onChange={(e: any) => {\r\n                    this.setState({\r\n                        auditcontent: e.target.value\r\n                    })\r\n                }} />\r\n            : \"\"\r\n        \r\n        return (\r\n            <div>\r\n                <Modal width={800} visible={this.props.visible} className=\"ProductAuditMsgModal\"\r\n                    onCancel={this.props.cancelModal}\r\n                    onOk={this.submit}\r\n                    footer={[\r\n                        <div key=\"audit\" style={{textAlign:\"left\",margin:\"10px 0\"}}>\r\n                            <Radio.Group value={this.state.auditValue} buttonStyle=\"solid\" onChange={this.onChange.bind(this)}>\r\n                                <Radio.Button value={0}>待审核</Radio.Button>\r\n                                <Radio.Button value={1}>审核通过</Radio.Button>\r\n                                <Radio.Button value={2}>审核驳回</Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>,\r\n                        TextBox,\r\n                        <Button key=\"back\" onClick={this.props.cancelModal}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" onClick={this.submit}>\r\n                            确定\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <Tabs defaultActiveKey=\"1\" size=\"large\">\r\n                        <TabPane tab=\"商品详情\" key=\"1\">\r\n                            <div className=\"ProductAuditMsgModalContent\">\r\n                                <p>\r\n                                    <span>商品名称：</span>\r\n                                    <span>{productname}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>商品标题：</span>\r\n                                    <span>{title}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>商品类别：</span>\r\n                                    <span>{productKind}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>商品价格：</span>\r\n                                    <span>{price}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>商品重量：</span>\r\n                                    <span>100</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>商品描述：</span>\r\n                                    <span>{introduction}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>发布区域：</span>\r\n                                    <span>100</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>联系人：</span>\r\n                                    <span>100</span>\r\n                                </p>\r\n                                <div>\r\n                                    <span>商品头部照片</span>\r\n                                    <div className=\"imgWrap\">\r\n                                        {imgsWraps}\r\n                                    </div>\r\n                                    <span>商品照片</span>\r\n                                    <div className=\"imgWrap\">\r\n                                        {imgsWraps}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane tab=\"商品品牌\" key=\"2\">\r\n                            <div className=\"ProductAuditMsgModalContent\">\r\n                                <p>\r\n                                    <span>品牌名：</span>\r\n                                    <span>{name}</span>\r\n                                </p>\r\n                                <div style={{ width: \"100%\" }}>\r\n                                    <span>品牌logo:</span>\r\n                                    <div className=\"\">\r\n                                        <Popover content={PopImage(logoImg)} placement=\"right\" trigger=\"hover\"\r\n                                            autoAdjustOverflow={false}\r\n                                        >\r\n                                            <img src={logoImg} alt=\"\" style={{ width: 80, marginTop: 20 }} />\r\n                                        </Popover>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane tab=\"店铺信息\" key=\"3\">\r\n                            <div className=\"ProductAuditMsgModalContent\">\r\n                                <p>\r\n                                    <span>店铺名：</span>\r\n                                    <span>{merchantName}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>店铺地址：</span>\r\n                                    <span>{merchantCity}  {merchantAddress}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>店铺电话：</span>\r\n                                    <span>{merchantTel}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>店铺icon：</span>\r\n                                    <span>{merchantIcon}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>营业时间：</span>\r\n                                    <span>{merchantBeginTime}至{merchantEndTime}</span>\r\n                                </p>\r\n                                <div style={{ width: \"100%\" }}>\r\n                                    <span>品牌logo:</span>\r\n                                    <div className=\"\">\r\n                                        <Popover content={PopImage(logoImg)} placement=\"right\" trigger=\"hover\"\r\n                                            autoAdjustOverflow={false}\r\n                                        >\r\n                                            <img src={logoImg} alt=\"\" style={{ width: 80, marginTop: 20 }} />\r\n                                        </Popover>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane tab=\"库存信息\" key=\"4\">\r\n                            <div className=\"ProductAuditMsgModalContent\">\r\n                                <p>\r\n                                    <span>库存属性：</span>\r\n                                    <span>{stockAttribute}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>库存量：</span>\r\n                                    <span>{stockNum}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>库存销量：</span>\r\n                                    <span>{stockSalesVolume}</span>\r\n                                </p>\r\n                                <p>\r\n                                    <span>价格：</span>\r\n                                    <span>{stockPrice}</span>\r\n                                </p>\r\n                            </div>\r\n                        </TabPane>\r\n                        {/* <TabPane tab=\"审核\" key=\"5\">\r\n                            <div className=\"ProductAuditMsgModalContent\">\r\n                                <Radio.Group value={this.state.auditValue} buttonStyle=\"solid\" onChange={this.onChange.bind(this)}>\r\n                                    <Radio.Button value={0}>待审核</Radio.Button>\r\n                                    <Radio.Button value={1}>审核通过</Radio.Button>\r\n                                    <Radio.Button value={2}>审核驳回</Radio.Button>\r\n                                </Radio.Group>\r\n                            </div>\r\n\r\n                            {\r\n                                this.state.auditValue === 2 ?\r\n                                    <TextArea\r\n                                        style={{\r\n                                            marginTop: 10\r\n                                        }}\r\n                                        placeholder=\"驳回理由\"\r\n                                        rows={3} value={this.state.auditcontent} onChange={(e: any) => {\r\n                                            this.setState({\r\n                                                auditcontent: e.target.value\r\n                                            })\r\n                                        }} />\r\n                                    : \"\"\r\n                            }\r\n                        </TabPane> */}\r\n                        <TabPane tab=\"审核记录\" key=\"6\">\r\n                        <Table \r\n                            columns={columns}\r\n                            dataSource={records}\r\n                            pagination={{ pageSize: 5 }}\r\n                            locale={{ filterConfirm: \"确定\", filterReset: \"重置\", emptyText: \"暂无数据\" }}\r\n                        />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  Table, message, Breadcrumb,Typography ,Modal,Tag\r\n} from 'antd';\r\nimport axios from '../../../util/Axios';\r\nimport { ProductAuditMsgModal } from './productAuditMsgModal';\r\nimport moment from 'moment'\r\nimport { apiGetProductList } from '../../api';\r\nimport { AuditBox } from '../../../components/AuditBox';\r\nconst { Paragraph } = Typography;\r\n// const auditStatus = [\"待审核\", \"审核通过\", \"审核驳回\"]\r\n\r\nexport default class ProductAuditPage extends React.Component<any, any> {\r\n  public state = {\r\n    selectedRowKeys: [], // Check here to configure the default column\r\n    loading: false,\r\n    filteredInfo: null,\r\n    sortedInfo: {\r\n      order: \"\",\r\n    },\r\n    tableData: [],\r\n    productAuthId: 0,\r\n    audit: 0,\r\n    // auditcontent:\"\",\r\n    productData: {\r\n      order: \"\",\r\n      \"productKind\": \"\",\r\n      \"productname\": \"\",\r\n      title: \"\",\r\n      price: 0,\r\n      time: \"\",\r\n      address: \"\",\r\n      images: [],\r\n      introduction: \"\",\r\n    },\r\n    brandData: {\r\n      name:\"\",\r\n      logoImg:\"\"\r\n    },\r\n    merchantData:{\r\n      merchantName:\"\",\r\n      merchantAddress:\"\",\r\n      merchantTel:\"\",\r\n      merchantIcon:\"\",\r\n      merchantCity:``,\r\n      merchantBeginTime:``,\r\n      merchantEndTime:``,\r\n    },\r\n    stockData:{\r\n      stockAttribute:\"\",\r\n      stockPrice:``,\r\n      stockNum:0,\r\n      stockSalesVolume:0\r\n    },\r\n    modalProductDetailShow: false,\r\n    records:[],\r\n    total:0\r\n  };\r\n\r\n  public getProductList = (page:number,size:number,status:string[])=>{\r\n    const That = this\r\n    apiGetProductList(page,size,status).then((res: any) => {\r\n      if (res&& res.data&&res.data.length > 0) {\r\n        const tableData = res.data.map((item: any, index: number) => {\r\n          return {\r\n            key: item.id,  // key 应带对应data id \r\n            name: item.userid.nickname ? item.userid.nickname : \"----\",\r\n            publisher: item.userid.username ? item.userid.username : \"----\",\r\n            productKind: item.productId.typeId.name ? item.productId.typeId.name : \"----\",\r\n            price: item.productId.price ? item.productId.price : \"----\",\r\n            title: item.title ? item.title : \"----\",\r\n            productname: item.productId.name ? item.productId.name : \"----\",\r\n            status: item.audit,\r\n            // auditcontent:item.content, // 驳回理由\r\n            creatTime: item.ct ? item.ct : \"----\",\r\n            modifiedTime: item.mt ? moment(parseInt(item.mt,10)).format('YYYY-MM-DD H:mm:ss') : \"----\",\r\n            productId: item.productId.id\r\n          }\r\n        })\r\n        That.setState({\r\n          \"tableData\": tableData,\r\n          resTableData: res.data,\r\n          total:res.total\r\n        })\r\n      }else{\r\n        That.setState({\r\n          \"tableData\": [],\r\n          resTableData: [],\r\n          total:0\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.getProductList(1,10,[\"0\",\"1\",\"2\"])\r\n  }\r\n\r\n  public onSelectChange = (selectedRowKeys: any) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  }\r\n  public handleChange = (pagination: any, filters: any, sorter: any) => {\r\n    this.props.history.push(`/home/productAudit/${pagination.current}`)\r\n    this.getProductList(pagination.current,pagination.pageSize,filters.status ?filters.status:[\"0\",\"1\",\"2\"])\r\n    console.log('Various parameters', pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter,\r\n    });\r\n  }\r\n\r\n  public modalProductDetail = (productAuthId:string,productid: string, productKind: string,\r\n    productname: string, productTitle: string, productPrice: number,audit:number ,auditcontent:string) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `/detail/product?id=${productid}`,\r\n    }).then((res: any) => {\r\n      console.log(res)\r\n      if (res) {\r\n        this.setState({\r\n          modalProductDetailShow: true,\r\n          \"productAuthId\": productAuthId,\r\n          \"audit\": audit,\r\n          \"auditcontent\":auditcontent,\r\n          productData: {\r\n            order: \"string\",\r\n            \"productKind\": productKind,\r\n            \"productname\": productname,\r\n            price: productPrice,\r\n            title: productTitle,\r\n            time: \"string\",\r\n            address: \"string\",\r\n            images: res.imgMsgs ? res.imgMsgs : [],\r\n            introduction: res.content ? res.content : \"----\",\r\n          },\r\n          brandData: {\r\n            name: res.brandId.name,\r\n            logoImg: res.brandId.logoImg\r\n          },\r\n          merchantData:{\r\n            merchantName:res.merchantId.name,\r\n            merchantAddress:res.merchantId.address,\r\n            merchantTel:res.merchantId.tel,\r\n            merchantIcon:res.merchantId.icon,\r\n            merchantCity:res.merchantId.city,\r\n            merchantBeginTime:res.merchantId.beginTime,\r\n            merchantEndTime:res.merchantId.endTime,\r\n          },\r\n          stockData:{\r\n            stockAttribute:res.stockId.attribute,\r\n            stockPrice:res.stockId.price,\r\n            stockNum:res.stockId.num,\r\n            stockSalesVolume:res.stockId.salesVolume,\r\n          },\r\n          records:res.records\r\n        })\r\n      } else {\r\n        message.error(\"数据出错了\")\r\n      }\r\n    })\r\n  }\r\n\r\n  public render() {\r\n\r\n    const { selectedRowKeys }: any = this.state;\r\n\r\n    let { filteredInfo, sortedInfo }: any = this.state;\r\n\r\n    filteredInfo = filteredInfo || {};\r\n\r\n    sortedInfo = sortedInfo || {};\r\n\r\n    const columns = [{\r\n      title: '用户名',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    }, {\r\n      title: '发布人',\r\n      dataIndex: 'publisher',\r\n      key: 'publisher',\r\n    }, {\r\n      title: '商品类别',\r\n      dataIndex: 'productKind',\r\n      key: 'productKind',\r\n    }, {\r\n      title: '价格',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    }, {\r\n      title: '商品标题',\r\n      dataIndex: 'title',\r\n      key: 'title',\r\n      render: (text: any, record: any) => {\r\n        return (\r\n          <div onClick={()=>{\r\n            Modal.success({\r\n              title:\"商品标题\",\r\n              content:record.title,\r\n              okText:\"确定\"\r\n            })\r\n          }} style={{cursor:\"pointer\"}}>\r\n            <Paragraph ellipsis={true} style={{width:100}}>\r\n              {\r\n                record.title\r\n              }\r\n            </Paragraph>\r\n          </div>\r\n\r\n        )\r\n      }\r\n    }, {\r\n      title: '商品名称',\r\n      dataIndex: 'productname',\r\n      key: 'productname',\r\n    }, {\r\n      title: '状态',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: [\r\n        { text: '待审核', value: \"0\" },\r\n        { text: '审核通过', value: \"1\" },\r\n        { text: '审核驳回', value: \"2\" },\r\n      ],\r\n      render: (text: any, record: any) => {\r\n        return (\r\n          <AuditBox type={record.status}/>\r\n          // <span>{auditStatus[record.status]}</span>\r\n        )\r\n      }\r\n    }, {\r\n      title: '创建时间',\r\n      dataIndex: 'creatTime',\r\n      key: 'creatTime',\r\n      render: (text: any, record: any) => {\r\n        return (\r\n          <span>{moment(parseInt(record.creatTime, 10)).format('YYYY-MM-DD H:mm:ss')}</span>\r\n        )\r\n      },\r\n      sorter: (a: any, b: any) => parseInt(a.creatTime, 10) - parseInt(b.creatTime, 10),\r\n      sortOrder: sortedInfo.order,\r\n    }, {\r\n      title: '最后修改时间',\r\n      dataIndex: 'modifiedTime',\r\n      key: 'modifiedTime',\r\n    }, {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      key: 'operation',\r\n      render: (text: any, record: any) => {\r\n        return (\r\n          <Tag \r\n          style={{\r\n            textAlign:\"center\",\r\n            cursor:\"pointer\"\r\n          }}\r\n          color=\"#2db7f5\" onClick={() =>\r\n            this.modalProductDetail(\r\n              record.key,\r\n              record.productId,\r\n              record.productKind,\r\n              record.productname,\r\n              record.title,\r\n              record.price,\r\n              record.status,\r\n              record.auditcontent)}>审核</Tag>\r\n        )\r\n      }\r\n    }];\r\n\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange\r\n    };\r\n\r\n    const { tableData, modalProductDetailShow, productData, \r\n      brandData ,merchantData ,stockData ,productAuthId ,audit ,\r\n      records,total}  = this.state\r\n\r\n    const {page} = this.props.match.params\r\n\r\n    return (\r\n      <div>\r\n        <Breadcrumb style={{ textAlign: \"left\", marginBottom: 25 }}>\r\n          <Breadcrumb.Item>审核</Breadcrumb.Item>\r\n          <Breadcrumb.Item>\r\n            <a href=\"\">商品审核</a>\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Table rowSelection={rowSelection} columns={columns} dataSource={tableData}\r\n          pagination={{ pageSize: 10 ,\"total\":total,defaultCurrent:parseInt(page,10)}}\r\n          onChange={this.handleChange}\r\n          locale={{ filterConfirm: \"确定\", filterReset: \"重置\", emptyText: \"暂无数据\" }}\r\n        />\r\n        <ProductAuditMsgModal \r\n          productAuthId={productAuthId}\r\n          audit={audit}\r\n          // auditcontent={auditcontent}\r\n          records={records}\r\n          data={productData}\r\n          brandData={brandData}\r\n          merchantData={merchantData}\r\n          stockData={stockData}\r\n          cancelModal={() => this.setState({\r\n            modalProductDetailShow: false\r\n          })}\r\n          visible={modalProductDetailShow} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}