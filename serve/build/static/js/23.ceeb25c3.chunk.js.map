{"version":3,"sources":["pages/user/password.tsx"],"names":["PasswordPageWrap","state","oldpassword","newpassword","newpassword2","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","console","log","axios","method","url","data","then","res","success","localStorage","setItem","token","message","msg","setTimeout","window","location","reload","error","handleDifferPassword","rule","value","callback","getFieldValue","handleConfirmPassword","fieldsError","_this2","this","_this$props$form","getFieldDecorator","getFieldsError","_this$state","react__WEBPACK_IMPORTED_MODULE_5__","antd__WEBPACK_IMPORTED_MODULE_7__","style","textAlign","marginBottom","Item","href","antd__WEBPACK_IMPORTED_MODULE_8__","Object","assign","labelCol","span","wrapperCol","onSubmit","label","hasFeedback","initialValue","setFieldsValue","rules","required","antd__WEBPACK_IMPORTED_MODULE_9__","placeholder","onChange","setState","target","validator","Password","antd__WEBPACK_IMPORTED_MODULE_10__","type","block","htmlType","className","marginLeft","disabled","keys","some","field","React","PasswordPage","Form","create","name"],"mappings":"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","file":"static/js/23.ceeb25c3.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Breadcrumb, Form, Input, Button, message\r\n} from 'antd';\r\nimport axios from '../../util/Axios';\r\n\r\nfunction hasErrors(fieldsError: any) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass PasswordPageWrap extends React.Component<any, any> {\r\n  public state = {\r\n    oldpassword: \"\",\r\n    newpassword: \"\",\r\n    newpassword2: \"\"\r\n  }\r\n  public handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err: any, values: { oldpassword: string, newpassword: string, newpassword2: string }) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        axios({\r\n          method: \"post\",\r\n          url: `/user/password`,\r\n          data: {\r\n            oldpassword: values.oldpassword,\r\n            newpassword: values.newpassword,\r\n            newpassword2: values.newpassword2\r\n          }\r\n        }).then((res: any) => {\r\n          if (res.success) {\r\n            localStorage.setItem(\"token\", res.token)\r\n            message.success(res.msg)\r\n            setTimeout(() => {\r\n              window.location.reload()\r\n            }, 500);\r\n          } else {\r\n            message.error(res.msg)\r\n          }\r\n        })\r\n      }\r\n    });\r\n  };\r\n\r\n  public handleDifferPassword = (rule: any, value: any, callback: any) => {\r\n    const { getFieldValue } = this.props.form\r\n    if (value && value === getFieldValue('oldpassword')) {\r\n      callback('不可使用旧密码！')\r\n    }\r\n    callback()\r\n  }\r\n\r\n  public handleConfirmPassword = (rule: any, value: any, callback: any) => {\r\n    const { getFieldValue } = this.props.form\r\n    if (value && value !== getFieldValue('newpassword')) {\r\n      callback('两次输入不一致！')\r\n    }\r\n    callback()\r\n  }\r\n\r\n  public render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 4 },\r\n    };\r\n    const { getFieldDecorator, getFieldsError, } = this.props.form;\r\n    const { oldpassword, newpassword, newpassword2 } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Breadcrumb style={{ textAlign: \"left\", marginBottom: 25 }}>\r\n          <Breadcrumb.Item>用户管理</Breadcrumb.Item>\r\n          <Breadcrumb.Item>\r\n            <a href=\"\">修改密码</a>\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n          <Form.Item label=\"旧密码\" hasFeedback={true}>\r\n            {getFieldDecorator('oldpassword', {\r\n              initialValue: \"\",\r\n              setFieldsValue: oldpassword,\r\n              rules: [{ required: true, message: '请输入旧密码!' }],\r\n            })(\r\n              <Input placeholder=\"旧密码\" onChange={(e: any) => this.setState({ oldpassword: e.target.value })} />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"新密码\">\r\n            {getFieldDecorator('newpassword', {\r\n              initialValue: \"\",\r\n              setFieldsValue: newpassword,\r\n              rules: [\r\n                {\r\n                  required: true, message: '请输入新密码!'\r\n                },\r\n                {\r\n                  validator: this.handleDifferPassword\r\n                }\r\n              ],\r\n            })(\r\n              <Input.Password placeholder=\"新密码\" onChange={(e: any) => this.setState({ newpassword: e.target.value })} />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"确认新密码\">\r\n            {getFieldDecorator('newpassword2', {\r\n              initialValue: \"\",\r\n              setFieldsValue: newpassword2,\r\n              rules: [\r\n                {\r\n                  required: true, message: '再次输入新密码!'\r\n                },\r\n                {\r\n                  validator: this.handleConfirmPassword\r\n                }],\r\n            })(\r\n              <Input.Password placeholder=\"再次输入新密码\" onChange={(e: any) => this.setState({ newpassword2: e.target.value })} />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" block={true} htmlType=\"submit\"\r\n              className=\"login-form-button\" style={{ marginLeft: \"50%\" }}\r\n              disabled={hasErrors(getFieldsError())}>\r\n              修 改 密 码\r\n          </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst PasswordPage = Form.create({ name: 'validate_other' })(PasswordPageWrap);\r\n\r\nexport default PasswordPage"],"sourceRoot":""}